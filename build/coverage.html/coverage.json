{"/home/travis/build/npmtest/node-npmtest-pathfinding/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_pathfinding */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-pathfinding/lib.npmtest_pathfinding.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/lib.npmtest_pathfinding.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":56}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":62}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_pathfinding */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_pathfinding = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_pathfinding = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-pathfinding/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":55}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":69},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-pathfinding && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_pathfinding */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_pathfinding","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_pathfinding.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_pathfinding.rollup.js'] =","            local.assetsDict['/assets.npmtest_pathfinding.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_pathfinding.__dirname + '/lib.npmtest_pathfinding.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":46}}},"branchMap":{},"code":["module.exports = require('./src/PathFinding');",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/PathFinding.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/PathFinding.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":18,"column":2}}},"branchMap":{},"code":["module.exports = {","    'Heap'                      : require('heap'),","    'Node'                      : require('./core/Node'),","    'Grid'                      : require('./core/Grid'),","    'Util'                      : require('./core/Util'),","    'DiagonalMovement'          : require('./core/DiagonalMovement'),","    'Heuristic'                 : require('./core/Heuristic'),","    'AStarFinder'               : require('./finders/AStarFinder'),","    'BestFirstFinder'           : require('./finders/BestFirstFinder'),","    'BreadthFirstFinder'        : require('./finders/BreadthFirstFinder'),","    'DijkstraFinder'            : require('./finders/DijkstraFinder'),","    'BiAStarFinder'             : require('./finders/BiAStarFinder'),","    'BiBestFirstFinder'         : require('./finders/BiBestFirstFinder'),","    'BiBreadthFirstFinder'      : require('./finders/BiBreadthFirstFinder'),","    'BiDijkstraFinder'          : require('./finders/BiDijkstraFinder'),","    'IDAStarFinder'             : require('./finders/IDAStarFinder'),","    'JumpPointFinder'           : require('./finders/JumpPointFinder'),","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/core/Node.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/core/Node.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"Node","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":30}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":26,"column":1}},"2":{"start":{"line":15,"column":4},"end":{"line":15,"column":15}},"3":{"start":{"line":20,"column":4},"end":{"line":20,"column":15}},"4":{"start":{"line":25,"column":4},"end":{"line":25,"column":63}},"5":{"start":{"line":28,"column":0},"end":{"line":28,"column":22}}},"branchMap":{"1":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":46},"end":{"line":25,"column":50}},{"start":{"line":25,"column":53},"end":{"line":25,"column":61}}]}},"code":["/**"," * A node in grid. "," * This class holds some basic information about a node and custom "," * attributes may be added, depending on the algorithms' needs."," * @constructor"," * @param {number} x - The x coordinate of the node on the grid."," * @param {number} y - The y coordinate of the node on the grid."," * @param {boolean} [walkable] - Whether this node is walkable."," */","function Node(x, y, walkable) {","    /**","     * The x coordinate of the node on the grid.","     * @type number","     */","    this.x = x;","    /**","     * The y coordinate of the node on the grid.","     * @type number","     */","    this.y = y;","    /**","     * Whether this node can be walked through.","     * @type boolean","     */","    this.walkable = (walkable === undefined ? true : walkable);","}","","module.exports = Node;",""],"l":{"10":1,"15":0,"20":0,"25":0,"28":1}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/core/Grid.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/core/Grid.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":1,"31":0,"32":1,"33":0,"34":1,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"Grid","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":47}}},"2":{"name":"(anonymous_2)","line":49,"loc":{"start":{"line":49,"column":29},"end":{"line":49,"column":61}}},"3":{"name":"(anonymous_3)","line":83,"loc":{"start":{"line":83,"column":27},"end":{"line":83,"column":42}}},"4":{"name":"(anonymous_4)","line":95,"loc":{"start":{"line":95,"column":30},"end":{"line":95,"column":45}}},"5":{"name":"(anonymous_5)","line":109,"loc":{"start":{"line":109,"column":26},"end":{"line":109,"column":41}}},"6":{"name":"(anonymous_6)","line":121,"loc":{"start":{"line":121,"column":31},"end":{"line":121,"column":56}}},"7":{"name":"(anonymous_7)","line":144,"loc":{"start":{"line":144,"column":30},"end":{"line":144,"column":63}}},"8":{"name":"(anonymous_8)","line":223,"loc":{"start":{"line":223,"column":23},"end":{"line":223,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":29}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":53}},"3":{"start":{"line":12,"column":0},"end":{"line":38,"column":1}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":14}},"5":{"start":{"line":15,"column":4},"end":{"line":21,"column":5}},"6":{"start":{"line":16,"column":8},"end":{"line":16,"column":32}},"7":{"start":{"line":18,"column":8},"end":{"line":18,"column":40}},"8":{"start":{"line":19,"column":8},"end":{"line":19,"column":42}},"9":{"start":{"line":20,"column":8},"end":{"line":20,"column":33}},"10":{"start":{"line":27,"column":4},"end":{"line":27,"column":23}},"11":{"start":{"line":32,"column":4},"end":{"line":32,"column":25}},"12":{"start":{"line":37,"column":4},"end":{"line":37,"column":57}},"13":{"start":{"line":49,"column":0},"end":{"line":80,"column":2}},"14":{"start":{"line":50,"column":4},"end":{"line":51,"column":34}},"15":{"start":{"line":53,"column":4},"end":{"line":58,"column":5}},"16":{"start":{"line":54,"column":8},"end":{"line":54,"column":36}},"17":{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},"18":{"start":{"line":56,"column":12},"end":{"line":56,"column":41}},"19":{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},"20":{"start":{"line":62,"column":8},"end":{"line":62,"column":21}},"21":{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},"22":{"start":{"line":66,"column":8},"end":{"line":66,"column":52}},"23":{"start":{"line":69,"column":4},"end":{"line":77,"column":5}},"24":{"start":{"line":70,"column":8},"end":{"line":76,"column":9}},"25":{"start":{"line":71,"column":12},"end":{"line":75,"column":13}},"26":{"start":{"line":74,"column":16},"end":{"line":74,"column":45}},"27":{"start":{"line":79,"column":4},"end":{"line":79,"column":17}},"28":{"start":{"line":83,"column":0},"end":{"line":85,"column":2}},"29":{"start":{"line":84,"column":4},"end":{"line":84,"column":28}},"30":{"start":{"line":95,"column":0},"end":{"line":97,"column":2}},"31":{"start":{"line":96,"column":4},"end":{"line":96,"column":60}},"32":{"start":{"line":109,"column":0},"end":{"line":111,"column":2}},"33":{"start":{"line":110,"column":4},"end":{"line":110,"column":69}},"34":{"start":{"line":121,"column":0},"end":{"line":123,"column":2}},"35":{"start":{"line":122,"column":4},"end":{"line":122,"column":41}},"36":{"start":{"line":144,"column":0},"end":{"line":216,"column":2}},"37":{"start":{"line":145,"column":4},"end":{"line":152,"column":27}},"38":{"start":{"line":155,"column":4},"end":{"line":158,"column":5}},"39":{"start":{"line":156,"column":8},"end":{"line":156,"column":40}},"40":{"start":{"line":157,"column":8},"end":{"line":157,"column":18}},"41":{"start":{"line":160,"column":4},"end":{"line":163,"column":5}},"42":{"start":{"line":161,"column":8},"end":{"line":161,"column":40}},"43":{"start":{"line":162,"column":8},"end":{"line":162,"column":18}},"44":{"start":{"line":165,"column":4},"end":{"line":168,"column":5}},"45":{"start":{"line":166,"column":8},"end":{"line":166,"column":40}},"46":{"start":{"line":167,"column":8},"end":{"line":167,"column":18}},"47":{"start":{"line":170,"column":4},"end":{"line":173,"column":5}},"48":{"start":{"line":171,"column":8},"end":{"line":171,"column":40}},"49":{"start":{"line":172,"column":8},"end":{"line":172,"column":18}},"50":{"start":{"line":175,"column":4},"end":{"line":177,"column":5}},"51":{"start":{"line":176,"column":8},"end":{"line":176,"column":25}},"52":{"start":{"line":179,"column":4},"end":{"line":196,"column":5}},"53":{"start":{"line":180,"column":8},"end":{"line":180,"column":22}},"54":{"start":{"line":181,"column":8},"end":{"line":181,"column":22}},"55":{"start":{"line":182,"column":8},"end":{"line":182,"column":22}},"56":{"start":{"line":183,"column":8},"end":{"line":183,"column":22}},"57":{"start":{"line":184,"column":11},"end":{"line":196,"column":5}},"58":{"start":{"line":185,"column":8},"end":{"line":185,"column":22}},"59":{"start":{"line":186,"column":8},"end":{"line":186,"column":22}},"60":{"start":{"line":187,"column":8},"end":{"line":187,"column":22}},"61":{"start":{"line":188,"column":8},"end":{"line":188,"column":22}},"62":{"start":{"line":189,"column":11},"end":{"line":196,"column":5}},"63":{"start":{"line":190,"column":8},"end":{"line":190,"column":18}},"64":{"start":{"line":191,"column":8},"end":{"line":191,"column":18}},"65":{"start":{"line":192,"column":8},"end":{"line":192,"column":18}},"66":{"start":{"line":193,"column":8},"end":{"line":193,"column":18}},"67":{"start":{"line":195,"column":8},"end":{"line":195,"column":63}},"68":{"start":{"line":199,"column":4},"end":{"line":201,"column":5}},"69":{"start":{"line":200,"column":8},"end":{"line":200,"column":44}},"70":{"start":{"line":203,"column":4},"end":{"line":205,"column":5}},"71":{"start":{"line":204,"column":8},"end":{"line":204,"column":44}},"72":{"start":{"line":207,"column":4},"end":{"line":209,"column":5}},"73":{"start":{"line":208,"column":8},"end":{"line":208,"column":44}},"74":{"start":{"line":211,"column":4},"end":{"line":213,"column":5}},"75":{"start":{"line":212,"column":8},"end":{"line":212,"column":44}},"76":{"start":{"line":215,"column":4},"end":{"line":215,"column":21}},"77":{"start":{"line":223,"column":0},"end":{"line":243,"column":2}},"78":{"start":{"line":224,"column":4},"end":{"line":231,"column":37}},"79":{"start":{"line":233,"column":4},"end":{"line":238,"column":5}},"80":{"start":{"line":234,"column":8},"end":{"line":234,"column":39}},"81":{"start":{"line":235,"column":8},"end":{"line":237,"column":9}},"82":{"start":{"line":236,"column":12},"end":{"line":236,"column":70}},"83":{"start":{"line":240,"column":4},"end":{"line":240,"column":29}},"84":{"start":{"line":242,"column":4},"end":{"line":242,"column":19}},"85":{"start":{"line":245,"column":0},"end":{"line":245,"column":22}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":4}},{"start":{"line":15,"column":4},"end":{"line":15,"column":4}}]},"2":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":4}},{"start":{"line":61,"column":4},"end":{"line":61,"column":4}}]},"3":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":4}},{"start":{"line":65,"column":4},"end":{"line":65,"column":4}}]},"4":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":8},"end":{"line":65,"column":32}},{"start":{"line":65,"column":36},"end":{"line":65,"column":62}}]},"5":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":12},"end":{"line":71,"column":12}},{"start":{"line":71,"column":12},"end":{"line":71,"column":12}}]},"6":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":11},"end":{"line":96,"column":30}},{"start":{"line":96,"column":34},"end":{"line":96,"column":59}}]},"7":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":12},"end":{"line":110,"column":18}},{"start":{"line":110,"column":22},"end":{"line":110,"column":36}},{"start":{"line":110,"column":42},"end":{"line":110,"column":48}},{"start":{"line":110,"column":52},"end":{"line":110,"column":67}}]},"8":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":4},"end":{"line":155,"column":4}},{"start":{"line":155,"column":4},"end":{"line":155,"column":4}}]},"9":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":4},"end":{"line":160,"column":4}},{"start":{"line":160,"column":4},"end":{"line":160,"column":4}}]},"10":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":4},"end":{"line":165,"column":4}},{"start":{"line":165,"column":4},"end":{"line":165,"column":4}}]},"11":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":4},"end":{"line":170,"column":4}},{"start":{"line":170,"column":4},"end":{"line":170,"column":4}}]},"12":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":4},"end":{"line":175,"column":4}},{"start":{"line":175,"column":4},"end":{"line":175,"column":4}}]},"13":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":4},"end":{"line":179,"column":4}},{"start":{"line":179,"column":4},"end":{"line":179,"column":4}}]},"14":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":13},"end":{"line":180,"column":15}},{"start":{"line":180,"column":19},"end":{"line":180,"column":21}}]},"15":{"line":181,"type":"binary-expr","locations":[{"start":{"line":181,"column":13},"end":{"line":181,"column":15}},{"start":{"line":181,"column":19},"end":{"line":181,"column":21}}]},"16":{"line":182,"type":"binary-expr","locations":[{"start":{"line":182,"column":13},"end":{"line":182,"column":15}},{"start":{"line":182,"column":19},"end":{"line":182,"column":21}}]},"17":{"line":183,"type":"binary-expr","locations":[{"start":{"line":183,"column":13},"end":{"line":183,"column":15}},{"start":{"line":183,"column":19},"end":{"line":183,"column":21}}]},"18":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":11},"end":{"line":184,"column":11}},{"start":{"line":184,"column":11},"end":{"line":184,"column":11}}]},"19":{"line":185,"type":"binary-expr","locations":[{"start":{"line":185,"column":13},"end":{"line":185,"column":15}},{"start":{"line":185,"column":19},"end":{"line":185,"column":21}}]},"20":{"line":186,"type":"binary-expr","locations":[{"start":{"line":186,"column":13},"end":{"line":186,"column":15}},{"start":{"line":186,"column":19},"end":{"line":186,"column":21}}]},"21":{"line":187,"type":"binary-expr","locations":[{"start":{"line":187,"column":13},"end":{"line":187,"column":15}},{"start":{"line":187,"column":19},"end":{"line":187,"column":21}}]},"22":{"line":188,"type":"binary-expr","locations":[{"start":{"line":188,"column":13},"end":{"line":188,"column":15}},{"start":{"line":188,"column":19},"end":{"line":188,"column":21}}]},"23":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":11},"end":{"line":189,"column":11}},{"start":{"line":189,"column":11},"end":{"line":189,"column":11}}]},"24":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":4},"end":{"line":199,"column":4}},{"start":{"line":199,"column":4},"end":{"line":199,"column":4}}]},"25":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":8},"end":{"line":199,"column":10}},{"start":{"line":199,"column":14},"end":{"line":199,"column":45}}]},"26":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":4},"end":{"line":203,"column":4}},{"start":{"line":203,"column":4},"end":{"line":203,"column":4}}]},"27":{"line":203,"type":"binary-expr","locations":[{"start":{"line":203,"column":8},"end":{"line":203,"column":10}},{"start":{"line":203,"column":14},"end":{"line":203,"column":45}}]},"28":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":4},"end":{"line":207,"column":4}},{"start":{"line":207,"column":4},"end":{"line":207,"column":4}}]},"29":{"line":207,"type":"binary-expr","locations":[{"start":{"line":207,"column":8},"end":{"line":207,"column":10}},{"start":{"line":207,"column":14},"end":{"line":207,"column":45}}]},"30":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":4},"end":{"line":211,"column":4}},{"start":{"line":211,"column":4},"end":{"line":211,"column":4}}]},"31":{"line":211,"type":"binary-expr","locations":[{"start":{"line":211,"column":8},"end":{"line":211,"column":10}},{"start":{"line":211,"column":14},"end":{"line":211,"column":45}}]}},"code":["var Node = require('./Node');","var DiagonalMovement = require('./DiagonalMovement');","","/**"," * The Grid class, which serves as the encapsulation of the layout of the nodes."," * @constructor"," * @param {number|Array<Array<(number|boolean)>>} width_or_matrix Number of columns of the grid, or matrix"," * @param {number} height Number of rows of the grid."," * @param {Array<Array<(number|boolean)>>} [matrix] - A 0-1 matrix"," *     representing the walkable status of the nodes(0 or false for walkable)."," *     If the matrix is not supplied, all the nodes will be walkable.  */","function Grid(width_or_matrix, height, matrix) {","    var width;","","    if (typeof width_or_matrix !== 'object') {","        width = width_or_matrix;","    } else {","        height = width_or_matrix.length;","        width = width_or_matrix[0].length;","        matrix = width_or_matrix;","    }","","    /**","     * The number of columns of the grid.","     * @type number","     */","    this.width = width;","    /**","     * The number of rows of the grid.","     * @type number","     */","    this.height = height;","","    /**","     * A 2D array of nodes.","     */","    this.nodes = this._buildNodes(width, height, matrix);","}","","/**"," * Build and return the nodes."," * @private"," * @param {number} width"," * @param {number} height"," * @param {Array<Array<number|boolean>>} [matrix] - A 0-1 matrix representing"," *     the walkable status of the nodes."," * @see Grid"," */","Grid.prototype._buildNodes = function(width, height, matrix) {","    var i, j,","        nodes = new Array(height);","","    for (i = 0; i < height; ++i) {","        nodes[i] = new Array(width);","        for (j = 0; j < width; ++j) {","            nodes[i][j] = new Node(j, i);","        }","    }","","","    if (matrix === undefined) {","        return nodes;","    }","","    if (matrix.length !== height || matrix[0].length !== width) {","        throw new Error('Matrix size does not fit');","    }","","    for (i = 0; i < height; ++i) {","        for (j = 0; j < width; ++j) {","            if (matrix[i][j]) {","                // 0, false, null will be walkable","                // while others will be un-walkable","                nodes[i][j].walkable = false;","            }","        }","    }","","    return nodes;","};","","","Grid.prototype.getNodeAt = function(x, y) {","    return this.nodes[y][x];","};","","","/**"," * Determine whether the node at the given position is walkable."," * (Also returns false if the position is outside the grid.)"," * @param {number} x - The x coordinate of the node."," * @param {number} y - The y coordinate of the node."," * @return {boolean} - The walkability of the node."," */","Grid.prototype.isWalkableAt = function(x, y) {","    return this.isInside(x, y) && this.nodes[y][x].walkable;","};","","","/**"," * Determine whether the position is inside the grid."," * XXX: `grid.isInside(x, y)` is wierd to read."," * It should be `(x, y) is inside grid`, but I failed to find a better"," * name for this method."," * @param {number} x"," * @param {number} y"," * @return {boolean}"," */","Grid.prototype.isInside = function(x, y) {","    return (x >= 0 && x < this.width) && (y >= 0 && y < this.height);","};","","","/**"," * Set whether the node on the given position is walkable."," * NOTE: throws exception if the coordinate is not inside the grid."," * @param {number} x - The x coordinate of the node."," * @param {number} y - The y coordinate of the node."," * @param {boolean} walkable - Whether the position is walkable."," */","Grid.prototype.setWalkableAt = function(x, y, walkable) {","    this.nodes[y][x].walkable = walkable;","};","","","/**"," * Get the neighbors of the given node."," *"," *     offsets      diagonalOffsets:"," *  +---+---+---+    +---+---+---+"," *  |   | 0 |   |    | 0 |   | 1 |"," *  +---+---+---+    +---+---+---+"," *  | 3 |   | 1 |    |   |   |   |"," *  +---+---+---+    +---+---+---+"," *  |   | 2 |   |    | 3 |   | 2 |"," *  +---+---+---+    +---+---+---+"," *"," *  When allowDiagonal is true, if offsets[i] is valid, then"," *  diagonalOffsets[i] and"," *  diagonalOffsets[(i + 1) % 4] is valid."," * @param {Node} node"," * @param {DiagonalMovement} diagonalMovement"," */","Grid.prototype.getNeighbors = function(node, diagonalMovement) {","    var x = node.x,","        y = node.y,","        neighbors = [],","        s0 = false, d0 = false,","        s1 = false, d1 = false,","        s2 = false, d2 = false,","        s3 = false, d3 = false,","        nodes = this.nodes;","","    // ↑","    if (this.isWalkableAt(x, y - 1)) {","        neighbors.push(nodes[y - 1][x]);","        s0 = true;","    }","    // →","    if (this.isWalkableAt(x + 1, y)) {","        neighbors.push(nodes[y][x + 1]);","        s1 = true;","    }","    // ↓","    if (this.isWalkableAt(x, y + 1)) {","        neighbors.push(nodes[y + 1][x]);","        s2 = true;","    }","    // ←","    if (this.isWalkableAt(x - 1, y)) {","        neighbors.push(nodes[y][x - 1]);","        s3 = true;","    }","","    if (diagonalMovement === DiagonalMovement.Never) {","        return neighbors;","    }","","    if (diagonalMovement === DiagonalMovement.OnlyWhenNoObstacles) {","        d0 = s3 && s0;","        d1 = s0 && s1;","        d2 = s1 && s2;","        d3 = s2 && s3;","    } else if (diagonalMovement === DiagonalMovement.IfAtMostOneObstacle) {","        d0 = s3 || s0;","        d1 = s0 || s1;","        d2 = s1 || s2;","        d3 = s2 || s3;","    } else if (diagonalMovement === DiagonalMovement.Always) {","        d0 = true;","        d1 = true;","        d2 = true;","        d3 = true;","    } else {","        throw new Error('Incorrect value of diagonalMovement');","    }","","    // ↖","    if (d0 && this.isWalkableAt(x - 1, y - 1)) {","        neighbors.push(nodes[y - 1][x - 1]);","    }","    // ↗","    if (d1 && this.isWalkableAt(x + 1, y - 1)) {","        neighbors.push(nodes[y - 1][x + 1]);","    }","    // ↘","    if (d2 && this.isWalkableAt(x + 1, y + 1)) {","        neighbors.push(nodes[y + 1][x + 1]);","    }","    // ↙","    if (d3 && this.isWalkableAt(x - 1, y + 1)) {","        neighbors.push(nodes[y + 1][x - 1]);","    }","","    return neighbors;","};","","","/**"," * Get a clone of this grid."," * @return {Grid} Cloned grid."," */","Grid.prototype.clone = function() {","    var i, j,","","        width = this.width,","        height = this.height,","        thisNodes = this.nodes,","","        newGrid = new Grid(width, height),","        newNodes = new Array(height);","","    for (i = 0; i < height; ++i) {","        newNodes[i] = new Array(width);","        for (j = 0; j < width; ++j) {","            newNodes[i][j] = new Node(j, i, thisNodes[i][j].walkable);","        }","    }","","    newGrid.nodes = newNodes;","","    return newGrid;","};","","module.exports = Grid;",""],"l":{"1":1,"2":1,"12":1,"13":0,"15":0,"16":0,"18":0,"19":0,"20":0,"27":0,"32":0,"37":0,"49":1,"50":0,"53":0,"54":0,"55":0,"56":0,"61":0,"62":0,"65":0,"66":0,"69":0,"70":0,"71":0,"74":0,"79":0,"83":1,"84":0,"95":1,"96":0,"109":1,"110":0,"121":1,"122":0,"144":1,"145":0,"155":0,"156":0,"157":0,"160":0,"161":0,"162":0,"165":0,"166":0,"167":0,"170":0,"171":0,"172":0,"175":0,"176":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"195":0,"199":0,"200":0,"203":0,"204":0,"207":0,"208":0,"211":0,"212":0,"215":0,"223":1,"224":0,"233":0,"234":0,"235":0,"236":0,"240":0,"242":0,"245":1}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/core/DiagonalMovement.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/core/DiagonalMovement.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":6,"column":2}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":34}}},"branchMap":{},"code":["var DiagonalMovement = {","    Always: 1,","    Never: 2,","    IfAtMostOneObstacle: 3,","    OnlyWhenNoObstacles: 4","};","","module.exports = DiagonalMovement;"],"l":{"1":1,"8":1}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/core/Util.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/core/Util.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":0,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1,"80":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"backtrace","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":25}}},"2":{"name":"biBacktrace","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":35}}},"3":{"name":"pathLength","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":26}}},"4":{"name":"interpolate","line":59,"loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":37}}},"5":{"name":"expandPath","line":101,"loc":{"start":{"line":101,"column":0},"end":{"line":101,"column":26}}},"6":{"name":"smoothenPath","line":136,"loc":{"start":{"line":136,"column":0},"end":{"line":136,"column":34}}},"7":{"name":"compressPath","line":186,"loc":{"start":{"line":186,"column":0},"end":{"line":186,"column":28}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":14,"column":1}},"2":{"start":{"line":8,"column":4},"end":{"line":8,"column":34}},"3":{"start":{"line":9,"column":4},"end":{"line":12,"column":5}},"4":{"start":{"line":10,"column":8},"end":{"line":10,"column":27}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":36}},"6":{"start":{"line":13,"column":4},"end":{"line":13,"column":26}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":30}},"8":{"start":{"line":23,"column":0},"end":{"line":27,"column":1}},"9":{"start":{"line":24,"column":4},"end":{"line":25,"column":33}},"10":{"start":{"line":26,"column":4},"end":{"line":26,"column":41}},"11":{"start":{"line":28,"column":0},"end":{"line":28,"column":34}},"12":{"start":{"line":35,"column":0},"end":{"line":45,"column":1}},"13":{"start":{"line":36,"column":4},"end":{"line":36,"column":33}},"14":{"start":{"line":37,"column":4},"end":{"line":43,"column":5}},"15":{"start":{"line":38,"column":8},"end":{"line":38,"column":24}},"16":{"start":{"line":39,"column":8},"end":{"line":39,"column":20}},"17":{"start":{"line":40,"column":8},"end":{"line":40,"column":25}},"18":{"start":{"line":41,"column":8},"end":{"line":41,"column":25}},"19":{"start":{"line":42,"column":8},"end":{"line":42,"column":44}},"20":{"start":{"line":44,"column":4},"end":{"line":44,"column":15}},"21":{"start":{"line":46,"column":0},"end":{"line":46,"column":32}},"22":{"start":{"line":59,"column":0},"end":{"line":91,"column":1}},"23":{"start":{"line":60,"column":4},"end":{"line":62,"column":32}},"24":{"start":{"line":64,"column":4},"end":{"line":64,"column":22}},"25":{"start":{"line":65,"column":4},"end":{"line":65,"column":22}},"26":{"start":{"line":67,"column":4},"end":{"line":67,"column":28}},"27":{"start":{"line":68,"column":4},"end":{"line":68,"column":28}},"28":{"start":{"line":70,"column":4},"end":{"line":70,"column":18}},"29":{"start":{"line":72,"column":4},"end":{"line":88,"column":5}},"30":{"start":{"line":73,"column":8},"end":{"line":73,"column":28}},"31":{"start":{"line":75,"column":8},"end":{"line":77,"column":9}},"32":{"start":{"line":76,"column":12},"end":{"line":76,"column":18}},"33":{"start":{"line":79,"column":8},"end":{"line":79,"column":21}},"34":{"start":{"line":80,"column":8},"end":{"line":83,"column":9}},"35":{"start":{"line":81,"column":12},"end":{"line":81,"column":27}},"36":{"start":{"line":82,"column":12},"end":{"line":82,"column":25}},"37":{"start":{"line":84,"column":8},"end":{"line":87,"column":9}},"38":{"start":{"line":85,"column":12},"end":{"line":85,"column":27}},"39":{"start":{"line":86,"column":12},"end":{"line":86,"column":25}},"40":{"start":{"line":90,"column":4},"end":{"line":90,"column":16}},"41":{"start":{"line":92,"column":0},"end":{"line":92,"column":34}},"42":{"start":{"line":101,"column":0},"end":{"line":126,"column":1}},"43":{"start":{"line":102,"column":4},"end":{"line":107,"column":13}},"44":{"start":{"line":109,"column":4},"end":{"line":111,"column":5}},"45":{"start":{"line":110,"column":8},"end":{"line":110,"column":24}},"46":{"start":{"line":113,"column":4},"end":{"line":122,"column":5}},"47":{"start":{"line":114,"column":8},"end":{"line":114,"column":25}},"48":{"start":{"line":115,"column":8},"end":{"line":115,"column":29}},"49":{"start":{"line":117,"column":8},"end":{"line":117,"column":79}},"50":{"start":{"line":118,"column":8},"end":{"line":118,"column":46}},"51":{"start":{"line":119,"column":8},"end":{"line":121,"column":9}},"52":{"start":{"line":120,"column":12},"end":{"line":120,"column":43}},"53":{"start":{"line":123,"column":4},"end":{"line":123,"column":33}},"54":{"start":{"line":125,"column":4},"end":{"line":125,"column":20}},"55":{"start":{"line":127,"column":0},"end":{"line":127,"column":32}},"56":{"start":{"line":136,"column":0},"end":{"line":176,"column":1}},"57":{"start":{"line":137,"column":4},"end":{"line":145,"column":46}},"58":{"start":{"line":147,"column":4},"end":{"line":147,"column":12}},"59":{"start":{"line":148,"column":4},"end":{"line":148,"column":12}},"60":{"start":{"line":149,"column":4},"end":{"line":149,"column":25}},"61":{"start":{"line":151,"column":4},"end":{"line":172,"column":5}},"62":{"start":{"line":152,"column":8},"end":{"line":152,"column":24}},"63":{"start":{"line":153,"column":8},"end":{"line":153,"column":22}},"64":{"start":{"line":154,"column":8},"end":{"line":154,"column":22}},"65":{"start":{"line":155,"column":8},"end":{"line":155,"column":43}},"66":{"start":{"line":157,"column":8},"end":{"line":157,"column":24}},"67":{"start":{"line":158,"column":8},"end":{"line":165,"column":9}},"68":{"start":{"line":159,"column":12},"end":{"line":159,"column":32}},"69":{"start":{"line":161,"column":12},"end":{"line":164,"column":13}},"70":{"start":{"line":162,"column":16},"end":{"line":162,"column":31}},"71":{"start":{"line":163,"column":16},"end":{"line":163,"column":22}},"72":{"start":{"line":166,"column":8},"end":{"line":171,"column":9}},"73":{"start":{"line":167,"column":12},"end":{"line":167,"column":41}},"74":{"start":{"line":168,"column":12},"end":{"line":168,"column":41}},"75":{"start":{"line":169,"column":12},"end":{"line":169,"column":35}},"76":{"start":{"line":170,"column":12},"end":{"line":170,"column":35}},"77":{"start":{"line":173,"column":4},"end":{"line":173,"column":27}},"78":{"start":{"line":175,"column":4},"end":{"line":175,"column":19}},"79":{"start":{"line":177,"column":0},"end":{"line":177,"column":36}},"80":{"start":{"line":186,"column":0},"end":{"line":245,"column":1}},"81":{"start":{"line":189,"column":4},"end":{"line":191,"column":5}},"82":{"start":{"line":190,"column":8},"end":{"line":190,"column":20}},"83":{"start":{"line":193,"column":4},"end":{"line":202,"column":14}},"84":{"start":{"line":205,"column":4},"end":{"line":205,"column":34}},"85":{"start":{"line":206,"column":4},"end":{"line":206,"column":13}},"86":{"start":{"line":207,"column":4},"end":{"line":207,"column":13}},"87":{"start":{"line":210,"column":4},"end":{"line":210,"column":29}},"88":{"start":{"line":212,"column":4},"end":{"line":239,"column":5}},"89":{"start":{"line":215,"column":8},"end":{"line":215,"column":16}},"90":{"start":{"line":216,"column":8},"end":{"line":216,"column":16}},"91":{"start":{"line":219,"column":8},"end":{"line":219,"column":17}},"92":{"start":{"line":220,"column":8},"end":{"line":220,"column":17}},"93":{"start":{"line":223,"column":8},"end":{"line":223,"column":24}},"94":{"start":{"line":224,"column":8},"end":{"line":224,"column":24}},"95":{"start":{"line":227,"column":8},"end":{"line":227,"column":21}},"96":{"start":{"line":228,"column":8},"end":{"line":228,"column":21}},"97":{"start":{"line":231,"column":8},"end":{"line":231,"column":38}},"98":{"start":{"line":232,"column":8},"end":{"line":232,"column":17}},"99":{"start":{"line":233,"column":8},"end":{"line":233,"column":17}},"100":{"start":{"line":236,"column":8},"end":{"line":238,"column":9}},"101":{"start":{"line":237,"column":12},"end":{"line":237,"column":37}},"102":{"start":{"line":242,"column":4},"end":{"line":242,"column":29}},"103":{"start":{"line":244,"column":4},"end":{"line":244,"column":22}},"104":{"start":{"line":246,"column":0},"end":{"line":246,"column":36}}},"branchMap":{"1":{"line":67,"type":"cond-expr","locations":[{"start":{"line":67,"column":21},"end":{"line":67,"column":22}},{"start":{"line":67,"column":25},"end":{"line":67,"column":27}}]},"2":{"line":68,"type":"cond-expr","locations":[{"start":{"line":68,"column":21},"end":{"line":68,"column":22}},{"start":{"line":68,"column":25},"end":{"line":68,"column":27}}]},"3":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":8},"end":{"line":75,"column":8}},{"start":{"line":75,"column":8},"end":{"line":75,"column":8}}]},"4":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":12},"end":{"line":75,"column":21}},{"start":{"line":75,"column":25},"end":{"line":75,"column":34}}]},"5":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":80,"column":8}},{"start":{"line":80,"column":8},"end":{"line":80,"column":8}}]},"6":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":8},"end":{"line":84,"column":8}},{"start":{"line":84,"column":8},"end":{"line":84,"column":8}}]},"7":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":109,"column":4}},{"start":{"line":109,"column":4},"end":{"line":109,"column":4}}]},"8":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":12},"end":{"line":161,"column":12}},{"start":{"line":161,"column":12},"end":{"line":161,"column":12}}]},"9":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":8},"end":{"line":166,"column":8}},{"start":{"line":166,"column":8},"end":{"line":166,"column":8}}]},"10":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":4},"end":{"line":189,"column":4}},{"start":{"line":189,"column":4},"end":{"line":189,"column":4}}]},"11":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":8},"end":{"line":236,"column":8}},{"start":{"line":236,"column":8},"end":{"line":236,"column":8}}]},"12":{"line":236,"type":"binary-expr","locations":[{"start":{"line":236,"column":13},"end":{"line":236,"column":23}},{"start":{"line":236,"column":27},"end":{"line":236,"column":37}}]}},"code":["/**"," * Backtrace according to the parent records and return the path."," * (including both start and end nodes)"," * @param {Node} node End node"," * @return {Array<Array<number>>} the path"," */","function backtrace(node) {","    var path = [[node.x, node.y]];","    while (node.parent) {","        node = node.parent;","        path.push([node.x, node.y]);","    }","    return path.reverse();","}","exports.backtrace = backtrace;","","/**"," * Backtrace from start and end node, and return the path."," * (including both start and end nodes)"," * @param {Node}"," * @param {Node}"," */","function biBacktrace(nodeA, nodeB) {","    var pathA = backtrace(nodeA),","        pathB = backtrace(nodeB);","    return pathA.concat(pathB.reverse());","}","exports.biBacktrace = biBacktrace;","","/**"," * Compute the length of the path."," * @param {Array<Array<number>>} path The path"," * @return {number} The length of the path"," */","function pathLength(path) {","    var i, sum = 0, a, b, dx, dy;","    for (i = 1; i < path.length; ++i) {","        a = path[i - 1];","        b = path[i];","        dx = a[0] - b[0];","        dy = a[1] - b[1];","        sum += Math.sqrt(dx * dx + dy * dy);","    }","    return sum;","}","exports.pathLength = pathLength;","","","/**"," * Given the start and end coordinates, return all the coordinates lying"," * on the line formed by these coordinates, based on Bresenham's algorithm."," * http://en.wikipedia.org/wiki/Bresenham's_line_algorithm#Simplification"," * @param {number} x0 Start x coordinate"," * @param {number} y0 Start y coordinate"," * @param {number} x1 End x coordinate"," * @param {number} y1 End y coordinate"," * @return {Array<Array<number>>} The coordinates on the line"," */","function interpolate(x0, y0, x1, y1) {","    var abs = Math.abs,","        line = [],","        sx, sy, dx, dy, err, e2;","","    dx = abs(x1 - x0);","    dy = abs(y1 - y0);","","    sx = (x0 < x1) ? 1 : -1;","    sy = (y0 < y1) ? 1 : -1;","","    err = dx - dy;","","    while (true) {","        line.push([x0, y0]);","","        if (x0 === x1 && y0 === y1) {","            break;","        }","        ","        e2 = 2 * err;","        if (e2 > -dy) {","            err = err - dy;","            x0 = x0 + sx;","        }","        if (e2 < dx) {","            err = err + dx;","            y0 = y0 + sy;","        }","    }","","    return line;","}","exports.interpolate = interpolate;","","","/**"," * Given a compressed path, return a new path that has all the segments"," * in it interpolated."," * @param {Array<Array<number>>} path The path"," * @return {Array<Array<number>>} expanded path"," */","function expandPath(path) {","    var expanded = [],","        len = path.length,","        coord0, coord1,","        interpolated,","        interpolatedLen,","        i, j;","","    if (len < 2) {","        return expanded;","    }","","    for (i = 0; i < len - 1; ++i) {","        coord0 = path[i];","        coord1 = path[i + 1];","","        interpolated = interpolate(coord0[0], coord0[1], coord1[0], coord1[1]);","        interpolatedLen = interpolated.length;","        for (j = 0; j < interpolatedLen - 1; ++j) {","            expanded.push(interpolated[j]);","        }","    }","    expanded.push(path[len - 1]);","","    return expanded;","}","exports.expandPath = expandPath;","","","/**"," * Smoothen the give path."," * The original path will not be modified; a new path will be returned."," * @param {PF.Grid} grid"," * @param {Array<Array<number>>} path The path"," */","function smoothenPath(grid, path) {","    var len = path.length,","        x0 = path[0][0],        // path start x","        y0 = path[0][1],        // path start y","        x1 = path[len - 1][0],  // path end x","        y1 = path[len - 1][1],  // path end y","        sx, sy,                 // current start coordinate","        ex, ey,                 // current end coordinate","        newPath,","        i, j, coord, line, testCoord, blocked;","","    sx = x0;","    sy = y0;","    newPath = [[sx, sy]];","","    for (i = 2; i < len; ++i) {","        coord = path[i];","        ex = coord[0];","        ey = coord[1];","        line = interpolate(sx, sy, ex, ey);","","        blocked = false;","        for (j = 1; j < line.length; ++j) {","            testCoord = line[j];","","            if (!grid.isWalkableAt(testCoord[0], testCoord[1])) {","                blocked = true;","                break;","            }","        }","        if (blocked) {","            lastValidCoord = path[i - 1];","            newPath.push(lastValidCoord);","            sx = lastValidCoord[0];","            sy = lastValidCoord[1];","        }","    }","    newPath.push([x1, y1]);","","    return newPath;","}","exports.smoothenPath = smoothenPath;","","","/**"," * Compress a path, remove redundant nodes without altering the shape"," * The original path is not modified"," * @param {Array<Array<number>>} path The path"," * @return {Array<Array<number>>} The compressed path"," */","function compressPath(path) {","","    // nothing to compress","    if(path.length < 3) {","        return path;","    }","","    var compressed = [],","        sx = path[0][0], // start x","        sy = path[0][1], // start y","        px = path[1][0], // second point x","        py = path[1][1], // second point y","        dx = px - sx, // direction between the two points","        dy = py - sy, // direction between the two points","        lx, ly,","        ldx, ldy,","        sq, i;","","    // normalize the direction","    sq = Math.sqrt(dx*dx + dy*dy);","    dx /= sq;","    dy /= sq;","","    // start the new path","    compressed.push([sx,sy]);","","    for(i = 2; i < path.length; i++) {","","        // store the last point","        lx = px;","        ly = py;","","        // store the last direction","        ldx = dx;","        ldy = dy;","","        // next point","        px = path[i][0];","        py = path[i][1];","","        // next direction","        dx = px - lx;","        dy = py - ly;","","        // normalize","        sq = Math.sqrt(dx*dx + dy*dy);","        dx /= sq;","        dy /= sq;","","        // if the direction has changed, store the point","        if ( dx !== ldx || dy !== ldy ) {","            compressed.push([lx,ly]);","        }","    }","","    // store the last point","    compressed.push([px,py]);","","    return compressed;","}","exports.compressPath = compressPath;",""],"l":{"7":1,"8":0,"9":0,"10":0,"11":0,"13":0,"15":1,"23":1,"24":0,"26":0,"28":1,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"44":0,"46":1,"59":1,"60":0,"64":0,"65":0,"67":0,"68":0,"70":0,"72":0,"73":0,"75":0,"76":0,"79":0,"80":0,"81":0,"82":0,"84":0,"85":0,"86":0,"90":0,"92":1,"101":1,"102":0,"109":0,"110":0,"113":0,"114":0,"115":0,"117":0,"118":0,"119":0,"120":0,"123":0,"125":0,"127":1,"136":1,"137":0,"147":0,"148":0,"149":0,"151":0,"152":0,"153":0,"154":0,"155":0,"157":0,"158":0,"159":0,"161":0,"162":0,"163":0,"166":0,"167":0,"168":0,"169":0,"170":0,"173":0,"175":0,"177":1,"186":1,"189":0,"190":0,"193":0,"205":0,"206":0,"207":0,"210":0,"212":0,"215":0,"216":0,"219":0,"220":0,"223":0,"224":0,"227":0,"228":0,"231":0,"232":0,"233":0,"236":0,"237":0,"242":0,"244":0,"246":1}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/core/Heuristic.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/core/Heuristic.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":13},"end":{"line":13,"column":30}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":13},"end":{"line":23,"column":30}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":10},"end":{"line":33,"column":27}}},"4":{"name":"(anonymous_4)","line":44,"loc":{"start":{"line":44,"column":13},"end":{"line":44,"column":30}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":48,"column":2}},"2":{"start":{"line":14,"column":6},"end":{"line":14,"column":21}},"3":{"start":{"line":24,"column":6},"end":{"line":24,"column":42}},"4":{"start":{"line":34,"column":6},"end":{"line":34,"column":29}},"5":{"start":{"line":35,"column":6},"end":{"line":35,"column":51}},"6":{"start":{"line":45,"column":6},"end":{"line":45,"column":30}}},"branchMap":{"1":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":25},"end":{"line":35,"column":36}},{"start":{"line":35,"column":39},"end":{"line":35,"column":50}}]}},"code":["/**"," * @namespace PF.Heuristic"," * @description A collection of heuristic functions."," */","module.exports = {","","  /**","   * Manhattan distance.","   * @param {number} dx - Difference in x.","   * @param {number} dy - Difference in y.","   * @return {number} dx + dy","   */","  manhattan: function(dx, dy) {","      return dx + dy;","  },","","  /**","   * Euclidean distance.","   * @param {number} dx - Difference in x.","   * @param {number} dy - Difference in y.","   * @return {number} sqrt(dx * dx + dy * dy)","   */","  euclidean: function(dx, dy) {","      return Math.sqrt(dx * dx + dy * dy);","  },","","  /**","   * Octile distance.","   * @param {number} dx - Difference in x.","   * @param {number} dy - Difference in y.","   * @return {number} sqrt(dx * dx + dy * dy) for grids","   */","  octile: function(dx, dy) {","      var F = Math.SQRT2 - 1;","      return (dx < dy) ? F * dx + dy : F * dy + dx;","  },","","  /**","   * Chebyshev distance.","   * @param {number} dx - Difference in x.","   * @param {number} dy - Difference in y.","   * @return {number} max(dx, dy)","   */","  chebyshev: function(dx, dy) {","      return Math.max(dx, dy);","  }","","};",""],"l":{"5":1,"14":0,"24":0,"34":0,"35":0,"45":0}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/AStarFinder.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/AStarFinder.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":2,"7":2,"8":2,"9":2,"10":2,"11":2,"12":2,"13":2,"14":2,"15":0,"16":0,"17":0,"18":2,"19":2,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1},"b":{"1":[2,2],"2":[2,2],"3":[2,2],"4":[2,0],"5":[2,0],"6":[0,0],"7":[2,0],"8":[2,2],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"f":{"1":2,"2":0,"3":0},"fnMap":{"1":{"name":"AStarFinder","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":26}}},"2":{"name":"(anonymous_2)","line":54,"loc":{"start":{"line":54,"column":33},"end":{"line":54,"column":76}}},"3":{"name":"(anonymous_3)","line":55,"loc":{"start":{"line":55,"column":28},"end":{"line":55,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":33}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":41}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":59}},"5":{"start":{"line":20,"column":0},"end":{"line":47,"column":1}},"6":{"start":{"line":21,"column":4},"end":{"line":21,"column":20}},"7":{"start":{"line":22,"column":4},"end":{"line":22,"column":43}},"8":{"start":{"line":23,"column":4},"end":{"line":23,"column":49}},"9":{"start":{"line":24,"column":4},"end":{"line":24,"column":58}},"10":{"start":{"line":25,"column":4},"end":{"line":25,"column":34}},"11":{"start":{"line":26,"column":4},"end":{"line":26,"column":49}},"12":{"start":{"line":28,"column":4},"end":{"line":38,"column":5}},"13":{"start":{"line":29,"column":8},"end":{"line":37,"column":9}},"14":{"start":{"line":30,"column":12},"end":{"line":30,"column":59}},"15":{"start":{"line":32,"column":12},"end":{"line":36,"column":13}},"16":{"start":{"line":33,"column":16},"end":{"line":33,"column":77}},"17":{"start":{"line":35,"column":16},"end":{"line":35,"column":77}},"18":{"start":{"line":42,"column":4},"end":{"line":46,"column":5}},"19":{"start":{"line":43,"column":8},"end":{"line":43,"column":62}},"20":{"start":{"line":45,"column":8},"end":{"line":45,"column":59}},"21":{"start":{"line":54,"column":0},"end":{"line":124,"column":2}},"22":{"start":{"line":55,"column":4},"end":{"line":64,"column":50}},"23":{"start":{"line":56,"column":12},"end":{"line":56,"column":37}},"24":{"start":{"line":67,"column":4},"end":{"line":67,"column":20}},"25":{"start":{"line":68,"column":4},"end":{"line":68,"column":20}},"26":{"start":{"line":71,"column":4},"end":{"line":71,"column":29}},"27":{"start":{"line":72,"column":4},"end":{"line":72,"column":28}},"28":{"start":{"line":75,"column":4},"end":{"line":120,"column":5}},"29":{"start":{"line":77,"column":8},"end":{"line":77,"column":30}},"30":{"start":{"line":78,"column":8},"end":{"line":78,"column":27}},"31":{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},"32":{"start":{"line":82,"column":12},"end":{"line":82,"column":43}},"33":{"start":{"line":86,"column":8},"end":{"line":86,"column":62}},"34":{"start":{"line":87,"column":8},"end":{"line":119,"column":9}},"35":{"start":{"line":88,"column":12},"end":{"line":88,"column":36}},"36":{"start":{"line":90,"column":12},"end":{"line":92,"column":13}},"37":{"start":{"line":91,"column":16},"end":{"line":91,"column":25}},"38":{"start":{"line":94,"column":12},"end":{"line":94,"column":27}},"39":{"start":{"line":95,"column":12},"end":{"line":95,"column":27}},"40":{"start":{"line":99,"column":12},"end":{"line":99,"column":79}},"41":{"start":{"line":103,"column":12},"end":{"line":118,"column":13}},"42":{"start":{"line":104,"column":16},"end":{"line":104,"column":32}},"43":{"start":{"line":105,"column":16},"end":{"line":105,"column":92}},"44":{"start":{"line":106,"column":16},"end":{"line":106,"column":53}},"45":{"start":{"line":107,"column":16},"end":{"line":107,"column":39}},"46":{"start":{"line":109,"column":16},"end":{"line":117,"column":17}},"47":{"start":{"line":110,"column":20},"end":{"line":110,"column":44}},"48":{"start":{"line":111,"column":20},"end":{"line":111,"column":43}},"49":{"start":{"line":116,"column":20},"end":{"line":116,"column":50}},"50":{"start":{"line":123,"column":4},"end":{"line":123,"column":14}},"51":{"start":{"line":126,"column":0},"end":{"line":126,"column":29}}},"branchMap":{"1":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":10},"end":{"line":21,"column":13}},{"start":{"line":21,"column":17},"end":{"line":21,"column":19}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":21},"end":{"line":24,"column":34}},{"start":{"line":24,"column":38},"end":{"line":24,"column":57}}]},"3":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":18},"end":{"line":25,"column":28}},{"start":{"line":25,"column":32},"end":{"line":25,"column":33}}]},"4":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]},"5":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":29,"column":8}},{"start":{"line":29,"column":8},"end":{"line":29,"column":8}}]},"6":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":12},"end":{"line":32,"column":12}},{"start":{"line":32,"column":12},"end":{"line":32,"column":12}}]},"7":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"8":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":25},"end":{"line":43,"column":38}},{"start":{"line":43,"column":42},"end":{"line":43,"column":61}}]},"9":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":25},"end":{"line":45,"column":38}},{"start":{"line":45,"column":42},"end":{"line":45,"column":58}}]},"10":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":8},"end":{"line":81,"column":8}},{"start":{"line":81,"column":8},"end":{"line":81,"column":8}}]},"11":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":12},"end":{"line":90,"column":12}},{"start":{"line":90,"column":12},"end":{"line":90,"column":12}}]},"12":{"line":99,"type":"cond-expr","locations":[{"start":{"line":99,"column":68},"end":{"line":99,"column":69}},{"start":{"line":99,"column":72},"end":{"line":99,"column":77}}]},"13":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":28},"end":{"line":99,"column":44}},{"start":{"line":99,"column":48},"end":{"line":99,"column":64}}]},"14":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":12},"end":{"line":103,"column":12}},{"start":{"line":103,"column":12},"end":{"line":103,"column":12}}]},"15":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":16},"end":{"line":103,"column":32}},{"start":{"line":103,"column":36},"end":{"line":103,"column":51}}]},"16":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":29},"end":{"line":105,"column":39}},{"start":{"line":105,"column":43},"end":{"line":105,"column":91}}]},"17":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":16},"end":{"line":109,"column":16}},{"start":{"line":109,"column":16},"end":{"line":109,"column":16}}]}},"code":["var Heap       = require('heap');","var Util       = require('../core/Util');","var Heuristic  = require('../core/Heuristic');","var DiagonalMovement = require('../core/DiagonalMovement');","","/**"," * A* path-finder. Based upon https://github.com/bgrins/javascript-astar"," * @constructor"," * @param {Object} opt"," * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed."," *     Deprecated, use diagonalMovement instead."," * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching "," *     block corners. Deprecated, use diagonalMovement instead."," * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement."," * @param {function} opt.heuristic Heuristic function to estimate the distance"," *     (defaults to manhattan)."," * @param {number} opt.weight Weight to apply to the heuristic to allow for"," *     suboptimal paths, in order to speed up the search."," */","function AStarFinder(opt) {","    opt = opt || {};","    this.allowDiagonal = opt.allowDiagonal;","    this.dontCrossCorners = opt.dontCrossCorners;","    this.heuristic = opt.heuristic || Heuristic.manhattan;","    this.weight = opt.weight || 1;","    this.diagonalMovement = opt.diagonalMovement;","","    if (!this.diagonalMovement) {","        if (!this.allowDiagonal) {","            this.diagonalMovement = DiagonalMovement.Never;","        } else {","            if (this.dontCrossCorners) {","                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;","            } else {","                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;","            }","        }","    }","","    // When diagonal movement is allowed the manhattan heuristic is not","    //admissible. It should be octile instead","    if (this.diagonalMovement === DiagonalMovement.Never) {","        this.heuristic = opt.heuristic || Heuristic.manhattan;","    } else {","        this.heuristic = opt.heuristic || Heuristic.octile;","    }","}","","/**"," * Find and return the the path."," * @return {Array<Array<number>>} The path, including both start and"," *     end positions."," */","AStarFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {","    var openList = new Heap(function(nodeA, nodeB) {","            return nodeA.f - nodeB.f;","        }),","        startNode = grid.getNodeAt(startX, startY),","        endNode = grid.getNodeAt(endX, endY),","        heuristic = this.heuristic,","        diagonalMovement = this.diagonalMovement,","        weight = this.weight,","        abs = Math.abs, SQRT2 = Math.SQRT2,","        node, neighbors, neighbor, i, l, x, y, ng;","","    // set the `g` and `f` value of the start node to be 0","    startNode.g = 0;","    startNode.f = 0;","","    // push the start node into the open list","    openList.push(startNode);","    startNode.opened = true;","","    // while the open list is not empty","    while (!openList.empty()) {","        // pop the position of node which has the minimum `f` value.","        node = openList.pop();","        node.closed = true;","","        // if reached the end position, construct the path and return it","        if (node === endNode) {","            return Util.backtrace(endNode);","        }","","        // get neigbours of the current node","        neighbors = grid.getNeighbors(node, diagonalMovement);","        for (i = 0, l = neighbors.length; i < l; ++i) {","            neighbor = neighbors[i];","","            if (neighbor.closed) {","                continue;","            }","","            x = neighbor.x;","            y = neighbor.y;","","            // get the distance between current node and the neighbor","            // and calculate the next g score","            ng = node.g + ((x - node.x === 0 || y - node.y === 0) ? 1 : SQRT2);","","            // check if the neighbor has not been inspected yet, or","            // can be reached with smaller cost from the current node","            if (!neighbor.opened || ng < neighbor.g) {","                neighbor.g = ng;","                neighbor.h = neighbor.h || weight * heuristic(abs(x - endX), abs(y - endY));","                neighbor.f = neighbor.g + neighbor.h;","                neighbor.parent = node;","","                if (!neighbor.opened) {","                    openList.push(neighbor);","                    neighbor.opened = true;","                } else {","                    // the neighbor can be reached with smaller cost.","                    // Since its f value has been updated, we have to","                    // update its position in the open list","                    openList.updateItem(neighbor);","                }","            }","        } // end for each neighbor","    } // end while not open list empty","","    // fail to find the path","    return [];","};","","module.exports = AStarFinder;",""],"l":{"1":1,"2":1,"3":1,"4":1,"20":1,"21":2,"22":2,"23":2,"24":2,"25":2,"26":2,"28":2,"29":2,"30":2,"32":0,"33":0,"35":0,"42":2,"43":2,"45":0,"54":1,"55":0,"56":0,"67":0,"68":0,"71":0,"72":0,"75":0,"77":0,"78":0,"81":0,"82":0,"86":0,"87":0,"88":0,"90":0,"91":0,"94":0,"95":0,"99":0,"103":0,"104":0,"105":0,"106":0,"107":0,"109":0,"110":0,"111":0,"116":0,"123":0,"126":1}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/BestFirstFinder.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/BestFirstFinder.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"BestFirstFinder","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":30}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":21},"end":{"line":20,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":43}},"2":{"start":{"line":16,"column":0},"end":{"line":23,"column":1}},"3":{"start":{"line":17,"column":4},"end":{"line":17,"column":32}},"4":{"start":{"line":19,"column":4},"end":{"line":19,"column":30}},"5":{"start":{"line":20,"column":4},"end":{"line":22,"column":6}},"6":{"start":{"line":21,"column":8},"end":{"line":21,"column":38}},"7":{"start":{"line":25,"column":0},"end":{"line":25,"column":46}},"8":{"start":{"line":26,"column":0},"end":{"line":26,"column":56}},"9":{"start":{"line":28,"column":0},"end":{"line":28,"column":33}}},"branchMap":{},"code":["var AStarFinder = require('./AStarFinder');","","/**"," * Best-First-Search path-finder."," * @constructor"," * @extends AStarFinder"," * @param {Object} opt"," * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed."," *     Deprecated, use diagonalMovement instead."," * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching"," *     block corners. Deprecated, use diagonalMovement instead."," * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement."," * @param {function} opt.heuristic Heuristic function to estimate the distance"," *     (defaults to manhattan)."," */","function BestFirstFinder(opt) {","    AStarFinder.call(this, opt);","","    var orig = this.heuristic;","    this.heuristic = function(dx, dy) {","        return orig(dx, dy) * 1000000;","    };","}","","BestFirstFinder.prototype = new AStarFinder();","BestFirstFinder.prototype.constructor = BestFirstFinder;","","module.exports = BestFirstFinder;",""],"l":{"1":1,"16":1,"17":0,"19":0,"20":0,"21":0,"25":1,"26":1,"28":1}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/BreadthFirstFinder.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/BreadthFirstFinder.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"BreadthFirstFinder","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":33}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":40},"end":{"line":38,"column":83}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":59}},"3":{"start":{"line":14,"column":0},"end":{"line":31,"column":1}},"4":{"start":{"line":15,"column":4},"end":{"line":15,"column":20}},"5":{"start":{"line":16,"column":4},"end":{"line":16,"column":43}},"6":{"start":{"line":17,"column":4},"end":{"line":17,"column":49}},"7":{"start":{"line":18,"column":4},"end":{"line":18,"column":49}},"8":{"start":{"line":20,"column":4},"end":{"line":30,"column":5}},"9":{"start":{"line":21,"column":8},"end":{"line":29,"column":9}},"10":{"start":{"line":22,"column":12},"end":{"line":22,"column":59}},"11":{"start":{"line":24,"column":12},"end":{"line":28,"column":13}},"12":{"start":{"line":25,"column":16},"end":{"line":25,"column":77}},"13":{"start":{"line":27,"column":16},"end":{"line":27,"column":77}},"14":{"start":{"line":38,"column":0},"end":{"line":77,"column":2}},"15":{"start":{"line":39,"column":4},"end":{"line":43,"column":40}},"16":{"start":{"line":46,"column":4},"end":{"line":46,"column":29}},"17":{"start":{"line":47,"column":4},"end":{"line":47,"column":28}},"18":{"start":{"line":50,"column":4},"end":{"line":73,"column":5}},"19":{"start":{"line":52,"column":8},"end":{"line":52,"column":32}},"20":{"start":{"line":53,"column":8},"end":{"line":53,"column":27}},"21":{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},"22":{"start":{"line":57,"column":12},"end":{"line":57,"column":43}},"23":{"start":{"line":60,"column":8},"end":{"line":60,"column":62}},"24":{"start":{"line":61,"column":8},"end":{"line":72,"column":9}},"25":{"start":{"line":62,"column":12},"end":{"line":62,"column":36}},"26":{"start":{"line":65,"column":12},"end":{"line":67,"column":13}},"27":{"start":{"line":66,"column":16},"end":{"line":66,"column":25}},"28":{"start":{"line":69,"column":12},"end":{"line":69,"column":36}},"29":{"start":{"line":70,"column":12},"end":{"line":70,"column":35}},"30":{"start":{"line":71,"column":12},"end":{"line":71,"column":35}},"31":{"start":{"line":76,"column":4},"end":{"line":76,"column":14}},"32":{"start":{"line":79,"column":0},"end":{"line":79,"column":36}}},"branchMap":{"1":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":10},"end":{"line":15,"column":13}},{"start":{"line":15,"column":17},"end":{"line":15,"column":19}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"3":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":21,"column":8}},{"start":{"line":21,"column":8},"end":{"line":21,"column":8}}]},"4":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":12},"end":{"line":24,"column":12}},{"start":{"line":24,"column":12},"end":{"line":24,"column":12}}]},"5":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":8},"end":{"line":56,"column":8}},{"start":{"line":56,"column":8},"end":{"line":56,"column":8}}]},"6":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":12},"end":{"line":65,"column":12}},{"start":{"line":65,"column":12},"end":{"line":65,"column":12}}]},"7":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":16},"end":{"line":65,"column":31}},{"start":{"line":65,"column":35},"end":{"line":65,"column":50}}]}},"code":["var Util = require('../core/Util');","var DiagonalMovement = require('../core/DiagonalMovement');","","/**"," * Breadth-First-Search path finder."," * @constructor"," * @param {Object} opt"," * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed."," *     Deprecated, use diagonalMovement instead."," * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching"," *     block corners. Deprecated, use diagonalMovement instead."," * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement."," */","function BreadthFirstFinder(opt) {","    opt = opt || {};","    this.allowDiagonal = opt.allowDiagonal;","    this.dontCrossCorners = opt.dontCrossCorners;","    this.diagonalMovement = opt.diagonalMovement;","","    if (!this.diagonalMovement) {","        if (!this.allowDiagonal) {","            this.diagonalMovement = DiagonalMovement.Never;","        } else {","            if (this.dontCrossCorners) {","                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;","            } else {","                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;","            }","        }","    }","}","","/**"," * Find and return the the path."," * @return {Array<Array<number>>} The path, including both start and"," *     end positions."," */","BreadthFirstFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {","    var openList = [],","        diagonalMovement = this.diagonalMovement,","        startNode = grid.getNodeAt(startX, startY),","        endNode = grid.getNodeAt(endX, endY),","        neighbors, neighbor, node, i, l;","","    // push the start pos into the queue","    openList.push(startNode);","    startNode.opened = true;","","    // while the queue is not empty","    while (openList.length) {","        // take the front node from the queue","        node = openList.shift();","        node.closed = true;","","        // reached the end position","        if (node === endNode) {","            return Util.backtrace(endNode);","        }","","        neighbors = grid.getNeighbors(node, diagonalMovement);","        for (i = 0, l = neighbors.length; i < l; ++i) {","            neighbor = neighbors[i];","","            // skip this neighbor if it has been inspected before","            if (neighbor.closed || neighbor.opened) {","                continue;","            }","","            openList.push(neighbor);","            neighbor.opened = true;","            neighbor.parent = node;","        }","    }","    ","    // fail to find the path","    return [];","};","","module.exports = BreadthFirstFinder;",""],"l":{"1":1,"2":1,"14":1,"15":0,"16":0,"17":0,"18":0,"20":0,"21":0,"22":0,"24":0,"25":0,"27":0,"38":1,"39":0,"46":0,"47":0,"50":0,"52":0,"53":0,"56":0,"57":0,"60":0,"61":0,"62":0,"65":0,"66":0,"69":0,"70":0,"71":0,"76":0,"79":1}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/DijkstraFinder.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/DijkstraFinder.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":1,"8":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"DijkstraFinder","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":29}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":21},"end":{"line":16,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":43}},"2":{"start":{"line":14,"column":0},"end":{"line":19,"column":1}},"3":{"start":{"line":15,"column":4},"end":{"line":15,"column":32}},"4":{"start":{"line":16,"column":4},"end":{"line":18,"column":6}},"5":{"start":{"line":17,"column":8},"end":{"line":17,"column":17}},"6":{"start":{"line":21,"column":0},"end":{"line":21,"column":45}},"7":{"start":{"line":22,"column":0},"end":{"line":22,"column":54}},"8":{"start":{"line":24,"column":0},"end":{"line":24,"column":32}}},"branchMap":{},"code":["var AStarFinder = require('./AStarFinder');","","/**"," * Dijkstra path-finder."," * @constructor"," * @extends AStarFinder"," * @param {Object} opt"," * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed."," *     Deprecated, use diagonalMovement instead."," * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching"," *     block corners. Deprecated, use diagonalMovement instead."," * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement."," */","function DijkstraFinder(opt) {","    AStarFinder.call(this, opt);","    this.heuristic = function(dx, dy) {","        return 0;","    };","}","","DijkstraFinder.prototype = new AStarFinder();","DijkstraFinder.prototype.constructor = DijkstraFinder;","","module.exports = DijkstraFinder;",""],"l":{"1":1,"14":1,"15":0,"16":0,"17":0,"21":1,"22":1,"24":1}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/BiAStarFinder.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/BiAStarFinder.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":2,"7":2,"8":2,"9":2,"10":2,"11":2,"12":2,"13":2,"14":2,"15":0,"16":0,"17":0,"18":2,"19":2,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1},"b":{"1":[2,2],"2":[2,2],"3":[2,2],"4":[2,0],"5":[2,0],"6":[0,0],"7":[2,0],"8":[2,2],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0]},"f":{"1":2,"2":0,"3":0},"fnMap":{"1":{"name":"BiAStarFinder","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":28}}},"2":{"name":"(anonymous_2)","line":55,"loc":{"start":{"line":55,"column":35},"end":{"line":55,"column":78}}},"3":{"name":"(anonymous_3)","line":56,"loc":{"start":{"line":56,"column":14},"end":{"line":56,"column":37}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":33}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":41}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":59}},"5":{"start":{"line":21,"column":0},"end":{"line":48,"column":1}},"6":{"start":{"line":22,"column":4},"end":{"line":22,"column":20}},"7":{"start":{"line":23,"column":4},"end":{"line":23,"column":43}},"8":{"start":{"line":24,"column":4},"end":{"line":24,"column":49}},"9":{"start":{"line":25,"column":4},"end":{"line":25,"column":49}},"10":{"start":{"line":26,"column":4},"end":{"line":26,"column":58}},"11":{"start":{"line":27,"column":4},"end":{"line":27,"column":34}},"12":{"start":{"line":29,"column":4},"end":{"line":39,"column":5}},"13":{"start":{"line":30,"column":8},"end":{"line":38,"column":9}},"14":{"start":{"line":31,"column":12},"end":{"line":31,"column":59}},"15":{"start":{"line":33,"column":12},"end":{"line":37,"column":13}},"16":{"start":{"line":34,"column":16},"end":{"line":34,"column":77}},"17":{"start":{"line":36,"column":16},"end":{"line":36,"column":77}},"18":{"start":{"line":43,"column":4},"end":{"line":47,"column":5}},"19":{"start":{"line":44,"column":8},"end":{"line":44,"column":62}},"20":{"start":{"line":46,"column":8},"end":{"line":46,"column":59}},"21":{"start":{"line":55,"column":0},"end":{"line":179,"column":2}},"22":{"start":{"line":56,"column":4},"end":{"line":68,"column":33}},"23":{"start":{"line":57,"column":12},"end":{"line":57,"column":37}},"24":{"start":{"line":72,"column":4},"end":{"line":72,"column":20}},"25":{"start":{"line":73,"column":4},"end":{"line":73,"column":20}},"26":{"start":{"line":74,"column":4},"end":{"line":74,"column":34}},"27":{"start":{"line":75,"column":4},"end":{"line":75,"column":32}},"28":{"start":{"line":79,"column":4},"end":{"line":79,"column":18}},"29":{"start":{"line":80,"column":4},"end":{"line":80,"column":18}},"30":{"start":{"line":81,"column":4},"end":{"line":81,"column":30}},"31":{"start":{"line":82,"column":4},"end":{"line":82,"column":28}},"32":{"start":{"line":85,"column":4},"end":{"line":175,"column":5}},"33":{"start":{"line":88,"column":8},"end":{"line":88,"column":35}},"34":{"start":{"line":89,"column":8},"end":{"line":89,"column":27}},"35":{"start":{"line":92,"column":8},"end":{"line":92,"column":62}},"36":{"start":{"line":93,"column":8},"end":{"line":129,"column":9}},"37":{"start":{"line":94,"column":12},"end":{"line":94,"column":36}},"38":{"start":{"line":96,"column":12},"end":{"line":98,"column":13}},"39":{"start":{"line":97,"column":16},"end":{"line":97,"column":25}},"40":{"start":{"line":99,"column":12},"end":{"line":101,"column":13}},"41":{"start":{"line":100,"column":16},"end":{"line":100,"column":56}},"42":{"start":{"line":103,"column":12},"end":{"line":103,"column":27}},"43":{"start":{"line":104,"column":12},"end":{"line":104,"column":27}},"44":{"start":{"line":108,"column":12},"end":{"line":108,"column":79}},"45":{"start":{"line":112,"column":12},"end":{"line":128,"column":13}},"46":{"start":{"line":113,"column":16},"end":{"line":113,"column":32}},"47":{"start":{"line":114,"column":16},"end":{"line":115,"column":69}},"48":{"start":{"line":116,"column":16},"end":{"line":116,"column":53}},"49":{"start":{"line":117,"column":16},"end":{"line":117,"column":39}},"50":{"start":{"line":119,"column":16},"end":{"line":127,"column":17}},"51":{"start":{"line":120,"column":20},"end":{"line":120,"column":49}},"52":{"start":{"line":121,"column":20},"end":{"line":121,"column":47}},"53":{"start":{"line":126,"column":20},"end":{"line":126,"column":55}},"54":{"start":{"line":133,"column":8},"end":{"line":133,"column":33}},"55":{"start":{"line":134,"column":8},"end":{"line":134,"column":27}},"56":{"start":{"line":137,"column":8},"end":{"line":137,"column":62}},"57":{"start":{"line":138,"column":8},"end":{"line":174,"column":9}},"58":{"start":{"line":139,"column":12},"end":{"line":139,"column":36}},"59":{"start":{"line":141,"column":12},"end":{"line":143,"column":13}},"60":{"start":{"line":142,"column":16},"end":{"line":142,"column":25}},"61":{"start":{"line":144,"column":12},"end":{"line":146,"column":13}},"62":{"start":{"line":145,"column":16},"end":{"line":145,"column":56}},"63":{"start":{"line":148,"column":12},"end":{"line":148,"column":27}},"64":{"start":{"line":149,"column":12},"end":{"line":149,"column":27}},"65":{"start":{"line":153,"column":12},"end":{"line":153,"column":79}},"66":{"start":{"line":157,"column":12},"end":{"line":173,"column":13}},"67":{"start":{"line":158,"column":16},"end":{"line":158,"column":32}},"68":{"start":{"line":159,"column":16},"end":{"line":160,"column":73}},"69":{"start":{"line":161,"column":16},"end":{"line":161,"column":53}},"70":{"start":{"line":162,"column":16},"end":{"line":162,"column":39}},"71":{"start":{"line":164,"column":16},"end":{"line":172,"column":17}},"72":{"start":{"line":165,"column":20},"end":{"line":165,"column":47}},"73":{"start":{"line":166,"column":20},"end":{"line":166,"column":45}},"74":{"start":{"line":171,"column":20},"end":{"line":171,"column":53}},"75":{"start":{"line":178,"column":4},"end":{"line":178,"column":14}},"76":{"start":{"line":181,"column":0},"end":{"line":181,"column":31}}},"branchMap":{"1":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":10},"end":{"line":22,"column":13}},{"start":{"line":22,"column":17},"end":{"line":22,"column":19}}]},"2":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":21},"end":{"line":26,"column":34}},{"start":{"line":26,"column":38},"end":{"line":26,"column":57}}]},"3":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":18},"end":{"line":27,"column":28}},{"start":{"line":27,"column":32},"end":{"line":27,"column":33}}]},"4":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]},"5":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":30,"column":8}},{"start":{"line":30,"column":8},"end":{"line":30,"column":8}}]},"6":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":12},"end":{"line":33,"column":12}},{"start":{"line":33,"column":12},"end":{"line":33,"column":12}}]},"7":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"8":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":25},"end":{"line":44,"column":38}},{"start":{"line":44,"column":42},"end":{"line":44,"column":61}}]},"9":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":25},"end":{"line":46,"column":38}},{"start":{"line":46,"column":42},"end":{"line":46,"column":58}}]},"10":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":11},"end":{"line":85,"column":33}},{"start":{"line":85,"column":37},"end":{"line":85,"column":57}}]},"11":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":12},"end":{"line":96,"column":12}},{"start":{"line":96,"column":12},"end":{"line":96,"column":12}}]},"12":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":12},"end":{"line":99,"column":12}},{"start":{"line":99,"column":12},"end":{"line":99,"column":12}}]},"13":{"line":108,"type":"cond-expr","locations":[{"start":{"line":108,"column":68},"end":{"line":108,"column":69}},{"start":{"line":108,"column":72},"end":{"line":108,"column":77}}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":28},"end":{"line":108,"column":44}},{"start":{"line":108,"column":48},"end":{"line":108,"column":64}}]},"15":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":12},"end":{"line":112,"column":12}},{"start":{"line":112,"column":12},"end":{"line":112,"column":12}}]},"16":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":16},"end":{"line":112,"column":32}},{"start":{"line":112,"column":36},"end":{"line":112,"column":51}}]},"17":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":29},"end":{"line":114,"column":39}},{"start":{"line":115,"column":20},"end":{"line":115,"column":68}}]},"18":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":16},"end":{"line":119,"column":16}},{"start":{"line":119,"column":16},"end":{"line":119,"column":16}}]},"19":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":12},"end":{"line":141,"column":12}},{"start":{"line":141,"column":12},"end":{"line":141,"column":12}}]},"20":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":12},"end":{"line":144,"column":12}},{"start":{"line":144,"column":12},"end":{"line":144,"column":12}}]},"21":{"line":153,"type":"cond-expr","locations":[{"start":{"line":153,"column":68},"end":{"line":153,"column":69}},{"start":{"line":153,"column":72},"end":{"line":153,"column":77}}]},"22":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":28},"end":{"line":153,"column":44}},{"start":{"line":153,"column":48},"end":{"line":153,"column":64}}]},"23":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":12},"end":{"line":157,"column":12}},{"start":{"line":157,"column":12},"end":{"line":157,"column":12}}]},"24":{"line":157,"type":"binary-expr","locations":[{"start":{"line":157,"column":16},"end":{"line":157,"column":32}},{"start":{"line":157,"column":36},"end":{"line":157,"column":51}}]},"25":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":29},"end":{"line":159,"column":39}},{"start":{"line":160,"column":20},"end":{"line":160,"column":72}}]},"26":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":16},"end":{"line":164,"column":16}},{"start":{"line":164,"column":16},"end":{"line":164,"column":16}}]}},"code":["var Heap       = require('heap');","var Util       = require('../core/Util');","var Heuristic  = require('../core/Heuristic');","var DiagonalMovement = require('../core/DiagonalMovement');","","/**"," * A* path-finder."," * based upon https://github.com/bgrins/javascript-astar"," * @constructor"," * @param {Object} opt"," * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed."," *     Deprecated, use diagonalMovement instead."," * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching"," *     block corners. Deprecated, use diagonalMovement instead."," * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement."," * @param {function} opt.heuristic Heuristic function to estimate the distance"," *     (defaults to manhattan)."," * @param {number} opt.weight Weight to apply to the heuristic to allow for"," *     suboptimal paths, in order to speed up the search."," */","function BiAStarFinder(opt) {","    opt = opt || {};","    this.allowDiagonal = opt.allowDiagonal;","    this.dontCrossCorners = opt.dontCrossCorners;","    this.diagonalMovement = opt.diagonalMovement;","    this.heuristic = opt.heuristic || Heuristic.manhattan;","    this.weight = opt.weight || 1;","","    if (!this.diagonalMovement) {","        if (!this.allowDiagonal) {","            this.diagonalMovement = DiagonalMovement.Never;","        } else {","            if (this.dontCrossCorners) {","                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;","            } else {","                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;","            }","        }","    }","","    //When diagonal movement is allowed the manhattan heuristic is not admissible","    //It should be octile instead","    if (this.diagonalMovement === DiagonalMovement.Never) {","        this.heuristic = opt.heuristic || Heuristic.manhattan;","    } else {","        this.heuristic = opt.heuristic || Heuristic.octile;","    }","}","","/**"," * Find and return the the path."," * @return {Array<Array<number>>} The path, including both start and"," *     end positions."," */","BiAStarFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {","    var cmp = function(nodeA, nodeB) {","            return nodeA.f - nodeB.f;","        },","        startOpenList = new Heap(cmp),","        endOpenList = new Heap(cmp),","        startNode = grid.getNodeAt(startX, startY),","        endNode = grid.getNodeAt(endX, endY),","        heuristic = this.heuristic,","        diagonalMovement = this.diagonalMovement,","        weight = this.weight,","        abs = Math.abs, SQRT2 = Math.SQRT2,","        node, neighbors, neighbor, i, l, x, y, ng,","        BY_START = 1, BY_END = 2;","","    // set the `g` and `f` value of the start node to be 0","    // and push it into the start open list","    startNode.g = 0;","    startNode.f = 0;","    startOpenList.push(startNode);","    startNode.opened = BY_START;","","    // set the `g` and `f` value of the end node to be 0","    // and push it into the open open list","    endNode.g = 0;","    endNode.f = 0;","    endOpenList.push(endNode);","    endNode.opened = BY_END;","","    // while both the open lists are not empty","    while (!startOpenList.empty() && !endOpenList.empty()) {","","        // pop the position of start node which has the minimum `f` value.","        node = startOpenList.pop();","        node.closed = true;","","        // get neigbours of the current node","        neighbors = grid.getNeighbors(node, diagonalMovement);","        for (i = 0, l = neighbors.length; i < l; ++i) {","            neighbor = neighbors[i];","","            if (neighbor.closed) {","                continue;","            }","            if (neighbor.opened === BY_END) {","                return Util.biBacktrace(node, neighbor);","            }","","            x = neighbor.x;","            y = neighbor.y;","","            // get the distance between current node and the neighbor","            // and calculate the next g score","            ng = node.g + ((x - node.x === 0 || y - node.y === 0) ? 1 : SQRT2);","","            // check if the neighbor has not been inspected yet, or","            // can be reached with smaller cost from the current node","            if (!neighbor.opened || ng < neighbor.g) {","                neighbor.g = ng;","                neighbor.h = neighbor.h ||","                    weight * heuristic(abs(x - endX), abs(y - endY));","                neighbor.f = neighbor.g + neighbor.h;","                neighbor.parent = node;","","                if (!neighbor.opened) {","                    startOpenList.push(neighbor);","                    neighbor.opened = BY_START;","                } else {","                    // the neighbor can be reached with smaller cost.","                    // Since its f value has been updated, we have to","                    // update its position in the open list","                    startOpenList.updateItem(neighbor);","                }","            }","        } // end for each neighbor","","","        // pop the position of end node which has the minimum `f` value.","        node = endOpenList.pop();","        node.closed = true;","","        // get neigbours of the current node","        neighbors = grid.getNeighbors(node, diagonalMovement);","        for (i = 0, l = neighbors.length; i < l; ++i) {","            neighbor = neighbors[i];","","            if (neighbor.closed) {","                continue;","            }","            if (neighbor.opened === BY_START) {","                return Util.biBacktrace(neighbor, node);","            }","","            x = neighbor.x;","            y = neighbor.y;","","            // get the distance between current node and the neighbor","            // and calculate the next g score","            ng = node.g + ((x - node.x === 0 || y - node.y === 0) ? 1 : SQRT2);","","            // check if the neighbor has not been inspected yet, or","            // can be reached with smaller cost from the current node","            if (!neighbor.opened || ng < neighbor.g) {","                neighbor.g = ng;","                neighbor.h = neighbor.h ||","                    weight * heuristic(abs(x - startX), abs(y - startY));","                neighbor.f = neighbor.g + neighbor.h;","                neighbor.parent = node;","","                if (!neighbor.opened) {","                    endOpenList.push(neighbor);","                    neighbor.opened = BY_END;","                } else {","                    // the neighbor can be reached with smaller cost.","                    // Since its f value has been updated, we have to","                    // update its position in the open list","                    endOpenList.updateItem(neighbor);","                }","            }","        } // end for each neighbor","    } // end while not open list empty","","    // fail to find the path","    return [];","};","","module.exports = BiAStarFinder;",""],"l":{"1":1,"2":1,"3":1,"4":1,"21":1,"22":2,"23":2,"24":2,"25":2,"26":2,"27":2,"29":2,"30":2,"31":2,"33":0,"34":0,"36":0,"43":2,"44":2,"46":0,"55":1,"56":0,"57":0,"72":0,"73":0,"74":0,"75":0,"79":0,"80":0,"81":0,"82":0,"85":0,"88":0,"89":0,"92":0,"93":0,"94":0,"96":0,"97":0,"99":0,"100":0,"103":0,"104":0,"108":0,"112":0,"113":0,"114":0,"116":0,"117":0,"119":0,"120":0,"121":0,"126":0,"133":0,"134":0,"137":0,"138":0,"139":0,"141":0,"142":0,"144":0,"145":0,"148":0,"149":0,"153":0,"157":0,"158":0,"159":0,"161":0,"162":0,"164":0,"165":0,"166":0,"171":0,"178":0,"181":1}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/BiBestFirstFinder.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/BiBestFirstFinder.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"BiBestFirstFinder","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":32}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":21},"end":{"line":20,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":47}},"2":{"start":{"line":16,"column":0},"end":{"line":23,"column":1}},"3":{"start":{"line":17,"column":4},"end":{"line":17,"column":34}},"4":{"start":{"line":19,"column":4},"end":{"line":19,"column":30}},"5":{"start":{"line":20,"column":4},"end":{"line":22,"column":6}},"6":{"start":{"line":21,"column":8},"end":{"line":21,"column":38}},"7":{"start":{"line":25,"column":0},"end":{"line":25,"column":50}},"8":{"start":{"line":26,"column":0},"end":{"line":26,"column":60}},"9":{"start":{"line":28,"column":0},"end":{"line":28,"column":35}}},"branchMap":{},"code":["var BiAStarFinder = require('./BiAStarFinder');","","/**"," * Bi-direcitional Best-First-Search path-finder."," * @constructor"," * @extends BiAStarFinder"," * @param {Object} opt"," * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed."," *     Deprecated, use diagonalMovement instead."," * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching"," *     block corners. Deprecated, use diagonalMovement instead."," * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement."," * @param {function} opt.heuristic Heuristic function to estimate the distance"," *     (defaults to manhattan)."," */","function BiBestFirstFinder(opt) {","    BiAStarFinder.call(this, opt);","","    var orig = this.heuristic;","    this.heuristic = function(dx, dy) {","        return orig(dx, dy) * 1000000;","    };","}","","BiBestFirstFinder.prototype = new BiAStarFinder();","BiBestFirstFinder.prototype.constructor = BiBestFirstFinder;","","module.exports = BiBestFirstFinder;",""],"l":{"1":1,"16":1,"17":0,"19":0,"20":0,"21":0,"25":1,"26":1,"28":1}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/BiBreadthFirstFinder.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/BiBreadthFirstFinder.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"BiBreadthFirstFinder","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":35}}},"2":{"name":"(anonymous_2)","line":39,"loc":{"start":{"line":39,"column":42},"end":{"line":39,"column":85}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":59}},"3":{"start":{"line":14,"column":0},"end":{"line":31,"column":1}},"4":{"start":{"line":15,"column":4},"end":{"line":15,"column":20}},"5":{"start":{"line":16,"column":4},"end":{"line":16,"column":43}},"6":{"start":{"line":17,"column":4},"end":{"line":17,"column":49}},"7":{"start":{"line":18,"column":4},"end":{"line":18,"column":49}},"8":{"start":{"line":20,"column":4},"end":{"line":30,"column":5}},"9":{"start":{"line":21,"column":8},"end":{"line":29,"column":9}},"10":{"start":{"line":22,"column":12},"end":{"line":22,"column":59}},"11":{"start":{"line":24,"column":12},"end":{"line":28,"column":13}},"12":{"start":{"line":25,"column":16},"end":{"line":25,"column":77}},"13":{"start":{"line":27,"column":16},"end":{"line":27,"column":77}},"14":{"start":{"line":39,"column":0},"end":{"line":113,"column":2}},"15":{"start":{"line":40,"column":4},"end":{"line":46,"column":13}},"16":{"start":{"line":49,"column":4},"end":{"line":49,"column":34}},"17":{"start":{"line":50,"column":4},"end":{"line":50,"column":28}},"18":{"start":{"line":51,"column":4},"end":{"line":51,"column":28}},"19":{"start":{"line":53,"column":4},"end":{"line":53,"column":30}},"20":{"start":{"line":54,"column":4},"end":{"line":54,"column":26}},"21":{"start":{"line":55,"column":4},"end":{"line":55,"column":24}},"22":{"start":{"line":58,"column":4},"end":{"line":109,"column":5}},"23":{"start":{"line":62,"column":8},"end":{"line":62,"column":37}},"24":{"start":{"line":63,"column":8},"end":{"line":63,"column":27}},"25":{"start":{"line":65,"column":8},"end":{"line":65,"column":62}},"26":{"start":{"line":66,"column":8},"end":{"line":84,"column":9}},"27":{"start":{"line":67,"column":12},"end":{"line":67,"column":36}},"28":{"start":{"line":69,"column":12},"end":{"line":71,"column":13}},"29":{"start":{"line":70,"column":16},"end":{"line":70,"column":25}},"30":{"start":{"line":72,"column":12},"end":{"line":79,"column":13}},"31":{"start":{"line":75,"column":16},"end":{"line":77,"column":17}},"32":{"start":{"line":76,"column":20},"end":{"line":76,"column":60}},"33":{"start":{"line":78,"column":16},"end":{"line":78,"column":25}},"34":{"start":{"line":80,"column":12},"end":{"line":80,"column":41}},"35":{"start":{"line":81,"column":12},"end":{"line":81,"column":35}},"36":{"start":{"line":82,"column":12},"end":{"line":82,"column":35}},"37":{"start":{"line":83,"column":12},"end":{"line":83,"column":35}},"38":{"start":{"line":88,"column":8},"end":{"line":88,"column":35}},"39":{"start":{"line":89,"column":8},"end":{"line":89,"column":27}},"40":{"start":{"line":91,"column":8},"end":{"line":91,"column":62}},"41":{"start":{"line":92,"column":8},"end":{"line":108,"column":9}},"42":{"start":{"line":93,"column":12},"end":{"line":93,"column":36}},"43":{"start":{"line":95,"column":12},"end":{"line":97,"column":13}},"44":{"start":{"line":96,"column":16},"end":{"line":96,"column":25}},"45":{"start":{"line":98,"column":12},"end":{"line":103,"column":13}},"46":{"start":{"line":99,"column":16},"end":{"line":101,"column":17}},"47":{"start":{"line":100,"column":20},"end":{"line":100,"column":60}},"48":{"start":{"line":102,"column":16},"end":{"line":102,"column":25}},"49":{"start":{"line":104,"column":12},"end":{"line":104,"column":39}},"50":{"start":{"line":105,"column":12},"end":{"line":105,"column":35}},"51":{"start":{"line":106,"column":12},"end":{"line":106,"column":35}},"52":{"start":{"line":107,"column":12},"end":{"line":107,"column":33}},"53":{"start":{"line":112,"column":4},"end":{"line":112,"column":14}},"54":{"start":{"line":115,"column":0},"end":{"line":115,"column":38}}},"branchMap":{"1":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":10},"end":{"line":15,"column":13}},{"start":{"line":15,"column":17},"end":{"line":15,"column":19}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"3":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":21,"column":8}},{"start":{"line":21,"column":8},"end":{"line":21,"column":8}}]},"4":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":12},"end":{"line":24,"column":12}},{"start":{"line":24,"column":12},"end":{"line":24,"column":12}}]},"5":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":11},"end":{"line":58,"column":31}},{"start":{"line":58,"column":35},"end":{"line":58,"column":53}}]},"6":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":12},"end":{"line":69,"column":12}},{"start":{"line":69,"column":12},"end":{"line":69,"column":12}}]},"7":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":12},"end":{"line":72,"column":12}},{"start":{"line":72,"column":12},"end":{"line":72,"column":12}}]},"8":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":16},"end":{"line":75,"column":16}},{"start":{"line":75,"column":16},"end":{"line":75,"column":16}}]},"9":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":12},"end":{"line":95,"column":12}},{"start":{"line":95,"column":12},"end":{"line":95,"column":12}}]},"10":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":12},"end":{"line":98,"column":12}},{"start":{"line":98,"column":12},"end":{"line":98,"column":12}}]},"11":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":16},"end":{"line":99,"column":16}},{"start":{"line":99,"column":16},"end":{"line":99,"column":16}}]}},"code":["var Util = require('../core/Util');","var DiagonalMovement = require('../core/DiagonalMovement');","","/**"," * Bi-directional Breadth-First-Search path finder."," * @constructor"," * @param {object} opt"," * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed."," *     Deprecated, use diagonalMovement instead."," * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching"," *     block corners. Deprecated, use diagonalMovement instead."," * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement."," */","function BiBreadthFirstFinder(opt) {","    opt = opt || {};","    this.allowDiagonal = opt.allowDiagonal;","    this.dontCrossCorners = opt.dontCrossCorners;","    this.diagonalMovement = opt.diagonalMovement;","","    if (!this.diagonalMovement) {","        if (!this.allowDiagonal) {","            this.diagonalMovement = DiagonalMovement.Never;","        } else {","            if (this.dontCrossCorners) {","                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;","            } else {","                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;","            }","        }","    }","}","","","/**"," * Find and return the the path."," * @return {Array<Array<number>>} The path, including both start and"," *     end positions."," */","BiBreadthFirstFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {","    var startNode = grid.getNodeAt(startX, startY),","        endNode = grid.getNodeAt(endX, endY),","        startOpenList = [], endOpenList = [],","        neighbors, neighbor, node,","        diagonalMovement = this.diagonalMovement,","        BY_START = 0, BY_END = 1,","        i, l;","","    // push the start and end nodes into the queues","    startOpenList.push(startNode);","    startNode.opened = true;","    startNode.by = BY_START;","","    endOpenList.push(endNode);","    endNode.opened = true;","    endNode.by = BY_END;","","    // while both the queues are not empty","    while (startOpenList.length && endOpenList.length) {","","        // expand start open list","","        node = startOpenList.shift();","        node.closed = true;","","        neighbors = grid.getNeighbors(node, diagonalMovement);","        for (i = 0, l = neighbors.length; i < l; ++i) {","            neighbor = neighbors[i];","","            if (neighbor.closed) {","                continue;","            }","            if (neighbor.opened) {","                // if this node has been inspected by the reversed search,","                // then a path is found.","                if (neighbor.by === BY_END) {","                    return Util.biBacktrace(node, neighbor);","                }","                continue;","            }","            startOpenList.push(neighbor);","            neighbor.parent = node;","            neighbor.opened = true;","            neighbor.by = BY_START;","        }","","        // expand end open list","","        node = endOpenList.shift();","        node.closed = true;","","        neighbors = grid.getNeighbors(node, diagonalMovement);","        for (i = 0, l = neighbors.length; i < l; ++i) {","            neighbor = neighbors[i];","","            if (neighbor.closed) {","                continue;","            }","            if (neighbor.opened) {","                if (neighbor.by === BY_START) {","                    return Util.biBacktrace(neighbor, node);","                }","                continue;","            }","            endOpenList.push(neighbor);","            neighbor.parent = node;","            neighbor.opened = true;","            neighbor.by = BY_END;","        }","    }","","    // fail to find the path","    return [];","};","","module.exports = BiBreadthFirstFinder;",""],"l":{"1":1,"2":1,"14":1,"15":0,"16":0,"17":0,"18":0,"20":0,"21":0,"22":0,"24":0,"25":0,"27":0,"39":1,"40":0,"49":0,"50":0,"51":0,"53":0,"54":0,"55":0,"58":0,"62":0,"63":0,"65":0,"66":0,"67":0,"69":0,"70":0,"72":0,"75":0,"76":0,"78":0,"80":0,"81":0,"82":0,"83":0,"88":0,"89":0,"91":0,"92":0,"93":0,"95":0,"96":0,"98":0,"99":0,"100":0,"102":0,"104":0,"105":0,"106":0,"107":0,"112":0,"115":1}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/BiDijkstraFinder.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/BiDijkstraFinder.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":1,"8":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"BiDijkstraFinder","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":31}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":21},"end":{"line":16,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":47}},"2":{"start":{"line":14,"column":0},"end":{"line":19,"column":1}},"3":{"start":{"line":15,"column":4},"end":{"line":15,"column":34}},"4":{"start":{"line":16,"column":4},"end":{"line":18,"column":6}},"5":{"start":{"line":17,"column":8},"end":{"line":17,"column":17}},"6":{"start":{"line":21,"column":0},"end":{"line":21,"column":49}},"7":{"start":{"line":22,"column":0},"end":{"line":22,"column":58}},"8":{"start":{"line":24,"column":0},"end":{"line":24,"column":34}}},"branchMap":{},"code":["var BiAStarFinder = require('./BiAStarFinder');","","/**"," * Bi-directional Dijkstra path-finder."," * @constructor"," * @extends BiAStarFinder"," * @param {Object} opt"," * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed."," *     Deprecated, use diagonalMovement instead."," * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching"," *     block corners. Deprecated, use diagonalMovement instead."," * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement."," */","function BiDijkstraFinder(opt) {","    BiAStarFinder.call(this, opt);","    this.heuristic = function(dx, dy) {","        return 0;","    };","}","","BiDijkstraFinder.prototype = new BiAStarFinder();","BiDijkstraFinder.prototype.constructor = BiDijkstraFinder;","","module.exports = BiDijkstraFinder;",""],"l":{"1":1,"14":1,"15":0,"16":0,"17":0,"21":1,"22":1,"24":1}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/IDAStarFinder.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/IDAStarFinder.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"IDAStarFinder","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":28}}},"2":{"name":"(anonymous_2)","line":72,"loc":{"start":{"line":72,"column":35},"end":{"line":72,"column":78}}},"3":{"name":"(anonymous_3)","line":80,"loc":{"start":{"line":80,"column":12},"end":{"line":80,"column":27}}},"4":{"name":"(anonymous_4)","line":85,"loc":{"start":{"line":85,"column":15},"end":{"line":85,"column":30}}},"5":{"name":"(anonymous_5)","line":101,"loc":{"start":{"line":101,"column":17},"end":{"line":101,"column":57}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":41}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":46}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":41}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":59}},"5":{"start":{"line":34,"column":0},"end":{"line":63,"column":1}},"6":{"start":{"line":35,"column":4},"end":{"line":35,"column":20}},"7":{"start":{"line":36,"column":4},"end":{"line":36,"column":43}},"8":{"start":{"line":37,"column":4},"end":{"line":37,"column":49}},"9":{"start":{"line":38,"column":4},"end":{"line":38,"column":49}},"10":{"start":{"line":39,"column":4},"end":{"line":39,"column":58}},"11":{"start":{"line":40,"column":4},"end":{"line":40,"column":34}},"12":{"start":{"line":41,"column":4},"end":{"line":41,"column":54}},"13":{"start":{"line":42,"column":4},"end":{"line":42,"column":47}},"14":{"start":{"line":44,"column":4},"end":{"line":54,"column":5}},"15":{"start":{"line":45,"column":8},"end":{"line":53,"column":9}},"16":{"start":{"line":46,"column":12},"end":{"line":46,"column":59}},"17":{"start":{"line":48,"column":12},"end":{"line":52,"column":13}},"18":{"start":{"line":49,"column":16},"end":{"line":49,"column":77}},"19":{"start":{"line":51,"column":16},"end":{"line":51,"column":77}},"20":{"start":{"line":58,"column":4},"end":{"line":62,"column":5}},"21":{"start":{"line":59,"column":8},"end":{"line":59,"column":62}},"22":{"start":{"line":61,"column":8},"end":{"line":61,"column":59}},"23":{"start":{"line":72,"column":0},"end":{"line":207,"column":2}},"24":{"start":{"line":74,"column":4},"end":{"line":74,"column":25}},"25":{"start":{"line":77,"column":4},"end":{"line":77,"column":41}},"26":{"start":{"line":80,"column":4},"end":{"line":82,"column":17}},"27":{"start":{"line":81,"column":8},"end":{"line":81,"column":72}},"28":{"start":{"line":85,"column":4},"end":{"line":87,"column":6}},"29":{"start":{"line":86,"column":8},"end":{"line":86,"column":61}},"30":{"start":{"line":101,"column":4},"end":{"line":169,"column":17}},"31":{"start":{"line":102,"column":8},"end":{"line":102,"column":23}},"32":{"start":{"line":105,"column":8},"end":{"line":109,"column":9}},"33":{"start":{"line":108,"column":12},"end":{"line":108,"column":28}},"34":{"start":{"line":111,"column":8},"end":{"line":111,"column":47}},"35":{"start":{"line":114,"column":8},"end":{"line":116,"column":9}},"36":{"start":{"line":115,"column":12},"end":{"line":115,"column":21}},"37":{"start":{"line":118,"column":8},"end":{"line":121,"column":9}},"38":{"start":{"line":119,"column":12},"end":{"line":119,"column":44}},"39":{"start":{"line":120,"column":12},"end":{"line":120,"column":24}},"40":{"start":{"line":123,"column":8},"end":{"line":123,"column":33}},"41":{"start":{"line":125,"column":8},"end":{"line":125,"column":72}},"42":{"start":{"line":135,"column":8},"end":{"line":165,"column":9}},"43":{"start":{"line":137,"column":12},"end":{"line":145,"column":13}},"44":{"start":{"line":140,"column":16},"end":{"line":140,"column":71}},"45":{"start":{"line":142,"column":16},"end":{"line":144,"column":17}},"46":{"start":{"line":143,"column":20},"end":{"line":143,"column":44}},"47":{"start":{"line":147,"column":12},"end":{"line":147,"column":87}},"48":{"start":{"line":149,"column":12},"end":{"line":155,"column":13}},"49":{"start":{"line":150,"column":16},"end":{"line":150,"column":48}},"50":{"start":{"line":154,"column":16},"end":{"line":154,"column":25}},"51":{"start":{"line":158,"column":12},"end":{"line":160,"column":13}},"52":{"start":{"line":159,"column":16},"end":{"line":159,"column":41}},"53":{"start":{"line":162,"column":12},"end":{"line":164,"column":13}},"54":{"start":{"line":163,"column":16},"end":{"line":163,"column":24}},"55":{"start":{"line":167,"column":8},"end":{"line":167,"column":19}},"56":{"start":{"line":172,"column":4},"end":{"line":172,"column":47}},"57":{"start":{"line":173,"column":4},"end":{"line":173,"column":43}},"58":{"start":{"line":177,"column":4},"end":{"line":177,"column":31}},"59":{"start":{"line":179,"column":4},"end":{"line":179,"column":20}},"60":{"start":{"line":182,"column":4},"end":{"line":203,"column":5}},"61":{"start":{"line":184,"column":8},"end":{"line":184,"column":19}},"62":{"start":{"line":187,"column":8},"end":{"line":187,"column":47}},"63":{"start":{"line":190,"column":8},"end":{"line":192,"column":9}},"64":{"start":{"line":191,"column":12},"end":{"line":191,"column":22}},"65":{"start":{"line":196,"column":8},"end":{"line":198,"column":9}},"66":{"start":{"line":197,"column":12},"end":{"line":197,"column":25}},"67":{"start":{"line":202,"column":8},"end":{"line":202,"column":19}},"68":{"start":{"line":206,"column":4},"end":{"line":206,"column":14}},"69":{"start":{"line":209,"column":0},"end":{"line":209,"column":31}}},"branchMap":{"1":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":10},"end":{"line":35,"column":13}},{"start":{"line":35,"column":17},"end":{"line":35,"column":19}}]},"2":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":21},"end":{"line":39,"column":34}},{"start":{"line":39,"column":38},"end":{"line":39,"column":57}}]},"3":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":18},"end":{"line":40,"column":28}},{"start":{"line":40,"column":32},"end":{"line":40,"column":33}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":26},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":21},"end":{"line":42,"column":34}},{"start":{"line":42,"column":38},"end":{"line":42,"column":46}}]},"6":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":44,"column":4}},{"start":{"line":44,"column":4},"end":{"line":44,"column":4}}]},"7":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]},"8":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":12},"end":{"line":48,"column":12}},{"start":{"line":48,"column":12},"end":{"line":48,"column":12}}]},"9":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"10":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":25},"end":{"line":59,"column":38}},{"start":{"line":59,"column":42},"end":{"line":59,"column":61}}]},"11":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":25},"end":{"line":61,"column":38}},{"start":{"line":61,"column":42},"end":{"line":61,"column":58}}]},"12":{"line":86,"type":"cond-expr","locations":[{"start":{"line":86,"column":46},"end":{"line":86,"column":47}},{"start":{"line":86,"column":50},"end":{"line":86,"column":60}}]},"13":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":16},"end":{"line":86,"column":27}},{"start":{"line":86,"column":31},"end":{"line":86,"column":42}}]},"14":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":105,"column":8}},{"start":{"line":105,"column":8},"end":{"line":105,"column":8}}]},"15":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":12},"end":{"line":105,"column":30}},{"start":{"line":106,"column":12},"end":{"line":106,"column":68}}]},"16":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":8},"end":{"line":114,"column":8}},{"start":{"line":114,"column":8},"end":{"line":114,"column":8}}]},"17":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":8},"end":{"line":118,"column":8}},{"start":{"line":118,"column":8},"end":{"line":118,"column":8}}]},"18":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":12},"end":{"line":137,"column":12}},{"start":{"line":137,"column":12},"end":{"line":137,"column":12}}]},"19":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":40},"end":{"line":140,"column":65}},{"start":{"line":140,"column":69},"end":{"line":140,"column":70}}]},"20":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":16},"end":{"line":142,"column":16}},{"start":{"line":142,"column":16},"end":{"line":142,"column":16}}]},"21":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":12},"end":{"line":149,"column":12}},{"start":{"line":149,"column":12},"end":{"line":149,"column":12}}]},"22":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":12},"end":{"line":158,"column":12}},{"start":{"line":158,"column":12},"end":{"line":158,"column":12}}]},"23":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":16},"end":{"line":158,"column":35}},{"start":{"line":158,"column":39},"end":{"line":158,"column":70}}]},"24":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":12},"end":{"line":162,"column":12}},{"start":{"line":162,"column":12},"end":{"line":162,"column":12}}]},"25":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":8},"end":{"line":190,"column":8}},{"start":{"line":190,"column":8},"end":{"line":190,"column":8}}]},"26":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":8},"end":{"line":196,"column":8}},{"start":{"line":196,"column":8},"end":{"line":196,"column":8}}]}},"code":["var Util       = require('../core/Util');","var Heuristic  = require('../core/Heuristic');","var Node       = require('../core/Node');","var DiagonalMovement = require('../core/DiagonalMovement');","","/**"," * Iterative Deeping A Star (IDA*) path-finder."," *"," * Recursion based on:"," *   http://www.apl.jhu.edu/~hall/AI-Programming/IDA-Star.html"," *"," * Path retracing based on:"," *  V. Nageshwara Rao, Vipin Kumar and K. Ramesh"," *  \"A Parallel Implementation of Iterative-Deeping-A*\", January 1987."," *  ftp://ftp.cs.utexas.edu/.snapshot/hourly.1/pub/AI-Lab/tech-reports/UT-AI-TR-87-46.pdf"," *"," * @author Gerard Meier (www.gerardmeier.com)"," *"," * @constructor"," * @param {Object} opt"," * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed."," *     Deprecated, use diagonalMovement instead."," * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching"," *     block corners. Deprecated, use diagonalMovement instead."," * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement."," * @param {function} opt.heuristic Heuristic function to estimate the distance"," *     (defaults to manhattan)."," * @param {number} opt.weight Weight to apply to the heuristic to allow for"," *     suboptimal paths, in order to speed up the search."," * @param {boolean} opt.trackRecursion Whether to track recursion for"," *     statistical purposes."," * @param {number} opt.timeLimit Maximum execution time. Use <= 0 for infinite."," */","function IDAStarFinder(opt) {","    opt = opt || {};","    this.allowDiagonal = opt.allowDiagonal;","    this.dontCrossCorners = opt.dontCrossCorners;","    this.diagonalMovement = opt.diagonalMovement;","    this.heuristic = opt.heuristic || Heuristic.manhattan;","    this.weight = opt.weight || 1;","    this.trackRecursion = opt.trackRecursion || false;","    this.timeLimit = opt.timeLimit || Infinity; // Default: no time limit.","","    if (!this.diagonalMovement) {","        if (!this.allowDiagonal) {","            this.diagonalMovement = DiagonalMovement.Never;","        } else {","            if (this.dontCrossCorners) {","                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;","            } else {","                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;","            }","        }","    }","","    // When diagonal movement is allowed the manhattan heuristic is not","    // admissible, it should be octile instead","    if (this.diagonalMovement === DiagonalMovement.Never) {","        this.heuristic = opt.heuristic || Heuristic.manhattan;","    } else {","        this.heuristic = opt.heuristic || Heuristic.octile;","    }","}","","/**"," * Find and return the the path. When an empty array is returned, either"," * no path is possible, or the maximum execution time is reached."," *"," * @return {Array<Array<number>>} The path, including both start and"," *     end positions."," */","IDAStarFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {","    // Used for statistics:","    var nodesVisited = 0;","","    // Execution time limitation:","    var startTime = new Date().getTime();","","    // Heuristic helper:","    var h = function(a, b) {","        return this.heuristic(Math.abs(b.x - a.x), Math.abs(b.y - a.y));","    }.bind(this);","","    // Step cost from a to b:","    var cost = function(a, b) {","        return (a.x === b.x || a.y === b.y) ? 1 : Math.SQRT2;","    };","","    /**","     * IDA* search implementation.","     *","     * @param {Node} The node currently expanding from.","     * @param {number} Cost to reach the given node.","     * @param {number} Maximum search depth (cut-off value).","     * @param {Array<Array<number>>} The found route.","     * @param {number} Recursion depth.","     *","     * @return {Object} either a number with the new optimal cut-off depth,","     * or a valid node instance, in which case a path was found.","     */","    var search = function(node, g, cutoff, route, depth) {","        nodesVisited++;","","        // Enforce timelimit:","        if (this.timeLimit > 0 &&","            new Date().getTime() - startTime > this.timeLimit * 1000) {","            // Enforced as \"path-not-found\".","            return Infinity;","        }","","        var f = g + h(node, end) * this.weight;","","        // We've searched too deep for this iteration.","        if (f > cutoff) {","            return f;","        }","","        if (node == end) {","            route[depth] = [node.x, node.y];","            return node;","        }","","        var min, t, k, neighbour;","","        var neighbours = grid.getNeighbors(node, this.diagonalMovement);","","        // Sort the neighbours, gives nicer paths. But, this deviates","        // from the original algorithm - so I left it out.","        //neighbours.sort(function(a, b){","        //    return h(a, end) - h(b, end);","        //});","","        ","        /*jshint -W084 *///Disable warning: Expected a conditional expression and instead saw an assignment","        for (k = 0, min = Infinity; neighbour = neighbours[k]; ++k) {","        /*jshint +W084 *///Enable warning: Expected a conditional expression and instead saw an assignment","            if (this.trackRecursion) {","                // Retain a copy for visualisation. Due to recursion, this","                // node may be part of other paths too.","                neighbour.retainCount = neighbour.retainCount + 1 || 1;","","                if(neighbour.tested !== true) {","                    neighbour.tested = true;","                }","            }","","            t = search(neighbour, g + cost(node, neighbour), cutoff, route, depth + 1);","","            if (t instanceof Node) {","                route[depth] = [node.x, node.y];","","                // For a typical A* linked list, this would work:","                // neighbour.parent = node;","                return t;","            }","","            // Decrement count, then determine whether it's actually closed.","            if (this.trackRecursion && (--neighbour.retainCount) === 0) {","                neighbour.tested = false;","            }","","            if (t < min) {","                min = t;","            }","        }","","        return min;","","    }.bind(this);","","    // Node instance lookups:","    var start = grid.getNodeAt(startX, startY);","    var end   = grid.getNodeAt(endX, endY);","","    // Initial search depth, given the typical heuristic contraints,","    // there should be no cheaper route possible.","    var cutOff = h(start, end);","","    var j, route, t;","","    // With an overflow protection.","    for (j = 0; true; ++j) {","","        route = [];","","        // Search till cut-off depth:","        t = search(start, 0, cutOff, route, 0);","","        // Route not possible, or not found in time limit.","        if (t === Infinity) {","            return [];","        }","","        // If t is a node, it's also the end node. Route is now","        // populated with a valid path to the end node.","        if (t instanceof Node) {","            return route;","        }","","        // Try again, this time with a deeper cut-off. The t score","        // is the closest we got to the end node.","        cutOff = t;","    }","","    // This _should_ never to be reached.","    return [];","};","","module.exports = IDAStarFinder;",""],"l":{"1":1,"2":1,"3":1,"4":1,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"44":0,"45":0,"46":0,"48":0,"49":0,"51":0,"58":0,"59":0,"61":0,"72":1,"74":0,"77":0,"80":0,"81":0,"85":0,"86":0,"101":0,"102":0,"105":0,"108":0,"111":0,"114":0,"115":0,"118":0,"119":0,"120":0,"123":0,"125":0,"135":0,"137":0,"140":0,"142":0,"143":0,"147":0,"149":0,"150":0,"154":0,"158":0,"159":0,"162":0,"163":0,"167":0,"172":0,"173":0,"177":0,"179":0,"182":0,"184":0,"187":0,"190":0,"191":0,"196":0,"197":0,"202":0,"206":0,"209":1}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/JumpPointFinder.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/JumpPointFinder.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"JumpPointFinder","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":30}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":59}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":65}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":67}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":81}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":93}},"6":{"start":{"line":18,"column":0},"end":{"line":29,"column":1}},"7":{"start":{"line":19,"column":4},"end":{"line":19,"column":20}},"8":{"start":{"line":20,"column":4},"end":{"line":28,"column":5}},"9":{"start":{"line":21,"column":8},"end":{"line":21,"column":47}},"10":{"start":{"line":22,"column":11},"end":{"line":28,"column":5}},"11":{"start":{"line":23,"column":8},"end":{"line":23,"column":48}},"12":{"start":{"line":24,"column":11},"end":{"line":28,"column":5}},"13":{"start":{"line":25,"column":8},"end":{"line":25,"column":55}},"14":{"start":{"line":27,"column":8},"end":{"line":27,"column":61}},"15":{"start":{"line":31,"column":0},"end":{"line":31,"column":33}}},"branchMap":{"1":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":10},"end":{"line":19,"column":13}},{"start":{"line":19,"column":17},"end":{"line":19,"column":19}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"3":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":11},"end":{"line":22,"column":11}},{"start":{"line":22,"column":11},"end":{"line":22,"column":11}}]},"4":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":11},"end":{"line":24,"column":11}},{"start":{"line":24,"column":11},"end":{"line":24,"column":11}}]}},"code":["/**"," * @author aniero / https://github.com/aniero"," */","var DiagonalMovement = require('../core/DiagonalMovement');","var JPFNeverMoveDiagonally = require('./JPFNeverMoveDiagonally');","var JPFAlwaysMoveDiagonally = require('./JPFAlwaysMoveDiagonally');","var JPFMoveDiagonallyIfNoObstacles = require('./JPFMoveDiagonallyIfNoObstacles');","var JPFMoveDiagonallyIfAtMostOneObstacle = require('./JPFMoveDiagonallyIfAtMostOneObstacle');","","/**"," * Path finder using the Jump Point Search algorithm"," * @param {Object} opt"," * @param {function} opt.heuristic Heuristic function to estimate the distance"," *     (defaults to manhattan)."," * @param {DiagonalMovement} opt.diagonalMovement Condition under which diagonal"," *      movement will be allowed."," */","function JumpPointFinder(opt) {","    opt = opt || {};","    if (opt.diagonalMovement === DiagonalMovement.Never) {","        return new JPFNeverMoveDiagonally(opt);","    } else if (opt.diagonalMovement === DiagonalMovement.Always) {","        return new JPFAlwaysMoveDiagonally(opt);","    } else if (opt.diagonalMovement === DiagonalMovement.OnlyWhenNoObstacles) {","        return new JPFMoveDiagonallyIfNoObstacles(opt);","    } else {","        return new JPFMoveDiagonallyIfAtMostOneObstacle(opt);","    }","}","","module.exports = JumpPointFinder;",""],"l":{"4":1,"5":1,"6":1,"7":1,"8":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"27":0,"31":1}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/JPFNeverMoveDiagonally.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/JPFNeverMoveDiagonally.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0],"7":[0,0],"8":[0,0],"9":[0,0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"JPFNeverMoveDiagonally","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":41},"end":{"line":25,"column":64}}},"3":{"name":"(anonymous_3)","line":70,"loc":{"start":{"line":70,"column":50},"end":{"line":70,"column":65}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":59}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":59}},"3":{"start":{"line":11,"column":0},"end":{"line":13,"column":1}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":40}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":61}},"6":{"start":{"line":16,"column":0},"end":{"line":16,"column":70}},"7":{"start":{"line":25,"column":0},"end":{"line":62,"column":2}},"8":{"start":{"line":26,"column":4},"end":{"line":27,"column":33}},"9":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"10":{"start":{"line":30,"column":8},"end":{"line":30,"column":20}},"11":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"12":{"start":{"line":34,"column":8},"end":{"line":34,"column":43}},"13":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"14":{"start":{"line":38,"column":8},"end":{"line":38,"column":22}},"15":{"start":{"line":41,"column":4},"end":{"line":59,"column":5}},"16":{"start":{"line":42,"column":8},"end":{"line":45,"column":9}},"17":{"start":{"line":44,"column":12},"end":{"line":44,"column":26}},"18":{"start":{"line":47,"column":9},"end":{"line":59,"column":5}},"19":{"start":{"line":48,"column":8},"end":{"line":51,"column":9}},"20":{"start":{"line":50,"column":12},"end":{"line":50,"column":26}},"21":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"22":{"start":{"line":54,"column":12},"end":{"line":54,"column":26}},"23":{"start":{"line":58,"column":8},"end":{"line":58,"column":78}},"24":{"start":{"line":61,"column":4},"end":{"line":61,"column":44}},"25":{"start":{"line":70,"column":0},"end":{"line":118,"column":2}},"26":{"start":{"line":71,"column":4},"end":{"line":75,"column":58}},"27":{"start":{"line":78,"column":4},"end":{"line":115,"column":5}},"28":{"start":{"line":79,"column":8},"end":{"line":79,"column":22}},"29":{"start":{"line":80,"column":8},"end":{"line":80,"column":22}},"30":{"start":{"line":82,"column":8},"end":{"line":82,"column":54}},"31":{"start":{"line":83,"column":8},"end":{"line":83,"column":54}},"32":{"start":{"line":85,"column":8},"end":{"line":106,"column":9}},"33":{"start":{"line":86,"column":12},"end":{"line":88,"column":13}},"34":{"start":{"line":87,"column":16},"end":{"line":87,"column":43}},"35":{"start":{"line":89,"column":12},"end":{"line":91,"column":13}},"36":{"start":{"line":90,"column":16},"end":{"line":90,"column":43}},"37":{"start":{"line":92,"column":12},"end":{"line":94,"column":13}},"38":{"start":{"line":93,"column":16},"end":{"line":93,"column":44}},"39":{"start":{"line":96,"column":13},"end":{"line":106,"column":9}},"40":{"start":{"line":97,"column":12},"end":{"line":99,"column":13}},"41":{"start":{"line":98,"column":16},"end":{"line":98,"column":43}},"42":{"start":{"line":100,"column":12},"end":{"line":102,"column":13}},"43":{"start":{"line":101,"column":16},"end":{"line":101,"column":43}},"44":{"start":{"line":103,"column":12},"end":{"line":105,"column":13}},"45":{"start":{"line":104,"column":16},"end":{"line":104,"column":44}},"46":{"start":{"line":110,"column":8},"end":{"line":110,"column":72}},"47":{"start":{"line":111,"column":8},"end":{"line":114,"column":9}},"48":{"start":{"line":112,"column":12},"end":{"line":112,"column":44}},"49":{"start":{"line":113,"column":12},"end":{"line":113,"column":61}},"50":{"start":{"line":117,"column":4},"end":{"line":117,"column":21}},"51":{"start":{"line":120,"column":0},"end":{"line":120,"column":40}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"4":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"5":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":42,"column":8}},{"start":{"line":42,"column":8},"end":{"line":42,"column":8}}]},"6":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":13},"end":{"line":42,"column":40}},{"start":{"line":42,"column":44},"end":{"line":42,"column":77}},{"start":{"line":43,"column":13},"end":{"line":43,"column":40}},{"start":{"line":43,"column":44},"end":{"line":43,"column":77}}]},"7":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":9},"end":{"line":47,"column":9}},{"start":{"line":47,"column":9},"end":{"line":47,"column":9}}]},"8":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":48,"column":8}},{"start":{"line":48,"column":8},"end":{"line":48,"column":8}}]},"9":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":13},"end":{"line":48,"column":40}},{"start":{"line":48,"column":44},"end":{"line":48,"column":77}},{"start":{"line":49,"column":13},"end":{"line":49,"column":40}},{"start":{"line":49,"column":44},"end":{"line":49,"column":77}}]},"10":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":53,"column":8}},{"start":{"line":53,"column":8},"end":{"line":53,"column":8}}]},"11":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":12},"end":{"line":53,"column":38}},{"start":{"line":53,"column":42},"end":{"line":53,"column":68}}]},"12":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":78,"column":4}},{"start":{"line":78,"column":4},"end":{"line":78,"column":4}}]},"13":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":8}},{"start":{"line":85,"column":8},"end":{"line":85,"column":8}}]},"14":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":12},"end":{"line":86,"column":12}},{"start":{"line":86,"column":12},"end":{"line":86,"column":12}}]},"15":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":12},"end":{"line":89,"column":12}},{"start":{"line":89,"column":12},"end":{"line":89,"column":12}}]},"16":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":12},"end":{"line":92,"column":12}},{"start":{"line":92,"column":12},"end":{"line":92,"column":12}}]},"17":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":13},"end":{"line":96,"column":13}},{"start":{"line":96,"column":13},"end":{"line":96,"column":13}}]},"18":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":12},"end":{"line":97,"column":12}},{"start":{"line":97,"column":12},"end":{"line":97,"column":12}}]},"19":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":12},"end":{"line":100,"column":12}},{"start":{"line":100,"column":12},"end":{"line":100,"column":12}}]},"20":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":12},"end":{"line":103,"column":12}},{"start":{"line":103,"column":12},"end":{"line":103,"column":12}}]}},"code":["/**"," * @author imor / https://github.com/imor"," */","var JumpPointFinderBase = require('./JumpPointFinderBase');","var DiagonalMovement = require('../core/DiagonalMovement');","","/**"," * Path finder using the Jump Point Search algorithm allowing only horizontal"," * or vertical movements."," */","function JPFNeverMoveDiagonally(opt) {","    JumpPointFinderBase.call(this, opt);","}","","JPFNeverMoveDiagonally.prototype = new JumpPointFinderBase();","JPFNeverMoveDiagonally.prototype.constructor = JPFNeverMoveDiagonally;","","/**"," * Search recursively in the direction (parent -> child), stopping only when a"," * jump point is found."," * @protected"," * @return {Array<Array<number>>} The x, y coordinate of the jump point"," *     found, or null if not found"," */","JPFNeverMoveDiagonally.prototype._jump = function(x, y, px, py) {","    var grid = this.grid,","        dx = x - px, dy = y - py;","","    if (!grid.isWalkableAt(x, y)) {","        return null;","    }","","    if(this.trackJumpRecursion === true) {","        grid.getNodeAt(x, y).tested = true;","    }","","    if (grid.getNodeAt(x, y) === this.endNode) {","        return [x, y];","    }","","    if (dx !== 0) {","        if ((grid.isWalkableAt(x, y - 1) && !grid.isWalkableAt(x - dx, y - 1)) ||","            (grid.isWalkableAt(x, y + 1) && !grid.isWalkableAt(x - dx, y + 1))) {","            return [x, y];","        }","    }","    else if (dy !== 0) {","        if ((grid.isWalkableAt(x - 1, y) && !grid.isWalkableAt(x - 1, y - dy)) ||","            (grid.isWalkableAt(x + 1, y) && !grid.isWalkableAt(x + 1, y - dy))) {","            return [x, y];","        }","        //When moving vertically, must check for horizontal jump points","        if (this._jump(x + 1, y, x, y) || this._jump(x - 1, y, x, y)) {","            return [x, y];","        }","    }","    else {","        throw new Error(\"Only horizontal and vertical movements are allowed\");","    }","","    return this._jump(x + dx, y + dy, x, y);","};","","/**"," * Find the neighbors for the given node. If the node has a parent,"," * prune the neighbors based on the jump point search algorithm, otherwise"," * return all available neighbors."," * @return {Array<Array<number>>} The neighbors found."," */","JPFNeverMoveDiagonally.prototype._findNeighbors = function(node) {","    var parent = node.parent,","        x = node.x, y = node.y,","        grid = this.grid,","        px, py, nx, ny, dx, dy,","        neighbors = [], neighborNodes, neighborNode, i, l;","","    // directed pruning: can ignore most neighbors, unless forced.","    if (parent) {","        px = parent.x;","        py = parent.y;","        // get the normalized direction of travel","        dx = (x - px) / Math.max(Math.abs(x - px), 1);","        dy = (y - py) / Math.max(Math.abs(y - py), 1);","","        if (dx !== 0) {","            if (grid.isWalkableAt(x, y - 1)) {","                neighbors.push([x, y - 1]);","            }","            if (grid.isWalkableAt(x, y + 1)) {","                neighbors.push([x, y + 1]);","            }","            if (grid.isWalkableAt(x + dx, y)) {","                neighbors.push([x + dx, y]);","            }","        }","        else if (dy !== 0) {","            if (grid.isWalkableAt(x - 1, y)) {","                neighbors.push([x - 1, y]);","            }","            if (grid.isWalkableAt(x + 1, y)) {","                neighbors.push([x + 1, y]);","            }","            if (grid.isWalkableAt(x, y + dy)) {","                neighbors.push([x, y + dy]);","            }","        }","    }","    // return all neighbors","    else {","        neighborNodes = grid.getNeighbors(node, DiagonalMovement.Never);","        for (i = 0, l = neighborNodes.length; i < l; ++i) {","            neighborNode = neighborNodes[i];","            neighbors.push([neighborNode.x, neighborNode.y]);","        }","    }","","    return neighbors;","};","","module.exports = JPFNeverMoveDiagonally;",""],"l":{"4":1,"5":1,"11":1,"12":0,"15":1,"16":1,"25":1,"26":0,"29":0,"30":0,"33":0,"34":0,"37":0,"38":0,"41":0,"42":0,"44":0,"47":0,"48":0,"50":0,"53":0,"54":0,"58":0,"61":0,"70":1,"71":0,"78":0,"79":0,"80":0,"82":0,"83":0,"85":0,"86":0,"87":0,"89":0,"90":0,"92":0,"93":0,"96":0,"97":0,"98":0,"100":0,"101":0,"103":0,"104":0,"110":0,"111":0,"112":0,"113":0,"117":0,"120":1}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/JumpPointFinderBase.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/JumpPointFinderBase.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":4,"7":4,"8":4,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1},"b":{"1":[4,4],"2":[4,4],"3":[4,4],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":4,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"JumpPointFinderBase","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":34}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":41},"end":{"line":26,"column":84}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":44},"end":{"line":27,"column":67}}},"4":{"name":"(anonymous_4)","line":67,"loc":{"start":{"line":67,"column":52},"end":{"line":67,"column":67}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":33}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":41}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":46}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":59}},"5":{"start":{"line":15,"column":0},"end":{"line":19,"column":1}},"6":{"start":{"line":16,"column":4},"end":{"line":16,"column":20}},"7":{"start":{"line":17,"column":4},"end":{"line":17,"column":58}},"8":{"start":{"line":18,"column":4},"end":{"line":18,"column":62}},"9":{"start":{"line":26,"column":0},"end":{"line":59,"column":2}},"10":{"start":{"line":27,"column":4},"end":{"line":31,"column":66}},"11":{"start":{"line":28,"column":12},"end":{"line":28,"column":37}},"12":{"start":{"line":33,"column":4},"end":{"line":33,"column":21}},"13":{"start":{"line":37,"column":4},"end":{"line":37,"column":20}},"14":{"start":{"line":38,"column":4},"end":{"line":38,"column":20}},"15":{"start":{"line":41,"column":4},"end":{"line":41,"column":29}},"16":{"start":{"line":42,"column":4},"end":{"line":42,"column":28}},"17":{"start":{"line":45,"column":4},"end":{"line":55,"column":5}},"18":{"start":{"line":47,"column":8},"end":{"line":47,"column":30}},"19":{"start":{"line":48,"column":8},"end":{"line":48,"column":27}},"20":{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},"21":{"start":{"line":51,"column":12},"end":{"line":51,"column":60}},"22":{"start":{"line":54,"column":8},"end":{"line":54,"column":39}},"23":{"start":{"line":58,"column":4},"end":{"line":58,"column":14}},"24":{"start":{"line":67,"column":0},"end":{"line":112,"column":2}},"25":{"start":{"line":68,"column":4},"end":{"line":77,"column":39}},"26":{"start":{"line":79,"column":4},"end":{"line":79,"column":42}},"27":{"start":{"line":80,"column":4},"end":{"line":111,"column":5}},"28":{"start":{"line":81,"column":8},"end":{"line":81,"column":32}},"29":{"start":{"line":82,"column":8},"end":{"line":82,"column":63}},"30":{"start":{"line":83,"column":8},"end":{"line":110,"column":9}},"31":{"start":{"line":85,"column":12},"end":{"line":85,"column":30}},"32":{"start":{"line":86,"column":12},"end":{"line":86,"column":30}},"33":{"start":{"line":87,"column":12},"end":{"line":87,"column":46}},"34":{"start":{"line":89,"column":12},"end":{"line":91,"column":13}},"35":{"start":{"line":90,"column":16},"end":{"line":90,"column":25}},"36":{"start":{"line":94,"column":12},"end":{"line":94,"column":59}},"37":{"start":{"line":95,"column":12},"end":{"line":95,"column":28}},"38":{"start":{"line":97,"column":12},"end":{"line":109,"column":13}},"39":{"start":{"line":98,"column":16},"end":{"line":98,"column":32}},"40":{"start":{"line":99,"column":16},"end":{"line":99,"column":85}},"41":{"start":{"line":100,"column":16},"end":{"line":100,"column":53}},"42":{"start":{"line":101,"column":16},"end":{"line":101,"column":39}},"43":{"start":{"line":103,"column":16},"end":{"line":108,"column":17}},"44":{"start":{"line":104,"column":20},"end":{"line":104,"column":44}},"45":{"start":{"line":105,"column":20},"end":{"line":105,"column":43}},"46":{"start":{"line":107,"column":20},"end":{"line":107,"column":50}},"47":{"start":{"line":114,"column":0},"end":{"line":114,"column":37}}},"branchMap":{"1":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":10},"end":{"line":16,"column":13}},{"start":{"line":16,"column":17},"end":{"line":16,"column":19}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":21},"end":{"line":17,"column":34}},{"start":{"line":17,"column":38},"end":{"line":17,"column":57}}]},"3":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":30},"end":{"line":18,"column":52}},{"start":{"line":18,"column":56},"end":{"line":18,"column":61}}]},"4":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":8}},{"start":{"line":50,"column":8},"end":{"line":50,"column":8}}]},"5":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":83,"column":8}},{"start":{"line":83,"column":8},"end":{"line":83,"column":8}}]},"6":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":12},"end":{"line":89,"column":12}},{"start":{"line":89,"column":12},"end":{"line":89,"column":12}}]},"7":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":12},"end":{"line":97,"column":12}},{"start":{"line":97,"column":12},"end":{"line":97,"column":12}}]},"8":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":16},"end":{"line":97,"column":32}},{"start":{"line":97,"column":36},"end":{"line":97,"column":51}}]},"9":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":29},"end":{"line":99,"column":39}},{"start":{"line":99,"column":43},"end":{"line":99,"column":84}}]},"10":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":16},"end":{"line":103,"column":16}},{"start":{"line":103,"column":16},"end":{"line":103,"column":16}}]}},"code":["/**"," * @author imor / https://github.com/imor"," */","var Heap       = require('heap');","var Util       = require('../core/Util');","var Heuristic  = require('../core/Heuristic');","var DiagonalMovement = require('../core/DiagonalMovement');","","/**"," * Base class for the Jump Point Search algorithm"," * @param {object} opt"," * @param {function} opt.heuristic Heuristic function to estimate the distance"," *     (defaults to manhattan)."," */","function JumpPointFinderBase(opt) {","    opt = opt || {};","    this.heuristic = opt.heuristic || Heuristic.manhattan;","    this.trackJumpRecursion = opt.trackJumpRecursion || false;","}","","/**"," * Find and return the path."," * @return {Array<Array<number>>} The path, including both start and"," *     end positions."," */","JumpPointFinderBase.prototype.findPath = function(startX, startY, endX, endY, grid) {","    var openList = this.openList = new Heap(function(nodeA, nodeB) {","            return nodeA.f - nodeB.f;","        }),","        startNode = this.startNode = grid.getNodeAt(startX, startY),","        endNode = this.endNode = grid.getNodeAt(endX, endY), node;","","    this.grid = grid;","","","    // set the `g` and `f` value of the start node to be 0","    startNode.g = 0;","    startNode.f = 0;","","    // push the start node into the open list","    openList.push(startNode);","    startNode.opened = true;","","    // while the open list is not empty","    while (!openList.empty()) {","        // pop the position of node which has the minimum `f` value.","        node = openList.pop();","        node.closed = true;","","        if (node === endNode) {","            return Util.expandPath(Util.backtrace(endNode));","        }","","        this._identifySuccessors(node);","    }","","    // fail to find the path","    return [];","};","","/**"," * Identify successors for the given node. Runs a jump point search in the"," * direction of each available neighbor, adding any points found to the open"," * list."," * @protected"," */","JumpPointFinderBase.prototype._identifySuccessors = function(node) {","    var grid = this.grid,","        heuristic = this.heuristic,","        openList = this.openList,","        endX = this.endNode.x,","        endY = this.endNode.y,","        neighbors, neighbor,","        jumpPoint, i, l,","        x = node.x, y = node.y,","        jx, jy, dx, dy, d, ng, jumpNode,","        abs = Math.abs, max = Math.max;","","    neighbors = this._findNeighbors(node);","    for(i = 0, l = neighbors.length; i < l; ++i) {","        neighbor = neighbors[i];","        jumpPoint = this._jump(neighbor[0], neighbor[1], x, y);","        if (jumpPoint) {","","            jx = jumpPoint[0];","            jy = jumpPoint[1];","            jumpNode = grid.getNodeAt(jx, jy);","","            if (jumpNode.closed) {","                continue;","            }","","            // include distance, as parent may not be immediately adjacent:","            d = Heuristic.octile(abs(jx - x), abs(jy - y));","            ng = node.g + d; // next `g` value","","            if (!jumpNode.opened || ng < jumpNode.g) {","                jumpNode.g = ng;","                jumpNode.h = jumpNode.h || heuristic(abs(jx - endX), abs(jy - endY));","                jumpNode.f = jumpNode.g + jumpNode.h;","                jumpNode.parent = node;","","                if (!jumpNode.opened) {","                    openList.push(jumpNode);","                    jumpNode.opened = true;","                } else {","                    openList.updateItem(jumpNode);","                }","            }","        }","    }","};","","module.exports = JumpPointFinderBase;",""],"l":{"4":1,"5":1,"6":1,"7":1,"15":1,"16":4,"17":4,"18":4,"26":1,"27":0,"28":0,"33":0,"37":0,"38":0,"41":0,"42":0,"45":0,"47":0,"48":0,"50":0,"51":0,"54":0,"58":0,"67":1,"68":0,"79":0,"80":0,"81":0,"82":0,"83":0,"85":0,"86":0,"87":0,"89":0,"90":0,"94":0,"95":0,"97":0,"98":0,"99":0,"100":0,"101":0,"103":0,"104":0,"105":0,"107":0,"114":1}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/JPFAlwaysMoveDiagonally.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/JPFAlwaysMoveDiagonally.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0,0],"13":[0,0],"14":[0,0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"JPFAlwaysMoveDiagonally","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":38}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":42},"end":{"line":25,"column":65}}},"3":{"name":"(anonymous_3)","line":78,"loc":{"start":{"line":78,"column":51},"end":{"line":78,"column":66}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":59}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":59}},"3":{"start":{"line":11,"column":0},"end":{"line":13,"column":1}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":40}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":62}},"6":{"start":{"line":16,"column":0},"end":{"line":16,"column":72}},"7":{"start":{"line":25,"column":0},"end":{"line":70,"column":2}},"8":{"start":{"line":26,"column":4},"end":{"line":27,"column":33}},"9":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"10":{"start":{"line":30,"column":8},"end":{"line":30,"column":20}},"11":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"12":{"start":{"line":34,"column":8},"end":{"line":34,"column":43}},"13":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"14":{"start":{"line":38,"column":8},"end":{"line":38,"column":22}},"15":{"start":{"line":43,"column":4},"end":{"line":67,"column":5}},"16":{"start":{"line":44,"column":8},"end":{"line":47,"column":9}},"17":{"start":{"line":46,"column":12},"end":{"line":46,"column":26}},"18":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"19":{"start":{"line":50,"column":12},"end":{"line":50,"column":26}},"20":{"start":{"line":55,"column":8},"end":{"line":66,"column":9}},"21":{"start":{"line":56,"column":12},"end":{"line":59,"column":13}},"22":{"start":{"line":58,"column":16},"end":{"line":58,"column":30}},"23":{"start":{"line":62,"column":12},"end":{"line":65,"column":13}},"24":{"start":{"line":64,"column":16},"end":{"line":64,"column":30}},"25":{"start":{"line":69,"column":4},"end":{"line":69,"column":44}},"26":{"start":{"line":78,"column":0},"end":{"line":147,"column":2}},"27":{"start":{"line":79,"column":4},"end":{"line":83,"column":58}},"28":{"start":{"line":86,"column":4},"end":{"line":144,"column":5}},"29":{"start":{"line":87,"column":8},"end":{"line":87,"column":22}},"30":{"start":{"line":88,"column":8},"end":{"line":88,"column":22}},"31":{"start":{"line":90,"column":8},"end":{"line":90,"column":54}},"32":{"start":{"line":91,"column":8},"end":{"line":91,"column":54}},"33":{"start":{"line":94,"column":8},"end":{"line":135,"column":9}},"34":{"start":{"line":95,"column":12},"end":{"line":97,"column":13}},"35":{"start":{"line":96,"column":16},"end":{"line":96,"column":44}},"36":{"start":{"line":98,"column":12},"end":{"line":100,"column":13}},"37":{"start":{"line":99,"column":16},"end":{"line":99,"column":44}},"38":{"start":{"line":101,"column":12},"end":{"line":103,"column":13}},"39":{"start":{"line":102,"column":16},"end":{"line":102,"column":49}},"40":{"start":{"line":104,"column":12},"end":{"line":106,"column":13}},"41":{"start":{"line":105,"column":16},"end":{"line":105,"column":49}},"42":{"start":{"line":107,"column":12},"end":{"line":109,"column":13}},"43":{"start":{"line":108,"column":16},"end":{"line":108,"column":49}},"44":{"start":{"line":113,"column":12},"end":{"line":134,"column":13}},"45":{"start":{"line":114,"column":16},"end":{"line":116,"column":17}},"46":{"start":{"line":115,"column":20},"end":{"line":115,"column":48}},"47":{"start":{"line":117,"column":16},"end":{"line":119,"column":17}},"48":{"start":{"line":118,"column":20},"end":{"line":118,"column":52}},"49":{"start":{"line":120,"column":16},"end":{"line":122,"column":17}},"50":{"start":{"line":121,"column":20},"end":{"line":121,"column":52}},"51":{"start":{"line":125,"column":16},"end":{"line":127,"column":17}},"52":{"start":{"line":126,"column":20},"end":{"line":126,"column":48}},"53":{"start":{"line":128,"column":16},"end":{"line":130,"column":17}},"54":{"start":{"line":129,"column":20},"end":{"line":129,"column":52}},"55":{"start":{"line":131,"column":16},"end":{"line":133,"column":17}},"56":{"start":{"line":132,"column":20},"end":{"line":132,"column":52}},"57":{"start":{"line":139,"column":8},"end":{"line":139,"column":73}},"58":{"start":{"line":140,"column":8},"end":{"line":143,"column":9}},"59":{"start":{"line":141,"column":12},"end":{"line":141,"column":44}},"60":{"start":{"line":142,"column":12},"end":{"line":142,"column":61}},"61":{"start":{"line":146,"column":4},"end":{"line":146,"column":21}},"62":{"start":{"line":149,"column":0},"end":{"line":149,"column":41}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"4":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"5":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":8},"end":{"line":43,"column":16}},{"start":{"line":43,"column":20},"end":{"line":43,"column":28}}]},"6":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":44,"column":8}},{"start":{"line":44,"column":8},"end":{"line":44,"column":8}}]},"7":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":13},"end":{"line":44,"column":46}},{"start":{"line":44,"column":50},"end":{"line":44,"column":79}},{"start":{"line":45,"column":13},"end":{"line":45,"column":46}},{"start":{"line":45,"column":50},"end":{"line":45,"column":79}}]},"8":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":49,"column":8}},{"start":{"line":49,"column":8},"end":{"line":49,"column":8}}]},"9":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":12},"end":{"line":49,"column":39}},{"start":{"line":49,"column":43},"end":{"line":49,"column":70}}]},"10":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":8}},{"start":{"line":55,"column":8},"end":{"line":55,"column":8}}]},"11":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":12},"end":{"line":56,"column":12}},{"start":{"line":56,"column":12},"end":{"line":56,"column":12}}]},"12":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":16},"end":{"line":56,"column":48}},{"start":{"line":56,"column":52},"end":{"line":56,"column":80}},{"start":{"line":57,"column":16},"end":{"line":57,"column":48}},{"start":{"line":57,"column":52},"end":{"line":57,"column":80}}]},"13":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":12},"end":{"line":62,"column":12}},{"start":{"line":62,"column":12},"end":{"line":62,"column":12}}]},"14":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":16},"end":{"line":62,"column":48}},{"start":{"line":62,"column":52},"end":{"line":62,"column":80}},{"start":{"line":63,"column":16},"end":{"line":63,"column":48}},{"start":{"line":63,"column":52},"end":{"line":63,"column":80}}]},"15":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":4},"end":{"line":86,"column":4}},{"start":{"line":86,"column":4},"end":{"line":86,"column":4}}]},"16":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":8},"end":{"line":94,"column":8}},{"start":{"line":94,"column":8},"end":{"line":94,"column":8}}]},"17":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":12},"end":{"line":94,"column":20}},{"start":{"line":94,"column":24},"end":{"line":94,"column":32}}]},"18":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":12},"end":{"line":95,"column":12}},{"start":{"line":95,"column":12},"end":{"line":95,"column":12}}]},"19":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":12},"end":{"line":98,"column":12}},{"start":{"line":98,"column":12},"end":{"line":98,"column":12}}]},"20":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":12},"end":{"line":101,"column":12}},{"start":{"line":101,"column":12},"end":{"line":101,"column":12}}]},"21":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":12},"end":{"line":104,"column":12}},{"start":{"line":104,"column":12},"end":{"line":104,"column":12}}]},"22":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":12},"end":{"line":107,"column":12}},{"start":{"line":107,"column":12},"end":{"line":107,"column":12}}]},"23":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":12},"end":{"line":113,"column":12}},{"start":{"line":113,"column":12},"end":{"line":113,"column":12}}]},"24":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":16},"end":{"line":114,"column":16}},{"start":{"line":114,"column":16},"end":{"line":114,"column":16}}]},"25":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":16},"end":{"line":117,"column":16}},{"start":{"line":117,"column":16},"end":{"line":117,"column":16}}]},"26":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":16},"end":{"line":120,"column":16}},{"start":{"line":120,"column":16},"end":{"line":120,"column":16}}]},"27":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":16},"end":{"line":125,"column":16}},{"start":{"line":125,"column":16},"end":{"line":125,"column":16}}]},"28":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":16},"end":{"line":128,"column":16}},{"start":{"line":128,"column":16},"end":{"line":128,"column":16}}]},"29":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":16},"end":{"line":131,"column":16}},{"start":{"line":131,"column":16},"end":{"line":131,"column":16}}]}},"code":["/**"," * @author imor / https://github.com/imor"," */","var JumpPointFinderBase = require('./JumpPointFinderBase');","var DiagonalMovement = require('../core/DiagonalMovement');","","/**"," * Path finder using the Jump Point Search algorithm which always moves"," * diagonally irrespective of the number of obstacles."," */","function JPFAlwaysMoveDiagonally(opt) {","    JumpPointFinderBase.call(this, opt);","}","","JPFAlwaysMoveDiagonally.prototype = new JumpPointFinderBase();","JPFAlwaysMoveDiagonally.prototype.constructor = JPFAlwaysMoveDiagonally;","","/**"," * Search recursively in the direction (parent -> child), stopping only when a"," * jump point is found."," * @protected"," * @return {Array<Array<number>>} The x, y coordinate of the jump point"," *     found, or null if not found"," */","JPFAlwaysMoveDiagonally.prototype._jump = function(x, y, px, py) {","    var grid = this.grid,","        dx = x - px, dy = y - py;","","    if (!grid.isWalkableAt(x, y)) {","        return null;","    }","","    if(this.trackJumpRecursion === true) {","        grid.getNodeAt(x, y).tested = true;","    }","","    if (grid.getNodeAt(x, y) === this.endNode) {","        return [x, y];","    }","","    // check for forced neighbors","    // along the diagonal","    if (dx !== 0 && dy !== 0) {","        if ((grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y)) ||","            (grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy))) {","            return [x, y];","        }","        // when moving diagonally, must check for vertical/horizontal jump points","        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {","            return [x, y];","        }","    }","    // horizontally/vertically","    else {","        if( dx !== 0 ) { // moving along x","            if((grid.isWalkableAt(x + dx, y + 1) && !grid.isWalkableAt(x, y + 1)) ||","               (grid.isWalkableAt(x + dx, y - 1) && !grid.isWalkableAt(x, y - 1))) {","                return [x, y];","            }","        }","        else {","            if((grid.isWalkableAt(x + 1, y + dy) && !grid.isWalkableAt(x + 1, y)) ||","               (grid.isWalkableAt(x - 1, y + dy) && !grid.isWalkableAt(x - 1, y))) {","                return [x, y];","            }","        }","    }","","    return this._jump(x + dx, y + dy, x, y);","};","","/**"," * Find the neighbors for the given node. If the node has a parent,"," * prune the neighbors based on the jump point search algorithm, otherwise"," * return all available neighbors."," * @return {Array<Array<number>>} The neighbors found."," */","JPFAlwaysMoveDiagonally.prototype._findNeighbors = function(node) {","    var parent = node.parent,","        x = node.x, y = node.y,","        grid = this.grid,","        px, py, nx, ny, dx, dy,","        neighbors = [], neighborNodes, neighborNode, i, l;","","    // directed pruning: can ignore most neighbors, unless forced.","    if (parent) {","        px = parent.x;","        py = parent.y;","        // get the normalized direction of travel","        dx = (x - px) / Math.max(Math.abs(x - px), 1);","        dy = (y - py) / Math.max(Math.abs(y - py), 1);","","        // search diagonally","        if (dx !== 0 && dy !== 0) {","            if (grid.isWalkableAt(x, y + dy)) {","                neighbors.push([x, y + dy]);","            }","            if (grid.isWalkableAt(x + dx, y)) {","                neighbors.push([x + dx, y]);","            }","            if (grid.isWalkableAt(x + dx, y + dy)) {","                neighbors.push([x + dx, y + dy]);","            }","            if (!grid.isWalkableAt(x - dx, y)) {","                neighbors.push([x - dx, y + dy]);","            }","            if (!grid.isWalkableAt(x, y - dy)) {","                neighbors.push([x + dx, y - dy]);","            }","        }","        // search horizontally/vertically","        else {","            if(dx === 0) {","                if (grid.isWalkableAt(x, y + dy)) {","                    neighbors.push([x, y + dy]);","                }","                if (!grid.isWalkableAt(x + 1, y)) {","                    neighbors.push([x + 1, y + dy]);","                }","                if (!grid.isWalkableAt(x - 1, y)) {","                    neighbors.push([x - 1, y + dy]);","                }","            }","            else {","                if (grid.isWalkableAt(x + dx, y)) {","                    neighbors.push([x + dx, y]);","                }","                if (!grid.isWalkableAt(x, y + 1)) {","                    neighbors.push([x + dx, y + 1]);","                }","                if (!grid.isWalkableAt(x, y - 1)) {","                    neighbors.push([x + dx, y - 1]);","                }","            }","        }","    }","    // return all neighbors","    else {","        neighborNodes = grid.getNeighbors(node, DiagonalMovement.Always);","        for (i = 0, l = neighborNodes.length; i < l; ++i) {","            neighborNode = neighborNodes[i];","            neighbors.push([neighborNode.x, neighborNode.y]);","        }","    }","","    return neighbors;","};","","module.exports = JPFAlwaysMoveDiagonally;",""],"l":{"4":1,"5":1,"11":1,"12":0,"15":1,"16":1,"25":1,"26":0,"29":0,"30":0,"33":0,"34":0,"37":0,"38":0,"43":0,"44":0,"46":0,"49":0,"50":0,"55":0,"56":0,"58":0,"62":0,"64":0,"69":0,"78":1,"79":0,"86":0,"87":0,"88":0,"90":0,"91":0,"94":0,"95":0,"96":0,"98":0,"99":0,"101":0,"102":0,"104":0,"105":0,"107":0,"108":0,"113":0,"114":0,"115":0,"117":0,"118":0,"120":0,"121":0,"125":0,"126":0,"128":0,"129":0,"131":0,"132":0,"139":0,"140":0,"141":0,"142":0,"146":0,"149":1}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/JPFMoveDiagonallyIfNoObstacles.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/JPFMoveDiagonallyIfNoObstacles.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0,0],"11":[0,0],"12":[0,0],"13":[0,0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"JPFMoveDiagonallyIfNoObstacles","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":49},"end":{"line":25,"column":72}}},"3":{"name":"(anonymous_3)","line":88,"loc":{"start":{"line":88,"column":58},"end":{"line":88,"column":73}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":59}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":59}},"3":{"start":{"line":11,"column":0},"end":{"line":13,"column":1}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":40}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":69}},"6":{"start":{"line":16,"column":0},"end":{"line":16,"column":86}},"7":{"start":{"line":25,"column":0},"end":{"line":80,"column":2}},"8":{"start":{"line":26,"column":4},"end":{"line":27,"column":33}},"9":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"10":{"start":{"line":30,"column":8},"end":{"line":30,"column":20}},"11":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"12":{"start":{"line":34,"column":8},"end":{"line":34,"column":43}},"13":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"14":{"start":{"line":38,"column":8},"end":{"line":38,"column":22}},"15":{"start":{"line":43,"column":4},"end":{"line":71,"column":5}},"16":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"17":{"start":{"line":50,"column":12},"end":{"line":50,"column":26}},"18":{"start":{"line":55,"column":8},"end":{"line":70,"column":9}},"19":{"start":{"line":56,"column":12},"end":{"line":59,"column":13}},"20":{"start":{"line":58,"column":16},"end":{"line":58,"column":30}},"21":{"start":{"line":61,"column":13},"end":{"line":70,"column":9}},"22":{"start":{"line":62,"column":12},"end":{"line":65,"column":13}},"23":{"start":{"line":64,"column":16},"end":{"line":64,"column":30}},"24":{"start":{"line":75,"column":4},"end":{"line":79,"column":5}},"25":{"start":{"line":76,"column":8},"end":{"line":76,"column":48}},"26":{"start":{"line":78,"column":8},"end":{"line":78,"column":20}},"27":{"start":{"line":88,"column":0},"end":{"line":172,"column":2}},"28":{"start":{"line":89,"column":4},"end":{"line":93,"column":58}},"29":{"start":{"line":96,"column":4},"end":{"line":169,"column":5}},"30":{"start":{"line":97,"column":8},"end":{"line":97,"column":22}},"31":{"start":{"line":98,"column":8},"end":{"line":98,"column":22}},"32":{"start":{"line":100,"column":8},"end":{"line":100,"column":54}},"33":{"start":{"line":101,"column":8},"end":{"line":101,"column":54}},"34":{"start":{"line":104,"column":8},"end":{"line":160,"column":9}},"35":{"start":{"line":105,"column":12},"end":{"line":107,"column":13}},"36":{"start":{"line":106,"column":16},"end":{"line":106,"column":44}},"37":{"start":{"line":108,"column":12},"end":{"line":110,"column":13}},"38":{"start":{"line":109,"column":16},"end":{"line":109,"column":44}},"39":{"start":{"line":111,"column":12},"end":{"line":113,"column":13}},"40":{"start":{"line":112,"column":16},"end":{"line":112,"column":49}},"41":{"start":{"line":117,"column":12},"end":{"line":117,"column":31}},"42":{"start":{"line":118,"column":12},"end":{"line":159,"column":13}},"43":{"start":{"line":119,"column":16},"end":{"line":119,"column":62}},"44":{"start":{"line":120,"column":16},"end":{"line":120,"column":64}},"45":{"start":{"line":121,"column":16},"end":{"line":121,"column":67}},"46":{"start":{"line":123,"column":16},"end":{"line":131,"column":17}},"47":{"start":{"line":124,"column":20},"end":{"line":124,"column":48}},"48":{"start":{"line":125,"column":20},"end":{"line":127,"column":21}},"49":{"start":{"line":126,"column":24},"end":{"line":126,"column":56}},"50":{"start":{"line":128,"column":20},"end":{"line":130,"column":21}},"51":{"start":{"line":129,"column":24},"end":{"line":129,"column":56}},"52":{"start":{"line":132,"column":16},"end":{"line":134,"column":17}},"53":{"start":{"line":133,"column":20},"end":{"line":133,"column":47}},"54":{"start":{"line":135,"column":16},"end":{"line":137,"column":17}},"55":{"start":{"line":136,"column":20},"end":{"line":136,"column":47}},"56":{"start":{"line":139,"column":17},"end":{"line":159,"column":13}},"57":{"start":{"line":140,"column":16},"end":{"line":140,"column":62}},"58":{"start":{"line":141,"column":16},"end":{"line":141,"column":66}},"59":{"start":{"line":142,"column":16},"end":{"line":142,"column":65}},"60":{"start":{"line":144,"column":16},"end":{"line":152,"column":17}},"61":{"start":{"line":145,"column":20},"end":{"line":145,"column":48}},"62":{"start":{"line":146,"column":20},"end":{"line":148,"column":21}},"63":{"start":{"line":147,"column":24},"end":{"line":147,"column":56}},"64":{"start":{"line":149,"column":20},"end":{"line":151,"column":21}},"65":{"start":{"line":150,"column":24},"end":{"line":150,"column":56}},"66":{"start":{"line":153,"column":16},"end":{"line":155,"column":17}},"67":{"start":{"line":154,"column":20},"end":{"line":154,"column":47}},"68":{"start":{"line":156,"column":16},"end":{"line":158,"column":17}},"69":{"start":{"line":157,"column":20},"end":{"line":157,"column":47}},"70":{"start":{"line":164,"column":8},"end":{"line":164,"column":86}},"71":{"start":{"line":165,"column":8},"end":{"line":168,"column":9}},"72":{"start":{"line":166,"column":12},"end":{"line":166,"column":44}},"73":{"start":{"line":167,"column":12},"end":{"line":167,"column":61}},"74":{"start":{"line":171,"column":4},"end":{"line":171,"column":21}},"75":{"start":{"line":174,"column":0},"end":{"line":174,"column":48}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"4":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"5":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":8},"end":{"line":43,"column":16}},{"start":{"line":43,"column":20},"end":{"line":43,"column":28}}]},"6":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":49,"column":8}},{"start":{"line":49,"column":8},"end":{"line":49,"column":8}}]},"7":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":12},"end":{"line":49,"column":39}},{"start":{"line":49,"column":43},"end":{"line":49,"column":70}}]},"8":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":8}},{"start":{"line":55,"column":8},"end":{"line":55,"column":8}}]},"9":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":12},"end":{"line":56,"column":12}},{"start":{"line":56,"column":12},"end":{"line":56,"column":12}}]},"10":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":17},"end":{"line":56,"column":44}},{"start":{"line":56,"column":48},"end":{"line":56,"column":81}},{"start":{"line":57,"column":17},"end":{"line":57,"column":44}},{"start":{"line":57,"column":48},"end":{"line":57,"column":81}}]},"11":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":13},"end":{"line":61,"column":13}},{"start":{"line":61,"column":13},"end":{"line":61,"column":13}}]},"12":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":12},"end":{"line":62,"column":12}},{"start":{"line":62,"column":12},"end":{"line":62,"column":12}}]},"13":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":17},"end":{"line":62,"column":44}},{"start":{"line":62,"column":48},"end":{"line":62,"column":81}},{"start":{"line":63,"column":17},"end":{"line":63,"column":44}},{"start":{"line":63,"column":48},"end":{"line":63,"column":81}}]},"14":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":75,"column":4}},{"start":{"line":75,"column":4},"end":{"line":75,"column":4}}]},"15":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":8},"end":{"line":75,"column":36}},{"start":{"line":75,"column":40},"end":{"line":75,"column":68}}]},"16":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":96,"column":4}},{"start":{"line":96,"column":4},"end":{"line":96,"column":4}}]},"17":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":104,"column":8}},{"start":{"line":104,"column":8},"end":{"line":104,"column":8}}]},"18":{"line":104,"type":"binary-expr","locations":[{"start":{"line":104,"column":12},"end":{"line":104,"column":20}},{"start":{"line":104,"column":24},"end":{"line":104,"column":32}}]},"19":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":12},"end":{"line":105,"column":12}},{"start":{"line":105,"column":12},"end":{"line":105,"column":12}}]},"20":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12}},{"start":{"line":108,"column":12},"end":{"line":108,"column":12}}]},"21":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":12},"end":{"line":111,"column":12}},{"start":{"line":111,"column":12},"end":{"line":111,"column":12}}]},"22":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":16},"end":{"line":111,"column":44}},{"start":{"line":111,"column":48},"end":{"line":111,"column":76}}]},"23":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":12},"end":{"line":118,"column":12}},{"start":{"line":118,"column":12},"end":{"line":118,"column":12}}]},"24":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":16},"end":{"line":123,"column":16}},{"start":{"line":123,"column":16},"end":{"line":123,"column":16}}]},"25":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":20},"end":{"line":125,"column":20}},{"start":{"line":125,"column":20},"end":{"line":125,"column":20}}]},"26":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":20},"end":{"line":128,"column":20}},{"start":{"line":128,"column":20},"end":{"line":128,"column":20}}]},"27":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":16},"end":{"line":132,"column":16}},{"start":{"line":132,"column":16},"end":{"line":132,"column":16}}]},"28":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":16},"end":{"line":135,"column":16}},{"start":{"line":135,"column":16},"end":{"line":135,"column":16}}]},"29":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":17},"end":{"line":139,"column":17}},{"start":{"line":139,"column":17},"end":{"line":139,"column":17}}]},"30":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":16},"end":{"line":144,"column":16}},{"start":{"line":144,"column":16},"end":{"line":144,"column":16}}]},"31":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":20},"end":{"line":146,"column":20}},{"start":{"line":146,"column":20},"end":{"line":146,"column":20}}]},"32":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":20},"end":{"line":149,"column":20}},{"start":{"line":149,"column":20},"end":{"line":149,"column":20}}]},"33":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":16},"end":{"line":153,"column":16}},{"start":{"line":153,"column":16},"end":{"line":153,"column":16}}]},"34":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":16},"end":{"line":156,"column":16}},{"start":{"line":156,"column":16},"end":{"line":156,"column":16}}]}},"code":["/**"," * @author imor / https://github.com/imor"," */","var JumpPointFinderBase = require('./JumpPointFinderBase');","var DiagonalMovement = require('../core/DiagonalMovement');","","/**"," * Path finder using the Jump Point Search algorithm which moves"," * diagonally only when there are no obstacles."," */","function JPFMoveDiagonallyIfNoObstacles(opt) {","    JumpPointFinderBase.call(this, opt);","}","","JPFMoveDiagonallyIfNoObstacles.prototype = new JumpPointFinderBase();","JPFMoveDiagonallyIfNoObstacles.prototype.constructor = JPFMoveDiagonallyIfNoObstacles;","","/**"," * Search recursively in the direction (parent -> child), stopping only when a"," * jump point is found."," * @protected"," * @return {Array<Array<number>>} The x, y coordinate of the jump point"," *     found, or null if not found"," */","JPFMoveDiagonallyIfNoObstacles.prototype._jump = function(x, y, px, py) {","    var grid = this.grid,","        dx = x - px, dy = y - py;","","    if (!grid.isWalkableAt(x, y)) {","        return null;","    }","","    if(this.trackJumpRecursion === true) {","        grid.getNodeAt(x, y).tested = true;","    }","","    if (grid.getNodeAt(x, y) === this.endNode) {","        return [x, y];","    }","","    // check for forced neighbors","    // along the diagonal","    if (dx !== 0 && dy !== 0) {","        // if ((grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y)) ||","            // (grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy))) {","            // return [x, y];","        // }","        // when moving diagonally, must check for vertical/horizontal jump points","        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {","            return [x, y];","        }","    }","    // horizontally/vertically","    else {","        if (dx !== 0) {","            if ((grid.isWalkableAt(x, y - 1) && !grid.isWalkableAt(x - dx, y - 1)) ||","                (grid.isWalkableAt(x, y + 1) && !grid.isWalkableAt(x - dx, y + 1))) {","                return [x, y];","            }","        }","        else if (dy !== 0) {","            if ((grid.isWalkableAt(x - 1, y) && !grid.isWalkableAt(x - 1, y - dy)) ||","                (grid.isWalkableAt(x + 1, y) && !grid.isWalkableAt(x + 1, y - dy))) {","                return [x, y];","            }","            // When moving vertically, must check for horizontal jump points","            // if (this._jump(x + 1, y, x, y) || this._jump(x - 1, y, x, y)) {","                // return [x, y];","            // }","        }","    }","","    // moving diagonally, must make sure one of the vertical/horizontal","    // neighbors is open to allow the path","    if (grid.isWalkableAt(x + dx, y) && grid.isWalkableAt(x, y + dy)) {","        return this._jump(x + dx, y + dy, x, y);","    } else {","        return null;","    }","};","","/**"," * Find the neighbors for the given node. If the node has a parent,"," * prune the neighbors based on the jump point search algorithm, otherwise"," * return all available neighbors."," * @return {Array<Array<number>>} The neighbors found."," */","JPFMoveDiagonallyIfNoObstacles.prototype._findNeighbors = function(node) {","    var parent = node.parent,","        x = node.x, y = node.y,","        grid = this.grid,","        px, py, nx, ny, dx, dy,","        neighbors = [], neighborNodes, neighborNode, i, l;","","    // directed pruning: can ignore most neighbors, unless forced.","    if (parent) {","        px = parent.x;","        py = parent.y;","        // get the normalized direction of travel","        dx = (x - px) / Math.max(Math.abs(x - px), 1);","        dy = (y - py) / Math.max(Math.abs(y - py), 1);","","        // search diagonally","        if (dx !== 0 && dy !== 0) {","            if (grid.isWalkableAt(x, y + dy)) {","                neighbors.push([x, y + dy]);","            }","            if (grid.isWalkableAt(x + dx, y)) {","                neighbors.push([x + dx, y]);","            }","            if (grid.isWalkableAt(x, y + dy) && grid.isWalkableAt(x + dx, y)) {","                neighbors.push([x + dx, y + dy]);","            }","        }","        // search horizontally/vertically","        else {","            var isNextWalkable;","            if (dx !== 0) {","                isNextWalkable = grid.isWalkableAt(x + dx, y);","                var isTopWalkable = grid.isWalkableAt(x, y + 1);","                var isBottomWalkable = grid.isWalkableAt(x, y - 1);","","                if (isNextWalkable) {","                    neighbors.push([x + dx, y]);","                    if (isTopWalkable) {","                        neighbors.push([x + dx, y + 1]);","                    }","                    if (isBottomWalkable) {","                        neighbors.push([x + dx, y - 1]);","                    }","                }","                if (isTopWalkable) {","                    neighbors.push([x, y + 1]);","                }","                if (isBottomWalkable) {","                    neighbors.push([x, y - 1]);","                }","            }","            else if (dy !== 0) {","                isNextWalkable = grid.isWalkableAt(x, y + dy);","                var isRightWalkable = grid.isWalkableAt(x + 1, y);","                var isLeftWalkable = grid.isWalkableAt(x - 1, y);","","                if (isNextWalkable) {","                    neighbors.push([x, y + dy]);","                    if (isRightWalkable) {","                        neighbors.push([x + 1, y + dy]);","                    }","                    if (isLeftWalkable) {","                        neighbors.push([x - 1, y + dy]);","                    }","                }","                if (isRightWalkable) {","                    neighbors.push([x + 1, y]);","                }","                if (isLeftWalkable) {","                    neighbors.push([x - 1, y]);","                }","            }","        }","    }","    // return all neighbors","    else {","        neighborNodes = grid.getNeighbors(node, DiagonalMovement.OnlyWhenNoObstacles);","        for (i = 0, l = neighborNodes.length; i < l; ++i) {","            neighborNode = neighborNodes[i];","            neighbors.push([neighborNode.x, neighborNode.y]);","        }","    }","","    return neighbors;","};","","module.exports = JPFMoveDiagonallyIfNoObstacles;",""],"l":{"4":1,"5":1,"11":1,"12":0,"15":1,"16":1,"25":1,"26":0,"29":0,"30":0,"33":0,"34":0,"37":0,"38":0,"43":0,"49":0,"50":0,"55":0,"56":0,"58":0,"61":0,"62":0,"64":0,"75":0,"76":0,"78":0,"88":1,"89":0,"96":0,"97":0,"98":0,"100":0,"101":0,"104":0,"105":0,"106":0,"108":0,"109":0,"111":0,"112":0,"117":0,"118":0,"119":0,"120":0,"121":0,"123":0,"124":0,"125":0,"126":0,"128":0,"129":0,"132":0,"133":0,"135":0,"136":0,"139":0,"140":0,"141":0,"142":0,"144":0,"145":0,"146":0,"147":0,"149":0,"150":0,"153":0,"154":0,"156":0,"157":0,"164":0,"165":0,"166":0,"167":0,"171":0,"174":1}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/JPFMoveDiagonallyIfAtMostOneObstacle.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/src/finders/JPFMoveDiagonallyIfAtMostOneObstacle.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0,0],"13":[0,0],"14":[0,0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"JPFMoveDiagonallyIfAtMostOneObstacle","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":51}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":55},"end":{"line":25,"column":78}}},"3":{"name":"(anonymous_3)","line":84,"loc":{"start":{"line":84,"column":64},"end":{"line":84,"column":79}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":59}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":59}},"3":{"start":{"line":11,"column":0},"end":{"line":13,"column":1}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":40}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":75}},"6":{"start":{"line":16,"column":0},"end":{"line":16,"column":98}},"7":{"start":{"line":25,"column":0},"end":{"line":76,"column":2}},"8":{"start":{"line":26,"column":4},"end":{"line":27,"column":33}},"9":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"10":{"start":{"line":30,"column":8},"end":{"line":30,"column":20}},"11":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"12":{"start":{"line":34,"column":8},"end":{"line":34,"column":43}},"13":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"14":{"start":{"line":38,"column":8},"end":{"line":38,"column":22}},"15":{"start":{"line":43,"column":4},"end":{"line":67,"column":5}},"16":{"start":{"line":44,"column":8},"end":{"line":47,"column":9}},"17":{"start":{"line":46,"column":12},"end":{"line":46,"column":26}},"18":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"19":{"start":{"line":50,"column":12},"end":{"line":50,"column":26}},"20":{"start":{"line":55,"column":8},"end":{"line":66,"column":9}},"21":{"start":{"line":56,"column":12},"end":{"line":59,"column":13}},"22":{"start":{"line":58,"column":16},"end":{"line":58,"column":30}},"23":{"start":{"line":62,"column":12},"end":{"line":65,"column":13}},"24":{"start":{"line":64,"column":16},"end":{"line":64,"column":30}},"25":{"start":{"line":71,"column":4},"end":{"line":75,"column":5}},"26":{"start":{"line":72,"column":8},"end":{"line":72,"column":48}},"27":{"start":{"line":74,"column":8},"end":{"line":74,"column":20}},"28":{"start":{"line":84,"column":0},"end":{"line":153,"column":2}},"29":{"start":{"line":85,"column":4},"end":{"line":89,"column":58}},"30":{"start":{"line":92,"column":4},"end":{"line":150,"column":5}},"31":{"start":{"line":93,"column":8},"end":{"line":93,"column":22}},"32":{"start":{"line":94,"column":8},"end":{"line":94,"column":22}},"33":{"start":{"line":96,"column":8},"end":{"line":96,"column":54}},"34":{"start":{"line":97,"column":8},"end":{"line":97,"column":54}},"35":{"start":{"line":100,"column":8},"end":{"line":141,"column":9}},"36":{"start":{"line":101,"column":12},"end":{"line":103,"column":13}},"37":{"start":{"line":102,"column":16},"end":{"line":102,"column":44}},"38":{"start":{"line":104,"column":12},"end":{"line":106,"column":13}},"39":{"start":{"line":105,"column":16},"end":{"line":105,"column":44}},"40":{"start":{"line":107,"column":12},"end":{"line":109,"column":13}},"41":{"start":{"line":108,"column":16},"end":{"line":108,"column":49}},"42":{"start":{"line":110,"column":12},"end":{"line":112,"column":13}},"43":{"start":{"line":111,"column":16},"end":{"line":111,"column":49}},"44":{"start":{"line":113,"column":12},"end":{"line":115,"column":13}},"45":{"start":{"line":114,"column":16},"end":{"line":114,"column":49}},"46":{"start":{"line":119,"column":12},"end":{"line":140,"column":13}},"47":{"start":{"line":120,"column":16},"end":{"line":128,"column":17}},"48":{"start":{"line":121,"column":20},"end":{"line":121,"column":48}},"49":{"start":{"line":122,"column":20},"end":{"line":124,"column":21}},"50":{"start":{"line":123,"column":24},"end":{"line":123,"column":56}},"51":{"start":{"line":125,"column":20},"end":{"line":127,"column":21}},"52":{"start":{"line":126,"column":24},"end":{"line":126,"column":56}},"53":{"start":{"line":131,"column":16},"end":{"line":139,"column":17}},"54":{"start":{"line":132,"column":20},"end":{"line":132,"column":48}},"55":{"start":{"line":133,"column":20},"end":{"line":135,"column":21}},"56":{"start":{"line":134,"column":24},"end":{"line":134,"column":56}},"57":{"start":{"line":136,"column":20},"end":{"line":138,"column":21}},"58":{"start":{"line":137,"column":24},"end":{"line":137,"column":56}},"59":{"start":{"line":145,"column":8},"end":{"line":145,"column":86}},"60":{"start":{"line":146,"column":8},"end":{"line":149,"column":9}},"61":{"start":{"line":147,"column":12},"end":{"line":147,"column":44}},"62":{"start":{"line":148,"column":12},"end":{"line":148,"column":61}},"63":{"start":{"line":152,"column":4},"end":{"line":152,"column":21}},"64":{"start":{"line":155,"column":0},"end":{"line":155,"column":54}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"4":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"5":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":8},"end":{"line":43,"column":16}},{"start":{"line":43,"column":20},"end":{"line":43,"column":28}}]},"6":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":44,"column":8}},{"start":{"line":44,"column":8},"end":{"line":44,"column":8}}]},"7":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":13},"end":{"line":44,"column":46}},{"start":{"line":44,"column":50},"end":{"line":44,"column":79}},{"start":{"line":45,"column":13},"end":{"line":45,"column":46}},{"start":{"line":45,"column":50},"end":{"line":45,"column":79}}]},"8":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":49,"column":8}},{"start":{"line":49,"column":8},"end":{"line":49,"column":8}}]},"9":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":12},"end":{"line":49,"column":39}},{"start":{"line":49,"column":43},"end":{"line":49,"column":70}}]},"10":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":8}},{"start":{"line":55,"column":8},"end":{"line":55,"column":8}}]},"11":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":12},"end":{"line":56,"column":12}},{"start":{"line":56,"column":12},"end":{"line":56,"column":12}}]},"12":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":16},"end":{"line":56,"column":48}},{"start":{"line":56,"column":52},"end":{"line":56,"column":80}},{"start":{"line":57,"column":16},"end":{"line":57,"column":48}},{"start":{"line":57,"column":52},"end":{"line":57,"column":80}}]},"13":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":12},"end":{"line":62,"column":12}},{"start":{"line":62,"column":12},"end":{"line":62,"column":12}}]},"14":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":16},"end":{"line":62,"column":48}},{"start":{"line":62,"column":52},"end":{"line":62,"column":80}},{"start":{"line":63,"column":16},"end":{"line":63,"column":48}},{"start":{"line":63,"column":52},"end":{"line":63,"column":80}}]},"15":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":4},"end":{"line":71,"column":4}},{"start":{"line":71,"column":4},"end":{"line":71,"column":4}}]},"16":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":8},"end":{"line":71,"column":36}},{"start":{"line":71,"column":40},"end":{"line":71,"column":68}}]},"17":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":92,"column":4}},{"start":{"line":92,"column":4},"end":{"line":92,"column":4}}]},"18":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":8},"end":{"line":100,"column":8}},{"start":{"line":100,"column":8},"end":{"line":100,"column":8}}]},"19":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":12},"end":{"line":100,"column":20}},{"start":{"line":100,"column":24},"end":{"line":100,"column":32}}]},"20":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":12},"end":{"line":101,"column":12}},{"start":{"line":101,"column":12},"end":{"line":101,"column":12}}]},"21":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":12},"end":{"line":104,"column":12}},{"start":{"line":104,"column":12},"end":{"line":104,"column":12}}]},"22":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":12},"end":{"line":107,"column":12}},{"start":{"line":107,"column":12},"end":{"line":107,"column":12}}]},"23":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":16},"end":{"line":107,"column":44}},{"start":{"line":107,"column":48},"end":{"line":107,"column":76}}]},"24":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":12},"end":{"line":110,"column":12}},{"start":{"line":110,"column":12},"end":{"line":110,"column":12}}]},"25":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":16},"end":{"line":110,"column":45}},{"start":{"line":110,"column":49},"end":{"line":110,"column":77}}]},"26":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":12},"end":{"line":113,"column":12}},{"start":{"line":113,"column":12},"end":{"line":113,"column":12}}]},"27":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":16},"end":{"line":113,"column":45}},{"start":{"line":113,"column":49},"end":{"line":113,"column":77}}]},"28":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":12},"end":{"line":119,"column":12}},{"start":{"line":119,"column":12},"end":{"line":119,"column":12}}]},"29":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":16},"end":{"line":120,"column":16}},{"start":{"line":120,"column":16},"end":{"line":120,"column":16}}]},"30":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":20},"end":{"line":122,"column":20}},{"start":{"line":122,"column":20},"end":{"line":122,"column":20}}]},"31":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":20},"end":{"line":125,"column":20}},{"start":{"line":125,"column":20},"end":{"line":125,"column":20}}]},"32":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":16},"end":{"line":131,"column":16}},{"start":{"line":131,"column":16},"end":{"line":131,"column":16}}]},"33":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":20},"end":{"line":133,"column":20}},{"start":{"line":133,"column":20},"end":{"line":133,"column":20}}]},"34":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":20},"end":{"line":136,"column":20}},{"start":{"line":136,"column":20},"end":{"line":136,"column":20}}]}},"code":["/**"," * @author imor / https://github.com/imor"," */","var JumpPointFinderBase = require('./JumpPointFinderBase');","var DiagonalMovement = require('../core/DiagonalMovement');","","/**"," * Path finder using the Jump Point Search algorithm which moves"," * diagonally only when there is at most one obstacle."," */","function JPFMoveDiagonallyIfAtMostOneObstacle(opt) {","    JumpPointFinderBase.call(this, opt);","}","","JPFMoveDiagonallyIfAtMostOneObstacle.prototype = new JumpPointFinderBase();","JPFMoveDiagonallyIfAtMostOneObstacle.prototype.constructor = JPFMoveDiagonallyIfAtMostOneObstacle;","","/**"," * Search recursively in the direction (parent -> child), stopping only when a"," * jump point is found."," * @protected"," * @return {Array<Array<number>>} The x, y coordinate of the jump point"," *     found, or null if not found"," */","JPFMoveDiagonallyIfAtMostOneObstacle.prototype._jump = function(x, y, px, py) {","    var grid = this.grid,","        dx = x - px, dy = y - py;","","    if (!grid.isWalkableAt(x, y)) {","        return null;","    }","","    if(this.trackJumpRecursion === true) {","        grid.getNodeAt(x, y).tested = true;","    }","","    if (grid.getNodeAt(x, y) === this.endNode) {","        return [x, y];","    }","","    // check for forced neighbors","    // along the diagonal","    if (dx !== 0 && dy !== 0) {","        if ((grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y)) ||","            (grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy))) {","            return [x, y];","        }","        // when moving diagonally, must check for vertical/horizontal jump points","        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {","            return [x, y];","        }","    }","    // horizontally/vertically","    else {","        if( dx !== 0 ) { // moving along x","            if((grid.isWalkableAt(x + dx, y + 1) && !grid.isWalkableAt(x, y + 1)) ||","               (grid.isWalkableAt(x + dx, y - 1) && !grid.isWalkableAt(x, y - 1))) {","                return [x, y];","            }","        }","        else {","            if((grid.isWalkableAt(x + 1, y + dy) && !grid.isWalkableAt(x + 1, y)) ||","               (grid.isWalkableAt(x - 1, y + dy) && !grid.isWalkableAt(x - 1, y))) {","                return [x, y];","            }","        }","    }","","    // moving diagonally, must make sure one of the vertical/horizontal","    // neighbors is open to allow the path","    if (grid.isWalkableAt(x + dx, y) || grid.isWalkableAt(x, y + dy)) {","        return this._jump(x + dx, y + dy, x, y);","    } else {","        return null;","    }","};","","/**"," * Find the neighbors for the given node. If the node has a parent,"," * prune the neighbors based on the jump point search algorithm, otherwise"," * return all available neighbors."," * @return {Array<Array<number>>} The neighbors found."," */","JPFMoveDiagonallyIfAtMostOneObstacle.prototype._findNeighbors = function(node) {","    var parent = node.parent,","        x = node.x, y = node.y,","        grid = this.grid,","        px, py, nx, ny, dx, dy,","        neighbors = [], neighborNodes, neighborNode, i, l;","","    // directed pruning: can ignore most neighbors, unless forced.","    if (parent) {","        px = parent.x;","        py = parent.y;","        // get the normalized direction of travel","        dx = (x - px) / Math.max(Math.abs(x - px), 1);","        dy = (y - py) / Math.max(Math.abs(y - py), 1);","","        // search diagonally","        if (dx !== 0 && dy !== 0) {","            if (grid.isWalkableAt(x, y + dy)) {","                neighbors.push([x, y + dy]);","            }","            if (grid.isWalkableAt(x + dx, y)) {","                neighbors.push([x + dx, y]);","            }","            if (grid.isWalkableAt(x, y + dy) || grid.isWalkableAt(x + dx, y)) {","                neighbors.push([x + dx, y + dy]);","            }","            if (!grid.isWalkableAt(x - dx, y) && grid.isWalkableAt(x, y + dy)) {","                neighbors.push([x - dx, y + dy]);","            }","            if (!grid.isWalkableAt(x, y - dy) && grid.isWalkableAt(x + dx, y)) {","                neighbors.push([x + dx, y - dy]);","            }","        }","        // search horizontally/vertically","        else {","            if(dx === 0) {","                if (grid.isWalkableAt(x, y + dy)) {","                    neighbors.push([x, y + dy]);","                    if (!grid.isWalkableAt(x + 1, y)) {","                        neighbors.push([x + 1, y + dy]);","                    }","                    if (!grid.isWalkableAt(x - 1, y)) {","                        neighbors.push([x - 1, y + dy]);","                    }","                }","            }","            else {","                if (grid.isWalkableAt(x + dx, y)) {","                    neighbors.push([x + dx, y]);","                    if (!grid.isWalkableAt(x, y + 1)) {","                        neighbors.push([x + dx, y + 1]);","                    }","                    if (!grid.isWalkableAt(x, y - 1)) {","                        neighbors.push([x + dx, y - 1]);","                    }","                }","            }","        }","    }","    // return all neighbors","    else {","        neighborNodes = grid.getNeighbors(node, DiagonalMovement.IfAtMostOneObstacle);","        for (i = 0, l = neighborNodes.length; i < l; ++i) {","            neighborNode = neighborNodes[i];","            neighbors.push([neighborNode.x, neighborNode.y]);","        }","    }","","    return neighbors;","};","","module.exports = JPFMoveDiagonallyIfAtMostOneObstacle;",""],"l":{"4":1,"5":1,"11":1,"12":0,"15":1,"16":1,"25":1,"26":0,"29":0,"30":0,"33":0,"34":0,"37":0,"38":0,"43":0,"44":0,"46":0,"49":0,"50":0,"55":0,"56":0,"58":0,"62":0,"64":0,"71":0,"72":0,"74":0,"84":1,"85":0,"92":0,"93":0,"94":0,"96":0,"97":0,"100":0,"101":0,"102":0,"104":0,"105":0,"107":0,"108":0,"110":0,"111":0,"113":0,"114":0,"119":0,"120":0,"121":0,"122":0,"123":0,"125":0,"126":0,"131":0,"132":0,"133":0,"134":0,"136":0,"137":0,"145":0,"146":0,"147":0,"148":0,"152":0,"155":1}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/gulpfile.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/gulpfile.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":19},"end":{"line":16,"column":32}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":35},"end":{"line":20,"column":48}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":36},"end":{"line":27,"column":49}}},"4":{"name":"(anonymous_4)","line":34,"loc":{"start":{"line":34,"column":56},"end":{"line":34,"column":69}}},"5":{"name":"(anonymous_5)","line":40,"loc":{"start":{"line":40,"column":34},"end":{"line":40,"column":45}}},"6":{"name":"(anonymous_6)","line":44,"loc":{"start":{"line":44,"column":18},"end":{"line":44,"column":30}}},"7":{"name":"(anonymous_7)","line":49,"loc":{"start":{"line":49,"column":19},"end":{"line":49,"column":30}}},"8":{"name":"(anonymous_8)","line":53,"loc":{"start":{"line":53,"column":18},"end":{"line":53,"column":29}}},"9":{"name":"(anonymous_9)","line":60,"loc":{"start":{"line":60,"column":34},"end":{"line":60,"column":47}}},"10":{"name":"(anonymous_10)","line":68,"loc":{"start":{"line":68,"column":7},"end":{"line":68,"column":25}}},"11":{"name":"(anonymous_11)","line":101,"loc":{"start":{"line":101,"column":50},"end":{"line":101,"column":61}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":14,"column":23}},"2":{"start":{"line":16,"column":0},"end":{"line":18,"column":3}},"3":{"start":{"line":17,"column":4},"end":{"line":17,"column":26}},"4":{"start":{"line":20,"column":0},"end":{"line":25,"column":3}},"5":{"start":{"line":21,"column":4},"end":{"line":24,"column":35}},"6":{"start":{"line":27,"column":0},"end":{"line":32,"column":3}},"7":{"start":{"line":28,"column":4},"end":{"line":31,"column":35}},"8":{"start":{"line":34,"column":0},"end":{"line":38,"column":3}},"9":{"start":{"line":35,"column":4},"end":{"line":37,"column":35}},"10":{"start":{"line":40,"column":0},"end":{"line":42,"column":3}},"11":{"start":{"line":41,"column":4},"end":{"line":41,"column":45}},"12":{"start":{"line":44,"column":0},"end":{"line":47,"column":3}},"13":{"start":{"line":45,"column":4},"end":{"line":46,"column":93}},"14":{"start":{"line":49,"column":0},"end":{"line":51,"column":3}},"15":{"start":{"line":50,"column":4},"end":{"line":50,"column":46}},"16":{"start":{"line":53,"column":0},"end":{"line":58,"column":3}},"17":{"start":{"line":54,"column":2},"end":{"line":57,"column":35}},"18":{"start":{"line":60,"column":0},"end":{"line":99,"column":3}},"19":{"start":{"line":61,"column":2},"end":{"line":98,"column":7}},"20":{"start":{"line":69,"column":6},"end":{"line":69,"column":54}},"21":{"start":{"line":70,"column":6},"end":{"line":70,"column":57}},"22":{"start":{"line":71,"column":6},"end":{"line":71,"column":50}},"23":{"start":{"line":73,"column":6},"end":{"line":73,"column":30}},"24":{"start":{"line":74,"column":6},"end":{"line":74,"column":73}},"25":{"start":{"line":75,"column":6},"end":{"line":75,"column":43}},"26":{"start":{"line":76,"column":6},"end":{"line":76,"column":97}},"27":{"start":{"line":77,"column":6},"end":{"line":77,"column":49}},"28":{"start":{"line":78,"column":6},"end":{"line":78,"column":32}},"29":{"start":{"line":80,"column":6},"end":{"line":80,"column":84}},"30":{"start":{"line":81,"column":6},"end":{"line":81,"column":31}},"31":{"start":{"line":82,"column":6},"end":{"line":82,"column":99}},"32":{"start":{"line":83,"column":6},"end":{"line":83,"column":107}},"33":{"start":{"line":85,"column":6},"end":{"line":85,"column":46}},"34":{"start":{"line":86,"column":6},"end":{"line":86,"column":57}},"35":{"start":{"line":87,"column":6},"end":{"line":87,"column":46}},"36":{"start":{"line":89,"column":6},"end":{"line":89,"column":30}},"37":{"start":{"line":90,"column":6},"end":{"line":90,"column":73}},"38":{"start":{"line":91,"column":6},"end":{"line":91,"column":43}},"39":{"start":{"line":92,"column":6},"end":{"line":92,"column":97}},"40":{"start":{"line":93,"column":6},"end":{"line":93,"column":49}},"41":{"start":{"line":95,"column":6},"end":{"line":95,"column":27}},"42":{"start":{"line":96,"column":6},"end":{"line":96,"column":21}},"43":{"start":{"line":97,"column":6},"end":{"line":97,"column":28}},"44":{"start":{"line":101,"column":0},"end":{"line":102,"column":3}}},"branchMap":{},"code":["var gulp = require('gulp'),","    uglify = require('gulp-uglify'),","    rename = require('gulp-rename'),","    browserify = require('gulp-browserify'),","    concat = require('gulp-concat'),","    mocha = require('gulp-mocha'),","    shell = require('shelljs'),","    del = require('del'),","    jshint = require('gulp-jshint'),","    stylish = require('jshint-stylish'),","    semver = require('semver'),","    jsonfile = require('jsonfile'),","    inquirer = require(\"inquirer\"),","    fs = require('fs');","","gulp.task('clean', function(cb) {","    del('lib/**/*.*', cb);","});","","gulp.task('browserify', ['clean'], function(cb) {","    return gulp.src('./src/PathFinding.js')","    .pipe(browserify({ standalone: 'PF' }))","    .pipe(rename('pathfinding-browserified.js'))","    .pipe(gulp.dest('./lib/'), cb);","});","","gulp.task('uglify', ['browserify'], function(cb) {","    return gulp.src('./lib/pathfinding-browserified.js')","    .pipe(uglify())","    .pipe(rename('pathfinding-browser.min.js'))","    .pipe(gulp.dest('./lib/'), cb);","});","","gulp.task('scripts', ['clean', 'browserify', 'uglify'], function(cb) {","    return gulp.src(['./src/banner', './lib/pathfinding-browserified.js'])","    .pipe(concat('pathfinding-browser.js'))","    .pipe(gulp.dest('./lib/'), cb);","});","","gulp.task('compile', ['scripts'], function() {","    del('./lib/pathfinding-browserified.js');","});","","gulp.task('test', function () {","    return gulp.src('./test/**/*.js', {read: false})","        .pipe(mocha({reporter: 'spec', bail: true, globals: { should: require('should') }}));","});","","gulp.task('bench', function() {","    shell.exec('node benchmark/benchmark.js');","});","","gulp.task('lint', function() {","  return gulp.src('./src/**/*.js')","    .pipe(jshint())","    .pipe(jshint.reporter(stylish))","    .pipe(jshint.reporter('fail'));","});","","gulp.task('release', ['compile'], function(cb) {","  inquirer.prompt({","      type: 'list',","      name: 'bumpType',","      message: 'Which version do you want to bump?',","      choices: ['patch', 'minor', 'major'],","      //default is patch","      default: 0","    }, function (result) {","      var f = jsonfile.readFileSync('./package.json');","      f.version = semver.inc(f.version, result.bumpType);","      jsonfile.writeFileSync('./package.json', f);","","      shell.exec('git add .');","      shell.exec('git commit -m \"Bumping version to ' + f.version + '\"');","      shell.exec('git push origin master');","      shell.exec('git tag -a ' + f.version + ' -m \"Creating tag for version ' + f.version + '\"');","      shell.exec('git push origin ' + f.version);","      shell.exec('npm publish');","","      shell.exec('git clone https://github.com/imor/pathfinding-bower.git release');","      process.chdir('release');","      fs.writeFileSync('pathfinding-browser.js', fs.readFileSync('../lib/pathfinding-browser.js'));","      fs.writeFileSync('pathfinding-browser.min.js', fs.readFileSync('../lib/pathfinding-browser.min.js'));","","      f = jsonfile.readFileSync('bower.json');","      f.version = semver.inc(f.version, result.bumpType);","      jsonfile.writeFileSync('bower.json', f);","","      shell.exec('git add .');","      shell.exec('git commit -m \"Bumping version to ' + f.version + '\"');","      shell.exec('git push origin master');","      shell.exec('git tag -a ' + f.version + ' -m \"Creating tag for version ' + f.version + '\"');","      shell.exec('git push origin ' + f.version);","","      process.chdir('../');","      del('release');","      del('lib/**/*.*', cb);","    });","});","","gulp.task('default', ['lint', 'test', 'compile'], function() {","});",""],"l":{"1":2,"16":0,"17":0,"20":0,"21":0,"27":0,"28":0,"34":0,"35":0,"40":0,"41":0,"44":0,"45":0,"49":0,"50":0,"53":0,"54":0,"60":0,"61":0,"69":0,"70":0,"71":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"80":0,"81":0,"82":0,"83":0,"85":0,"86":0,"87":0,"89":0,"90":0,"91":0,"92":0,"93":0,"95":0,"96":0,"97":0,"101":0}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/benchmark/benchmark.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/benchmark/benchmark.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"profile","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":27}}},"2":{"name":"benchmark","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":24}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":23},"end":{"line":32,"column":34}}},"4":{"name":"formatFloat","line":50,"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":28}}},"5":{"name":"map2grid","line":54,"loc":{"start":{"line":54,"column":0},"end":{"line":54,"column":23}}},"6":{"name":"(anonymous_6)","line":58,"loc":{"start":{"line":58,"column":18},"end":{"line":58,"column":33}}},"7":{"name":"(anonymous_7)","line":63,"loc":{"start":{"line":63,"column":17},"end":{"line":63,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":30}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":45}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":46}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":40}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":32}},"7":{"start":{"line":10,"column":0},"end":{"line":18,"column":1}},"8":{"start":{"line":11,"column":2},"end":{"line":11,"column":29}},"9":{"start":{"line":12,"column":2},"end":{"line":12,"column":19}},"10":{"start":{"line":13,"column":2},"end":{"line":13,"column":27}},"11":{"start":{"line":14,"column":2},"end":{"line":17,"column":4}},"12":{"start":{"line":31,"column":0},"end":{"line":48,"column":1}},"13":{"start":{"line":32,"column":2},"end":{"line":40,"column":5}},"14":{"start":{"line":33,"column":4},"end":{"line":39,"column":6}},"15":{"start":{"line":41,"column":2},"end":{"line":46,"column":4}},"16":{"start":{"line":47,"column":2},"end":{"line":47,"column":32}},"17":{"start":{"line":50,"column":0},"end":{"line":52,"column":1}},"18":{"start":{"line":51,"column":2},"end":{"line":51,"column":41}},"19":{"start":{"line":54,"column":0},"end":{"line":56,"column":1}},"20":{"start":{"line":55,"column":2},"end":{"line":55,"column":54}},"21":{"start":{"line":58,"column":0},"end":{"line":76,"column":3}},"22":{"start":{"line":59,"column":2},"end":{"line":59,"column":64}},"23":{"start":{"line":60,"column":2},"end":{"line":60,"column":67}},"24":{"start":{"line":61,"column":2},"end":{"line":61,"column":27}},"25":{"start":{"line":63,"column":2},"end":{"line":75,"column":5}},"26":{"start":{"line":64,"column":4},"end":{"line":64,"column":25}},"27":{"start":{"line":65,"column":4},"end":{"line":74,"column":7}}},"branchMap":{},"code":["//#!/usr/bin/env node","","var colors    = require('colors');","var PF        = require('..');","var parseMap  = require('./parse_map').parse;","var parseScen = require('./parse_scen').parse;","var testCases = require('./test_cases');","var path      = require('path');","","function profile(callback) {","  var startTime = Date.now();","  ret = callback();","  var endTime = Date.now();","  return {","    returnValue: ret,","    time: endTime - startTime","  };","}","","/**"," * @param {object} opt"," * @param {string} opt.header"," * @param {string} opt.footer"," * @param {PF.*Finder} opt.finder"," * @param {PF.Grid} opt.grid"," * @param {number} opt.startX"," * @param {number} opt.startY"," * @param {number} opt.endX"," * @param {number} opt.endY"," */","function benchmark(opt) {","  var result = profile(function() {","    return opt.finder.findPath(","      opt.startX,","      opt.startY,","      opt.endX,","      opt.endY,","      opt.grid","    );","  });","  var fields = [","    opt.header,","    (''+result.time + 'ms').yellow,","    'length' , formatFloat(PF.Util.pathLength(result.returnValue)),","    opt.footer,","  ];","  console.log(fields.join(' '));","}","","function formatFloat(float) {","  return Math.round(float * 1000) / 1000;","}","","function map2grid(map) {","  return new PF.Grid(map.width, map.height, map.grid);","}","","testCases.forEach(function(test) {","  var grid = map2grid(parseMap(path.join(__dirname, test.map)));","  var scens = parseScen(path.join(__dirname, test.scen)).scenarios;","  var select = test.select;","","  select.forEach(function(id) {","    var scen = scens[id];","    var result = benchmark({","      header: 'AStarFinder',","      finder: new PF.AStarFinder({allowDiagonal: true}),","      grid: grid,","      startX: scen.startX,","      startY: scen.startY,","      endX: scen.endX,","      endY: scen.endY,","      footer: '(optimal: '.grey + (''+scen.length).green + ')'.grey","    });","  });","});",""],"l":{"3":2,"4":0,"5":0,"6":0,"7":0,"8":0,"10":1,"11":0,"12":0,"13":0,"14":0,"31":1,"32":0,"33":0,"41":0,"47":0,"50":1,"51":0,"54":1,"55":0,"58":0,"59":0,"60":0,"61":0,"63":0,"64":0,"65":0}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/benchmark/parse_map.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/benchmark/parse_map.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,1]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"parse","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":25}}},"2":{"name":"parseGrid","line":46,"loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":26}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":16},"end":{"line":48,"column":31}}},"4":{"name":"(anonymous_4)","line":53,"loc":{"start":{"line":53,"column":27},"end":{"line":53,"column":42}}},"5":{"name":"splitext","line":61,"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":28}}},"6":{"name":"main","line":70,"loc":{"start":{"line":70,"column":0},"end":{"line":70,"column":20}}}},"statementMap":{"1":{"start":{"line":32,"column":0},"end":{"line":32,"column":23}},"2":{"start":{"line":33,"column":0},"end":{"line":33,"column":34}},"3":{"start":{"line":35,"column":0},"end":{"line":43,"column":1}},"4":{"start":{"line":36,"column":2},"end":{"line":36,"column":53}},"5":{"start":{"line":37,"column":2},"end":{"line":37,"column":39}},"6":{"start":{"line":38,"column":2},"end":{"line":42,"column":4}},"7":{"start":{"line":44,"column":0},"end":{"line":44,"column":22}},"8":{"start":{"line":46,"column":0},"end":{"line":59,"column":1}},"9":{"start":{"line":47,"column":2},"end":{"line":47,"column":16}},"10":{"start":{"line":48,"column":2},"end":{"line":57,"column":5}},"11":{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},"12":{"start":{"line":50,"column":6},"end":{"line":50,"column":13}},"13":{"start":{"line":52,"column":4},"end":{"line":52,"column":17}},"14":{"start":{"line":53,"column":4},"end":{"line":55,"column":7}},"15":{"start":{"line":54,"column":6},"end":{"line":54,"column":51}},"16":{"start":{"line":56,"column":4},"end":{"line":56,"column":19}},"17":{"start":{"line":58,"column":2},"end":{"line":58,"column":14}},"18":{"start":{"line":61,"column":0},"end":{"line":68,"column":1}},"19":{"start":{"line":62,"column":2},"end":{"line":62,"column":40}},"20":{"start":{"line":63,"column":2},"end":{"line":67,"column":3}},"21":{"start":{"line":64,"column":4},"end":{"line":64,"column":26}},"22":{"start":{"line":66,"column":4},"end":{"line":66,"column":63}},"23":{"start":{"line":70,"column":0},"end":{"line":75,"column":1}},"24":{"start":{"line":71,"column":2},"end":{"line":71,"column":25}},"25":{"start":{"line":72,"column":2},"end":{"line":72,"column":28}},"26":{"start":{"line":73,"column":2},"end":{"line":73,"column":35}},"27":{"start":{"line":74,"column":2},"end":{"line":74,"column":56}},"28":{"start":{"line":77,"column":0},"end":{"line":79,"column":1}},"29":{"start":{"line":78,"column":2},"end":{"line":78,"column":21}}},"branchMap":{"1":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"2":{"line":54,"type":"cond-expr","locations":[{"start":{"line":54,"column":44},"end":{"line":54,"column":45}},{"start":{"line":54,"column":48},"end":{"line":54,"column":49}}]},"3":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]},"4":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":0},"end":{"line":77,"column":0}},{"start":{"line":77,"column":0},"end":{"line":77,"column":0}}]}},"code":["//#!/usr/bin/env node","","/**"," * Convert the `map` files into json"," * "," * All maps begin with the lines:"," * "," *     type octile"," *     height x"," *     width y"," *     map"," * "," * where x and y are the repsective height and width of the map."," * "," * The map data is store as an ASCII grid. The following characters are possible:"," * "," *     . - passable terrain"," *     G - passable terrain"," *     @ - out of bounds"," *     O - out of bounds"," *     T - trees (unpassable)"," *     S - swamp (passable from regular terrain)"," *     W - water (traversable, but not passable from terrain)"," * "," */","","/**"," * Implementation note:"," * For convenience, only '.' and 'G' are interpreted as walkable."," */","","var fs = require('fs');","var endOfLine = require('os').EOL;","","function parse(filename) {","  var content = fs.readFileSync(filename).toString();","  var lines = content.split(endOfLine);","  return {","    height : parseInt(lines[1].split(' ')[1]),","    width  : parseInt(lines[2].split(' ')[1]),","    grid   : parseGrid(lines.slice(4)),","  };","}","exports.parse = parse;","","function parseGrid(lines) {","  var grid = [];","  lines.forEach(function(line) {","    if (!line.length) {","      return;","    }","    var row = [];","    line.split('').forEach(function(char) {","      row.push(char in { '.': 1, 'G': 1 } ? 0 : 1);","    });","    grid.push(row);","  });","  return grid;","}","","function splitext(filename) {","  var index = filename.lastIndexOf('.');","  if (index < 0) {","    return [filename, ''];","  } else {","    return [filename.substr(0, index), filename.substr(index)];","  }","}","","function main(argv) {","  var filename = argv[2];","  var obj = parse(filename);","  var root = splitext(filename)[0];","  fs.writeFileSync(root + '.json', JSON.stringify(obj));","}","","if (!module.parent) {","  main(process.argv);","}",""],"l":{"32":1,"33":1,"35":1,"36":0,"37":0,"38":0,"44":1,"46":1,"47":0,"48":0,"49":0,"50":0,"52":0,"53":0,"54":0,"56":0,"58":0,"61":1,"62":0,"63":0,"64":0,"66":0,"70":1,"71":0,"72":0,"73":0,"74":0,"77":1,"78":0}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/benchmark/parse_scen.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/benchmark/parse_scen.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"parse","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":25}}},"2":{"name":"parseLine","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":25}}}},"statementMap":{"1":{"start":{"line":21,"column":0},"end":{"line":21,"column":23}},"2":{"start":{"line":23,"column":0},"end":{"line":31,"column":1}},"3":{"start":{"line":24,"column":2},"end":{"line":24,"column":53}},"4":{"start":{"line":25,"column":2},"end":{"line":25,"column":34}},"5":{"start":{"line":26,"column":2},"end":{"line":26,"column":38}},"6":{"start":{"line":27,"column":2},"end":{"line":30,"column":4}},"7":{"start":{"line":33,"column":0},"end":{"line":46,"column":1}},"8":{"start":{"line":34,"column":2},"end":{"line":34,"column":33}},"9":{"start":{"line":35,"column":2},"end":{"line":45,"column":4}},"10":{"start":{"line":48,"column":0},"end":{"line":48,"column":22}}},"branchMap":{},"code":["//#!/usr/bin/env node","","/**"," * The scenario files have the following format."," * The begin with the text \"version x.x\". This document describes version 1.0. "," * The trailing 0 is optional."," *"," * Each line of a scenario has 9 fields:"," *"," * Bucket"," * map "," * map width"," * map height "," * start x-coordinate"," * start y-coordinate"," * goal x-coordinate"," * goal y-coordinate"," * optimal length"," */","","var fs = require('fs');","","function parse(filename) {","  var content = fs.readFileSync(filename).toString();","  var lines = content.split('\\n');","  var version = lines[1].split(/\\s+/);","  return {","    version: version,","    scenarios: lines.slice(1, lines.length - 1).map(parseLine)","  };","}","","function parseLine(line) {","  var fields = line.split(/\\s+/);","  return {","    bucket: parseInt(fields[0]),","    map: fields[1],","    width: parseInt(fields[2]),","    height: parseInt(fields[3]),","    startX: parseInt(fields[4]),","    startY: parseInt(fields[5]),","    endX: parseInt(fields[6]),","    endY: parseInt(fields[7]),","    length: parseFloat(fields[8])","  };","}","","exports.parse = parse;",""],"l":{"21":1,"23":1,"24":0,"25":0,"26":0,"27":0,"33":1,"34":0,"35":0,"48":1}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/visual/js/controller.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/visual/js/controller.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0},"fnMap":{"1":{"name":"(anonymous_1)","line":100,"loc":{"start":{"line":100,"column":17},"end":{"line":100,"column":28}}},"2":{"name":"(anonymous_2)","line":110,"loc":{"start":{"line":110,"column":26},"end":{"line":110,"column":37}}},"3":{"name":"(anonymous_3)","line":123,"loc":{"start":{"line":123,"column":16},"end":{"line":123,"column":56}}},"4":{"name":"(anonymous_4)","line":127,"loc":{"start":{"line":127,"column":17},"end":{"line":127,"column":57}}},"5":{"name":"(anonymous_5)","line":131,"loc":{"start":{"line":131,"column":14},"end":{"line":131,"column":40}}},"6":{"name":"(anonymous_6)","line":148,"loc":{"start":{"line":148,"column":15},"end":{"line":148,"column":26}}},"7":{"name":"(anonymous_7)","line":154,"loc":{"start":{"line":154,"column":19},"end":{"line":154,"column":30}}},"8":{"name":"(anonymous_8)","line":161,"loc":{"start":{"line":161,"column":13},"end":{"line":161,"column":39}}},"9":{"name":"(anonymous_9)","line":164,"loc":{"start":{"line":164,"column":14},"end":{"line":164,"column":40}}},"10":{"name":"(anonymous_10)","line":168,"loc":{"start":{"line":168,"column":14},"end":{"line":168,"column":40}}},"11":{"name":"(anonymous_11)","line":173,"loc":{"start":{"line":173,"column":14},"end":{"line":173,"column":40}}},"12":{"name":"(anonymous_12)","line":182,"loc":{"start":{"line":182,"column":13},"end":{"line":182,"column":39}}},"13":{"name":"(anonymous_13)","line":187,"loc":{"start":{"line":187,"column":14},"end":{"line":187,"column":40}}},"14":{"name":"(anonymous_14)","line":190,"loc":{"start":{"line":190,"column":13},"end":{"line":190,"column":39}}},"15":{"name":"(anonymous_15)","line":191,"loc":{"start":{"line":191,"column":19},"end":{"line":191,"column":30}}},"16":{"name":"(anonymous_16)","line":203,"loc":{"start":{"line":203,"column":13},"end":{"line":203,"column":24}}},"17":{"name":"(anonymous_17)","line":222,"loc":{"start":{"line":222,"column":16},"end":{"line":222,"column":42}}},"18":{"name":"(anonymous_18)","line":233,"loc":{"start":{"line":233,"column":17},"end":{"line":233,"column":28}}},"19":{"name":"(anonymous_19)","line":248,"loc":{"start":{"line":248,"column":14},"end":{"line":248,"column":25}}},"20":{"name":"(anonymous_20)","line":263,"loc":{"start":{"line":263,"column":16},"end":{"line":263,"column":27}}},"21":{"name":"(anonymous_21)","line":277,"loc":{"start":{"line":277,"column":16},"end":{"line":277,"column":27}}},"22":{"name":"(anonymous_22)","line":296,"loc":{"start":{"line":296,"column":21},"end":{"line":296,"column":32}}},"23":{"name":"(anonymous_23)","line":299,"loc":{"start":{"line":299,"column":22},"end":{"line":299,"column":25}}},"24":{"name":"(anonymous_24)","line":302,"loc":{"start":{"line":302,"column":22},"end":{"line":302,"column":26}}},"25":{"name":"(anonymous_25)","line":311,"loc":{"start":{"line":311,"column":22},"end":{"line":311,"column":25}}},"26":{"name":"(anonymous_26)","line":314,"loc":{"start":{"line":314,"column":22},"end":{"line":314,"column":26}}},"27":{"name":"(anonymous_27)","line":323,"loc":{"start":{"line":323,"column":22},"end":{"line":323,"column":25}}},"28":{"name":"(anonymous_28)","line":326,"loc":{"start":{"line":326,"column":22},"end":{"line":326,"column":26}}},"29":{"name":"(anonymous_29)","line":339,"loc":{"start":{"line":339,"column":16},"end":{"line":339,"column":27}}},"30":{"name":"(anonymous_30)","line":345,"loc":{"start":{"line":345,"column":10},"end":{"line":345,"column":21}}},"31":{"name":"loop","line":347,"loc":{"start":{"line":347,"column":9},"end":{"line":347,"column":25}}},"32":{"name":"(anonymous_32)","line":355,"loc":{"start":{"line":355,"column":10},"end":{"line":355,"column":21}}},"33":{"name":"(anonymous_33)","line":370,"loc":{"start":{"line":370,"column":21},"end":{"line":370,"column":32}}},"34":{"name":"(anonymous_34)","line":373,"loc":{"start":{"line":373,"column":21},"end":{"line":373,"column":32}}},"35":{"name":"(anonymous_35)","line":377,"loc":{"start":{"line":377,"column":14},"end":{"line":377,"column":25}}},"36":{"name":"(anonymous_36)","line":381,"loc":{"start":{"line":381,"column":18},"end":{"line":381,"column":29}}},"37":{"name":"(anonymous_37)","line":384,"loc":{"start":{"line":384,"column":15},"end":{"line":384,"column":32}}},"38":{"name":"(anonymous_38)","line":406,"loc":{"start":{"line":406,"column":15},"end":{"line":406,"column":31}}},"39":{"name":"(anonymous_39)","line":435,"loc":{"start":{"line":435,"column":13},"end":{"line":435,"column":29}}},"40":{"name":"(anonymous_40)","line":440,"loc":{"start":{"line":440,"column":21},"end":{"line":440,"column":32}}},"41":{"name":"(anonymous_41)","line":441,"loc":{"start":{"line":441,"column":26},"end":{"line":441,"column":43}}},"42":{"name":"(anonymous_42)","line":465,"loc":{"start":{"line":465,"column":27},"end":{"line":465,"column":38}}},"43":{"name":"(anonymous_43)","line":484,"loc":{"start":{"line":484,"column":17},"end":{"line":484,"column":40}}},"44":{"name":"(anonymous_44)","line":489,"loc":{"start":{"line":489,"column":15},"end":{"line":489,"column":38}}},"45":{"name":"(anonymous_45)","line":494,"loc":{"start":{"line":494,"column":19},"end":{"line":494,"column":52}}},"46":{"name":"(anonymous_46)","line":498,"loc":{"start":{"line":498,"column":16},"end":{"line":498,"column":39}}},"47":{"name":"(anonymous_47)","line":501,"loc":{"start":{"line":501,"column":14},"end":{"line":501,"column":37}}},"48":{"name":"(anonymous_48)","line":504,"loc":{"start":{"line":504,"column":21},"end":{"line":504,"column":44}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":91,"column":3}},"2":{"start":{"line":93,"column":0},"end":{"line":507,"column":3}},"3":{"start":{"line":101,"column":8},"end":{"line":102,"column":39}},"4":{"start":{"line":104,"column":8},"end":{"line":104,"column":50}},"5":{"start":{"line":106,"column":8},"end":{"line":109,"column":11}},"6":{"start":{"line":110,"column":8},"end":{"line":114,"column":11}},"7":{"start":{"line":111,"column":12},"end":{"line":111,"column":47}},"8":{"start":{"line":112,"column":12},"end":{"line":112,"column":36}},"9":{"start":{"line":113,"column":12},"end":{"line":113,"column":36}},"10":{"start":{"line":116,"column":8},"end":{"line":116,"column":45}},"11":{"start":{"line":118,"column":8},"end":{"line":118,"column":31}},"12":{"start":{"line":120,"column":8},"end":{"line":120,"column":34}},"13":{"start":{"line":124,"column":8},"end":{"line":124,"column":48}},"14":{"start":{"line":128,"column":8},"end":{"line":128,"column":47}},"15":{"start":{"line":132,"column":8},"end":{"line":134,"column":39}},"16":{"start":{"line":136,"column":8},"end":{"line":136,"column":72}},"17":{"start":{"line":137,"column":8},"end":{"line":137,"column":33}},"18":{"start":{"line":138,"column":8},"end":{"line":140,"column":10}},"19":{"start":{"line":141,"column":8},"end":{"line":141,"column":53}},"20":{"start":{"line":142,"column":8},"end":{"line":142,"column":70}},"21":{"start":{"line":143,"column":8},"end":{"line":143,"column":58}},"22":{"start":{"line":145,"column":8},"end":{"line":145,"column":20}},"23":{"start":{"line":154,"column":8},"end":{"line":158,"column":51}},"24":{"start":{"line":155,"column":12},"end":{"line":155,"column":41}},"25":{"start":{"line":156,"column":12},"end":{"line":156,"column":41}},"26":{"start":{"line":157,"column":12},"end":{"line":157,"column":31}},"27":{"start":{"line":165,"column":8},"end":{"line":165,"column":20}},"28":{"start":{"line":169,"column":8},"end":{"line":169,"column":31}},"29":{"start":{"line":170,"column":8},"end":{"line":170,"column":31}},"30":{"start":{"line":174,"column":8},"end":{"line":178,"column":11}},"31":{"start":{"line":179,"column":8},"end":{"line":179,"column":33}},"32":{"start":{"line":183,"column":8},"end":{"line":183,"column":31}},"33":{"start":{"line":184,"column":8},"end":{"line":184,"column":31}},"34":{"start":{"line":191,"column":8},"end":{"line":195,"column":51}},"35":{"start":{"line":192,"column":12},"end":{"line":192,"column":41}},"36":{"start":{"line":193,"column":12},"end":{"line":193,"column":34}},"37":{"start":{"line":194,"column":12},"end":{"line":194,"column":38}},"38":{"start":{"line":204,"column":8},"end":{"line":204,"column":32}},"39":{"start":{"line":205,"column":8},"end":{"line":219,"column":11}},"40":{"start":{"line":223,"column":8},"end":{"line":223,"column":35}},"41":{"start":{"line":225,"column":8},"end":{"line":225,"column":31}},"42":{"start":{"line":226,"column":8},"end":{"line":229,"column":11}},"43":{"start":{"line":230,"column":8},"end":{"line":230,"column":22}},"44":{"start":{"line":234,"column":8},"end":{"line":234,"column":36}},"45":{"start":{"line":235,"column":8},"end":{"line":245,"column":11}},"46":{"start":{"line":249,"column":8},"end":{"line":249,"column":33}},"47":{"start":{"line":250,"column":8},"end":{"line":260,"column":11}},"48":{"start":{"line":264,"column":8},"end":{"line":264,"column":35}},"49":{"start":{"line":265,"column":8},"end":{"line":275,"column":11}},"50":{"start":{"line":278,"column":8},"end":{"line":278,"column":35}},"51":{"start":{"line":279,"column":8},"end":{"line":289,"column":11}},"52":{"start":{"line":298,"column":8},"end":{"line":335,"column":10}},"53":{"start":{"line":300,"column":16},"end":{"line":300,"column":36}},"54":{"start":{"line":303,"column":16},"end":{"line":303,"column":33}},"55":{"start":{"line":304,"column":16},"end":{"line":309,"column":19}},"56":{"start":{"line":312,"column":16},"end":{"line":312,"column":36}},"57":{"start":{"line":315,"column":16},"end":{"line":315,"column":33}},"58":{"start":{"line":316,"column":16},"end":{"line":321,"column":19}},"59":{"start":{"line":324,"column":16},"end":{"line":324,"column":36}},"60":{"start":{"line":327,"column":16},"end":{"line":327,"column":33}},"61":{"start":{"line":328,"column":16},"end":{"line":333,"column":19}},"62":{"start":{"line":337,"column":8},"end":{"line":337,"column":29}},"63":{"start":{"line":340,"column":8},"end":{"line":340,"column":65}},"64":{"start":{"line":341,"column":8},"end":{"line":343,"column":50}},"65":{"start":{"line":346,"column":8},"end":{"line":346,"column":55}},"66":{"start":{"line":347,"column":8},"end":{"line":353,"column":13}},"67":{"start":{"line":348,"column":12},"end":{"line":350,"column":13}},"68":{"start":{"line":349,"column":16},"end":{"line":349,"column":23}},"69":{"start":{"line":351,"column":12},"end":{"line":351,"column":30}},"70":{"start":{"line":352,"column":12},"end":{"line":352,"column":39}},"71":{"start":{"line":356,"column":8},"end":{"line":357,"column":28}},"72":{"start":{"line":359,"column":8},"end":{"line":366,"column":31}},"73":{"start":{"line":360,"column":12},"end":{"line":363,"column":13}},"74":{"start":{"line":361,"column":16},"end":{"line":361,"column":30}},"75":{"start":{"line":362,"column":16},"end":{"line":362,"column":23}},"76":{"start":{"line":364,"column":12},"end":{"line":364,"column":36}},"77":{"start":{"line":365,"column":12},"end":{"line":365,"column":75}},"78":{"start":{"line":368,"column":8},"end":{"line":368,"column":59}},"79":{"start":{"line":371,"column":8},"end":{"line":371,"column":29}},"80":{"start":{"line":374,"column":8},"end":{"line":374,"column":31}},"81":{"start":{"line":375,"column":8},"end":{"line":375,"column":25}},"82":{"start":{"line":378,"column":8},"end":{"line":378,"column":31}},"83":{"start":{"line":379,"column":8},"end":{"line":379,"column":33}},"84":{"start":{"line":382,"column":8},"end":{"line":382,"column":68}},"85":{"start":{"line":385,"column":8},"end":{"line":388,"column":30}},"86":{"start":{"line":390,"column":8},"end":{"line":393,"column":9}},"87":{"start":{"line":391,"column":12},"end":{"line":391,"column":29}},"88":{"start":{"line":392,"column":12},"end":{"line":392,"column":19}},"89":{"start":{"line":394,"column":8},"end":{"line":397,"column":9}},"90":{"start":{"line":395,"column":12},"end":{"line":395,"column":27}},"91":{"start":{"line":396,"column":12},"end":{"line":396,"column":19}},"92":{"start":{"line":398,"column":8},"end":{"line":401,"column":9}},"93":{"start":{"line":399,"column":12},"end":{"line":399,"column":40}},"94":{"start":{"line":400,"column":12},"end":{"line":400,"column":19}},"95":{"start":{"line":402,"column":8},"end":{"line":404,"column":9}},"96":{"start":{"line":403,"column":12},"end":{"line":403,"column":41}},"97":{"start":{"line":407,"column":8},"end":{"line":410,"column":29}},"98":{"start":{"line":412,"column":8},"end":{"line":414,"column":9}},"99":{"start":{"line":413,"column":12},"end":{"line":413,"column":19}},"100":{"start":{"line":416,"column":8},"end":{"line":433,"column":9}},"101":{"start":{"line":418,"column":12},"end":{"line":420,"column":13}},"102":{"start":{"line":419,"column":16},"end":{"line":419,"column":47}},"103":{"start":{"line":421,"column":12},"end":{"line":421,"column":18}},"104":{"start":{"line":423,"column":12},"end":{"line":425,"column":13}},"105":{"start":{"line":424,"column":16},"end":{"line":424,"column":45}},"106":{"start":{"line":426,"column":12},"end":{"line":426,"column":18}},"107":{"start":{"line":428,"column":12},"end":{"line":428,"column":52}},"108":{"start":{"line":429,"column":12},"end":{"line":429,"column":18}},"109":{"start":{"line":431,"column":12},"end":{"line":431,"column":51}},"110":{"start":{"line":432,"column":12},"end":{"line":432,"column":18}},"111":{"start":{"line":436,"column":8},"end":{"line":438,"column":9}},"112":{"start":{"line":437,"column":12},"end":{"line":437,"column":30}},"113":{"start":{"line":441,"column":8},"end":{"line":458,"column":11}},"114":{"start":{"line":442,"column":12},"end":{"line":442,"column":61}},"115":{"start":{"line":443,"column":12},"end":{"line":445,"column":13}},"116":{"start":{"line":444,"column":16},"end":{"line":444,"column":39}},"117":{"start":{"line":446,"column":12},"end":{"line":450,"column":13}},"118":{"start":{"line":447,"column":16},"end":{"line":449,"column":41}},"119":{"start":{"line":451,"column":12},"end":{"line":457,"column":13}},"120":{"start":{"line":452,"column":16},"end":{"line":452,"column":23}},"121":{"start":{"line":453,"column":19},"end":{"line":457,"column":13}},"122":{"start":{"line":454,"column":16},"end":{"line":454,"column":47}},"123":{"start":{"line":456,"column":16},"end":{"line":456,"column":55}},"124":{"start":{"line":466,"column":8},"end":{"line":470,"column":37}},"125":{"start":{"line":472,"column":8},"end":{"line":472,"column":35}},"126":{"start":{"line":473,"column":8},"end":{"line":473,"column":36}},"127":{"start":{"line":475,"column":8},"end":{"line":475,"column":52}},"128":{"start":{"line":476,"column":8},"end":{"line":476,"column":41}},"129":{"start":{"line":478,"column":8},"end":{"line":478,"column":55}},"130":{"start":{"line":479,"column":8},"end":{"line":479,"column":52}},"131":{"start":{"line":481,"column":8},"end":{"line":481,"column":47}},"132":{"start":{"line":482,"column":8},"end":{"line":482,"column":45}},"133":{"start":{"line":485,"column":8},"end":{"line":485,"column":28}},"134":{"start":{"line":486,"column":8},"end":{"line":486,"column":28}},"135":{"start":{"line":487,"column":8},"end":{"line":487,"column":39}},"136":{"start":{"line":490,"column":8},"end":{"line":490,"column":26}},"137":{"start":{"line":491,"column":8},"end":{"line":491,"column":26}},"138":{"start":{"line":492,"column":8},"end":{"line":492,"column":37}},"139":{"start":{"line":495,"column":8},"end":{"line":495,"column":56}},"140":{"start":{"line":496,"column":8},"end":{"line":496,"column":64}},"141":{"start":{"line":499,"column":8},"end":{"line":499,"column":62}},"142":{"start":{"line":502,"column":8},"end":{"line":502,"column":58}},"143":{"start":{"line":505,"column":8},"end":{"line":505,"column":76}}},"branchMap":{"1":{"line":136,"type":"cond-expr","locations":[{"start":{"line":136,"column":41},"end":{"line":136,"column":58}},{"start":{"line":136,"column":61},"end":{"line":136,"column":71}}]},"2":{"line":142,"type":"cond-expr","locations":[{"start":{"line":142,"column":39},"end":{"line":142,"column":56}},{"start":{"line":142,"column":59},"end":{"line":142,"column":69}}]},"3":{"line":348,"type":"if","locations":[{"start":{"line":348,"column":12},"end":{"line":348,"column":12}},{"start":{"line":348,"column":12},"end":{"line":348,"column":12}}]},"4":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":12},"end":{"line":360,"column":12}},{"start":{"line":360,"column":12},"end":{"line":360,"column":12}}]},"5":{"line":390,"type":"if","locations":[{"start":{"line":390,"column":8},"end":{"line":390,"column":8}},{"start":{"line":390,"column":8},"end":{"line":390,"column":8}}]},"6":{"line":390,"type":"binary-expr","locations":[{"start":{"line":390,"column":12},"end":{"line":390,"column":33}},{"start":{"line":390,"column":37},"end":{"line":390,"column":66}}]},"7":{"line":394,"type":"if","locations":[{"start":{"line":394,"column":8},"end":{"line":394,"column":8}},{"start":{"line":394,"column":8},"end":{"line":394,"column":8}}]},"8":{"line":394,"type":"binary-expr","locations":[{"start":{"line":394,"column":12},"end":{"line":394,"column":31}},{"start":{"line":394,"column":35},"end":{"line":394,"column":62}}]},"9":{"line":398,"type":"if","locations":[{"start":{"line":398,"column":8},"end":{"line":398,"column":8}},{"start":{"line":398,"column":8},"end":{"line":398,"column":8}}]},"10":{"line":398,"type":"binary-expr","locations":[{"start":{"line":398,"column":12},"end":{"line":398,"column":32}},{"start":{"line":398,"column":36},"end":{"line":398,"column":67}}]},"11":{"line":402,"type":"if","locations":[{"start":{"line":402,"column":8},"end":{"line":402,"column":8}},{"start":{"line":402,"column":8},"end":{"line":402,"column":8}}]},"12":{"line":402,"type":"binary-expr","locations":[{"start":{"line":402,"column":12},"end":{"line":402,"column":33}},{"start":{"line":402,"column":37},"end":{"line":402,"column":69}}]},"13":{"line":412,"type":"if","locations":[{"start":{"line":412,"column":8},"end":{"line":412,"column":8}},{"start":{"line":412,"column":8},"end":{"line":412,"column":8}}]},"14":{"line":416,"type":"switch","locations":[{"start":{"line":417,"column":8},"end":{"line":421,"column":18}},{"start":{"line":422,"column":8},"end":{"line":426,"column":18}},{"start":{"line":427,"column":8},"end":{"line":429,"column":18}},{"start":{"line":430,"column":8},"end":{"line":432,"column":18}}]},"15":{"line":418,"type":"if","locations":[{"start":{"line":418,"column":12},"end":{"line":418,"column":12}},{"start":{"line":418,"column":12},"end":{"line":418,"column":12}}]},"16":{"line":423,"type":"if","locations":[{"start":{"line":423,"column":12},"end":{"line":423,"column":12}},{"start":{"line":423,"column":12},"end":{"line":423,"column":12}}]},"17":{"line":436,"type":"if","locations":[{"start":{"line":436,"column":8},"end":{"line":436,"column":8}},{"start":{"line":436,"column":8},"end":{"line":436,"column":8}}]},"18":{"line":443,"type":"if","locations":[{"start":{"line":443,"column":12},"end":{"line":443,"column":12}},{"start":{"line":443,"column":12},"end":{"line":443,"column":12}}]},"19":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":12},"end":{"line":446,"column":12}},{"start":{"line":446,"column":12},"end":{"line":446,"column":12}}]},"20":{"line":451,"type":"if","locations":[{"start":{"line":451,"column":12},"end":{"line":451,"column":12}},{"start":{"line":451,"column":12},"end":{"line":451,"column":12}}]},"21":{"line":453,"type":"if","locations":[{"start":{"line":453,"column":19},"end":{"line":453,"column":19}},{"start":{"line":453,"column":19},"end":{"line":453,"column":19}}]},"22":{"line":499,"type":"binary-expr","locations":[{"start":{"line":499,"column":15},"end":{"line":499,"column":36}},{"start":{"line":499,"column":40},"end":{"line":499,"column":61}}]},"23":{"line":502,"type":"binary-expr","locations":[{"start":{"line":502,"column":15},"end":{"line":502,"column":34}},{"start":{"line":502,"column":38},"end":{"line":502,"column":57}}]},"24":{"line":505,"type":"binary-expr","locations":[{"start":{"line":505,"column":15},"end":{"line":505,"column":44}},{"start":{"line":505,"column":48},"end":{"line":505,"column":75}}]}},"code":["/**"," * The visualization controller will works as a state machine."," * See files under the `doc` folder for transition descriptions."," * See https://github.com/jakesgordon/javascript-state-machine"," * for the document of the StateMachine module."," */","var Controller = StateMachine.create({","    initial: 'none',","    events: [","        {","            name: 'init',","            from: 'none',","            to:   'ready'","        },","        {","            name: 'search',","            from: 'starting',","            to:   'searching'","        },","        {","            name: 'pause',","            from: 'searching',","            to:   'paused'","        },","        {","            name: 'finish',","            from: 'searching',","            to:   'finished'","        },","        {","            name: 'resume',","            from: 'paused',","            to:   'searching'","        },","        {","            name: 'cancel',","            from: 'paused',","            to:   'ready'","        },","        {","            name: 'modify',","            from: 'finished',","            to:   'modified'","        },","        {","            name: 'reset',","            from: '*',","            to:   'ready'","        },","        {","            name: 'clear',","            from: ['finished', 'modified'],","            to:   'ready'","        },","        {","            name: 'start',","            from: ['ready', 'modified', 'restarting'],","            to:   'starting'","        },","        {","            name: 'restart',","            from: ['searching', 'finished'],","            to:   'restarting'","        },","        {","            name: 'dragStart',","            from: ['ready', 'finished'],","            to:   'draggingStart'","        },","        {","            name: 'dragEnd',","            from: ['ready', 'finished'],","            to:   'draggingEnd'","        },","        {","            name: 'drawWall',","            from: ['ready', 'finished'],","            to:   'drawingWall'","        },","        {","            name: 'eraseWall',","            from: ['ready', 'finished'],","            to:   'erasingWall'","        },","        {","            name: 'rest',","            from: ['draggingStart', 'draggingEnd', 'drawingWall', 'erasingWall'],","            to  : 'ready'","        },","    ],","});","","$.extend(Controller, {","    gridSize: [64, 36], // number of nodes horizontally and vertically","    operationsPerSecond: 300,","","    /**","     * Asynchronous transition from `none` state to `ready` state.","     */","    onleavenone: function() {","        var numCols = this.gridSize[0],","            numRows = this.gridSize[1];","","        this.grid = new PF.Grid(numCols, numRows);","","        View.init({","            numCols: numCols,","            numRows: numRows","        });","        View.generateGrid(function() {","            Controller.setDefaultStartEndPos();","            Controller.bindEvents();","            Controller.transition(); // transit to the next state (ready)","        });","","        this.$buttons = $('.control_button');","","        this.hookPathFinding();","","        return StateMachine.ASYNC;","        // => ready","    },","    ondrawWall: function(event, from, to, gridX, gridY) {","        this.setWalkableAt(gridX, gridY, false);","        // => drawingWall","    },","    oneraseWall: function(event, from, to, gridX, gridY) {","        this.setWalkableAt(gridX, gridY, true);","        // => erasingWall","    },","    onsearch: function(event, from, to) {","        var grid,","            timeStart, timeEnd,","            finder = Panel.getFinder();","","        timeStart = window.performance ? performance.now() : Date.now();","        grid = this.grid.clone();","        this.path = finder.findPath(","            this.startX, this.startY, this.endX, this.endY, grid","        );","        this.operationCount = this.operations.length;","        timeEnd = window.performance ? performance.now() : Date.now();","        this.timeSpent = (timeEnd - timeStart).toFixed(4);","","        this.loop();","        // => searching","    },","    onrestart: function() {","        // When clearing the colorized nodes, there may be","        // nodes still animating, which is an asynchronous procedure.","        // Therefore, we have to defer the `abort` routine to make sure","        // that all the animations are done by the time we clear the colors.","        // The same reason applies for the `onreset` event handler.","        setTimeout(function() {","            Controller.clearOperations();","            Controller.clearFootprints();","            Controller.start();","        }, View.nodeColorizeEffect.duration * 1.2);","        // => restarting","    },","    onpause: function(event, from, to) {","        // => paused","    },","    onresume: function(event, from, to) {","        this.loop();","        // => searching","    },","    oncancel: function(event, from, to) {","        this.clearOperations();","        this.clearFootprints();","        // => ready","    },","    onfinish: function(event, from, to) {","        View.showStats({","            pathLength: PF.Util.pathLength(this.path),","            timeSpent:  this.timeSpent,","            operationCount: this.operationCount,","        });","        View.drawPath(this.path);","        // => finished","    },","    onclear: function(event, from, to) {","        this.clearOperations();","        this.clearFootprints();","        // => ready","    },","    onmodify: function(event, from, to) {","        // => modified","    },","    onreset: function(event, from, to) {","        setTimeout(function() {","            Controller.clearOperations();","            Controller.clearAll();","            Controller.buildNewGrid();","        }, View.nodeColorizeEffect.duration * 1.2);","        // => ready","    },","","    /**","     * The following functions are called on entering states.","     */","","    onready: function() {","        console.log('=> ready');","        this.setButtonStates({","            id: 1,","            text: 'Start Search',","            enabled: true,","            callback: $.proxy(this.start, this),","        }, {","            id: 2,","            text: 'Pause Search',","            enabled: false,","        }, {","            id: 3,","            text: 'Clear Walls',","            enabled: true,","            callback: $.proxy(this.reset, this),","        });","        // => [starting, draggingStart, draggingEnd, drawingStart, drawingEnd]","    },","    onstarting: function(event, from, to) {","        console.log('=> starting');","        // Clears any existing search progress","        this.clearFootprints();","        this.setButtonStates({","            id: 2,","            enabled: true,","        });","        this.search();","        // => searching","    },","    onsearching: function() {","        console.log('=> searching');","        this.setButtonStates({","            id: 1,","            text: 'Restart Search',","            enabled: true,","            callback: $.proxy(this.restart, this),","        }, {","            id: 2,","            text: 'Pause Search',","            enabled: true,","            callback: $.proxy(this.pause, this),","        });","        // => [paused, finished]","    },","    onpaused: function() {","        console.log('=> paused');","        this.setButtonStates({","            id: 1,","            text: 'Resume Search',","            enabled: true,","            callback: $.proxy(this.resume, this),","        }, {","            id: 2,","            text: 'Cancel Search',","            enabled: true,","            callback: $.proxy(this.cancel, this),","        });","        // => [searching, ready]","    },","    onfinished: function() {","        console.log('=> finished');","        this.setButtonStates({","            id: 1,","            text: 'Restart Search',","            enabled: true,","            callback: $.proxy(this.restart, this),","        }, {","            id: 2,","            text: 'Clear Path',","            enabled: true,","            callback: $.proxy(this.clear, this),","        });","    },","    onmodified: function() {","        console.log('=> modified');","        this.setButtonStates({","            id: 1,","            text: 'Start Search',","            enabled: true,","            callback: $.proxy(this.start, this),","        }, {","            id: 2,","            text: 'Clear Path',","            enabled: true,","            callback: $.proxy(this.clear, this),","        });","    },","","    /**","     * Define setters and getters of PF.Node, then we can get the operations","     * of the pathfinding.","     */","    hookPathFinding: function() {","","        PF.Node.prototype = {","            get opened() {","                return this._opened;","            },","            set opened(v) {","                this._opened = v;","                Controller.operations.push({","                    x: this.x,","                    y: this.y,","                    attr: 'opened',","                    value: v","                });","            },","            get closed() {","                return this._closed;","            },","            set closed(v) {","                this._closed = v;","                Controller.operations.push({","                    x: this.x,","                    y: this.y,","                    attr: 'closed',","                    value: v","                });","            },","            get tested() {","                return this._tested;","            },","            set tested(v) {","                this._tested = v;","                Controller.operations.push({","                    x: this.x,","                    y: this.y,","                    attr: 'tested',","                    value: v","                });","            },","        };","","        this.operations = [];","    },","    bindEvents: function() {","        $('#draw_area').mousedown($.proxy(this.mousedown, this));","        $(window)","            .mousemove($.proxy(this.mousemove, this))","            .mouseup($.proxy(this.mouseup, this));","    },","    loop: function() {","        var interval = 1000 / this.operationsPerSecond;","        (function loop() {","            if (!Controller.is('searching')) {","                return;","            }","            Controller.step();","            setTimeout(loop, interval);","        })();","    },","    step: function() {","        var operations = this.operations,","            op, isSupported;","","        do {","            if (!operations.length) {","                this.finish(); // transit to `finished` state","                return;","            }","            op = operations.shift();","            isSupported = View.supportedOperations.indexOf(op.attr) !== -1;","        } while (!isSupported);","","        View.setAttributeAt(op.x, op.y, op.attr, op.value);","    },","    clearOperations: function() {","        this.operations = [];","    },","    clearFootprints: function() {","        View.clearFootprints();","        View.clearPath();","    },","    clearAll: function() {","        this.clearFootprints();","        View.clearBlockedNodes();","    },","    buildNewGrid: function() {","        this.grid = new PF.Grid(this.gridSize[0], this.gridSize[1]);","    },","    mousedown: function (event) {","        var coord = View.toGridCoordinate(event.pageX, event.pageY),","            gridX = coord[0],","            gridY = coord[1],","            grid  = this.grid;","","        if (this.can('dragStart') && this.isStartPos(gridX, gridY)) {","            this.dragStart();","            return;","        }","        if (this.can('dragEnd') && this.isEndPos(gridX, gridY)) {","            this.dragEnd();","            return;","        }","        if (this.can('drawWall') && grid.isWalkableAt(gridX, gridY)) {","            this.drawWall(gridX, gridY);","            return;","        }","        if (this.can('eraseWall') && !grid.isWalkableAt(gridX, gridY)) {","            this.eraseWall(gridX, gridY);","        }","    },","    mousemove: function(event) {","        var coord = View.toGridCoordinate(event.pageX, event.pageY),","            grid = this.grid,","            gridX = coord[0],","            gridY = coord[1];","","        if (this.isStartOrEndPos(gridX, gridY)) {","            return;","        }","","        switch (this.current) {","        case 'draggingStart':","            if (grid.isWalkableAt(gridX, gridY)) {","                this.setStartPos(gridX, gridY);","            }","            break;","        case 'draggingEnd':","            if (grid.isWalkableAt(gridX, gridY)) {","                this.setEndPos(gridX, gridY);","            }","            break;","        case 'drawingWall':","            this.setWalkableAt(gridX, gridY, false);","            break;","        case 'erasingWall':","            this.setWalkableAt(gridX, gridY, true);","            break;","        }","    },","    mouseup: function(event) {","        if (Controller.can('rest')) {","            Controller.rest();","        }","    },","    setButtonStates: function() {","        $.each(arguments, function(i, opt) {","            var $button = Controller.$buttons.eq(opt.id - 1);","            if (opt.text) {","                $button.text(opt.text);","            }","            if (opt.callback) {","                $button","                    .unbind('click')","                    .click(opt.callback);","            }","            if (opt.enabled === undefined) {","                return;","            } else if (opt.enabled) {","                $button.removeAttr('disabled');","            } else {","                $button.attr({ disabled: 'disabled' });","            }","        });","    },","    /**","     * When initializing, this method will be called to set the positions","     * of start node and end node.","     * It will detect user's display size, and compute the best positions.","     */","    setDefaultStartEndPos: function() {","        var width, height,","            marginRight, availWidth,","            centerX, centerY,","            endX, endY,","            nodeSize = View.nodeSize;","","        width  = $(window).width();","        height = $(window).height();","","        marginRight = $('#algorithm_panel').width();","        availWidth = width - marginRight;","","        centerX = Math.ceil(availWidth / 2 / nodeSize);","        centerY = Math.floor(height / 2 / nodeSize);","","        this.setStartPos(centerX - 5, centerY);","        this.setEndPos(centerX + 5, centerY);","    },","    setStartPos: function(gridX, gridY) {","        this.startX = gridX;","        this.startY = gridY;","        View.setStartPos(gridX, gridY);","    },","    setEndPos: function(gridX, gridY) {","        this.endX = gridX;","        this.endY = gridY;","        View.setEndPos(gridX, gridY);","    },","    setWalkableAt: function(gridX, gridY, walkable) {","        this.grid.setWalkableAt(gridX, gridY, walkable);","        View.setAttributeAt(gridX, gridY, 'walkable', walkable);","    },","    isStartPos: function(gridX, gridY) {","        return gridX === this.startX && gridY === this.startY;","    },","    isEndPos: function(gridX, gridY) {","        return gridX === this.endX && gridY === this.endY;","    },","    isStartOrEndPos: function(gridX, gridY) {","        return this.isStartPos(gridX, gridY) || this.isEndPos(gridX, gridY);","    },","});",""],"l":{"7":2,"93":0,"101":0,"104":0,"106":0,"110":0,"111":0,"112":0,"113":0,"116":0,"118":0,"120":0,"124":0,"128":0,"132":0,"136":0,"137":0,"138":0,"141":0,"142":0,"143":0,"145":0,"154":0,"155":0,"156":0,"157":0,"165":0,"169":0,"170":0,"174":0,"179":0,"183":0,"184":0,"191":0,"192":0,"193":0,"194":0,"204":0,"205":0,"223":0,"225":0,"226":0,"230":0,"234":0,"235":0,"249":0,"250":0,"264":0,"265":0,"278":0,"279":0,"298":0,"300":0,"303":0,"304":0,"312":0,"315":0,"316":0,"324":0,"327":0,"328":0,"337":0,"340":0,"341":0,"346":0,"347":0,"348":0,"349":0,"351":0,"352":0,"356":0,"359":0,"360":0,"361":0,"362":0,"364":0,"365":0,"368":0,"371":0,"374":0,"375":0,"378":0,"379":0,"382":0,"385":0,"390":0,"391":0,"392":0,"394":0,"395":0,"396":0,"398":0,"399":0,"400":0,"402":0,"403":0,"407":0,"412":0,"413":0,"416":0,"418":0,"419":0,"421":0,"423":0,"424":0,"426":0,"428":0,"429":0,"431":0,"432":0,"436":0,"437":0,"441":0,"442":0,"443":0,"444":0,"446":0,"447":0,"451":0,"452":0,"453":0,"454":0,"456":0,"466":0,"472":0,"473":0,"475":0,"476":0,"478":0,"479":0,"481":0,"482":0,"485":0,"486":0,"487":0,"490":0,"491":0,"492":0,"495":0,"496":0,"499":0,"502":0,"505":0}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/visual/js/main.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/visual/js/main.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":18},"end":{"line":1,"column":29}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":34},"end":{"line":7,"column":50}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":14,"column":3}},"2":{"start":{"line":2,"column":4},"end":{"line":4,"column":5}},"3":{"start":{"line":3,"column":8},"end":{"line":3,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":9,"column":7}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":31}},"6":{"start":{"line":12,"column":4},"end":{"line":12,"column":17}},"7":{"start":{"line":13,"column":4},"end":{"line":13,"column":22}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":4}},{"start":{"line":2,"column":4},"end":{"line":2,"column":4}}]}},"code":["$(document).ready(function() {","    if (!Raphael.svg) {","        window.location = './notsupported.html';","    }","","    // suppress select events","    $(window).bind('selectstart', function(event) {","        event.preventDefault();","    });","","    // initialize visualization","    Panel.init();","    Controller.init();","});",""],"l":{"1":2,"2":0,"3":0,"7":0,"8":0,"12":0,"13":0}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/visual/js/panel.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/visual/js/panel.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0},"b":{"1":[0,0,0,0,0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":10},"end":{"line":5,"column":21}}},"2":{"name":"(anonymous_2)","line":12,"loc":{"start":{"line":12,"column":33},"end":{"line":12,"column":44}}},"3":{"name":"(anonymous_3)","line":15,"loc":{"start":{"line":15,"column":38},"end":{"line":15,"column":49}}},"4":{"name":"(anonymous_4)","line":27,"loc":{"start":{"line":27,"column":15},"end":{"line":27,"column":26}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":184,"column":2}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":42}},"3":{"start":{"line":8,"column":8},"end":{"line":8,"column":32}},"4":{"start":{"line":9,"column":8},"end":{"line":11,"column":11}},"5":{"start":{"line":12,"column":8},"end":{"line":14,"column":11}},"6":{"start":{"line":13,"column":12},"end":{"line":13,"column":35}},"7":{"start":{"line":15,"column":8},"end":{"line":17,"column":11}},"8":{"start":{"line":16,"column":12},"end":{"line":16,"column":47}},"9":{"start":{"line":18,"column":8},"end":{"line":20,"column":11}},"10":{"start":{"line":21,"column":8},"end":{"line":21,"column":51}},"11":{"start":{"line":28,"column":8},"end":{"line":28,"column":130}},"12":{"start":{"line":30,"column":8},"end":{"line":33,"column":21}},"13":{"start":{"line":35,"column":8},"end":{"line":180,"column":9}},"14":{"start":{"line":38,"column":12},"end":{"line":39,"column":86}},"15":{"start":{"line":40,"column":12},"end":{"line":41,"column":85}},"16":{"start":{"line":42,"column":12},"end":{"line":43,"column":89}},"17":{"start":{"line":46,"column":12},"end":{"line":46,"column":71}},"18":{"start":{"line":47,"column":12},"end":{"line":47,"column":46}},"19":{"start":{"line":49,"column":12},"end":{"line":49,"column":71}},"20":{"start":{"line":50,"column":12},"end":{"line":64,"column":13}},"21":{"start":{"line":51,"column":16},"end":{"line":56,"column":19}},"22":{"start":{"line":58,"column":16},"end":{"line":63,"column":19}},"23":{"start":{"line":65,"column":12},"end":{"line":65,"column":18}},"24":{"start":{"line":68,"column":12},"end":{"line":69,"column":86}},"25":{"start":{"line":70,"column":12},"end":{"line":71,"column":86}},"26":{"start":{"line":72,"column":12},"end":{"line":73,"column":89}},"27":{"start":{"line":74,"column":12},"end":{"line":84,"column":13}},"28":{"start":{"line":75,"column":16},"end":{"line":78,"column":19}},"29":{"start":{"line":80,"column":16},"end":{"line":83,"column":19}},"30":{"start":{"line":85,"column":12},"end":{"line":85,"column":18}},"31":{"start":{"line":88,"column":12},"end":{"line":89,"column":86}},"32":{"start":{"line":90,"column":12},"end":{"line":91,"column":86}},"33":{"start":{"line":92,"column":12},"end":{"line":93,"column":89}},"34":{"start":{"line":94,"column":12},"end":{"line":94,"column":75}},"35":{"start":{"line":95,"column":12},"end":{"line":107,"column":13}},"36":{"start":{"line":96,"column":16},"end":{"line":100,"column":19}},"37":{"start":{"line":102,"column":16},"end":{"line":106,"column":19}},"38":{"start":{"line":108,"column":12},"end":{"line":108,"column":18}},"39":{"start":{"line":111,"column":12},"end":{"line":112,"column":86}},"40":{"start":{"line":113,"column":12},"end":{"line":114,"column":85}},"41":{"start":{"line":115,"column":12},"end":{"line":116,"column":89}},"42":{"start":{"line":117,"column":12},"end":{"line":127,"column":13}},"43":{"start":{"line":118,"column":16},"end":{"line":121,"column":19}},"44":{"start":{"line":123,"column":16},"end":{"line":126,"column":19}},"45":{"start":{"line":128,"column":12},"end":{"line":128,"column":18}},"46":{"start":{"line":131,"column":12},"end":{"line":132,"column":87}},"47":{"start":{"line":133,"column":12},"end":{"line":133,"column":76}},"48":{"start":{"line":135,"column":12},"end":{"line":139,"column":15}},"49":{"start":{"line":140,"column":12},"end":{"line":140,"column":18}},"50":{"start":{"line":142,"column":12},"end":{"line":143,"column":87}},"51":{"start":{"line":144,"column":12},"end":{"line":144,"column":81}},"52":{"start":{"line":146,"column":12},"end":{"line":150,"column":15}},"53":{"start":{"line":151,"column":12},"end":{"line":151,"column":18}},"54":{"start":{"line":153,"column":12},"end":{"line":154,"column":86}},"55":{"start":{"line":155,"column":12},"end":{"line":156,"column":89}},"56":{"start":{"line":157,"column":12},"end":{"line":158,"column":87}},"57":{"start":{"line":160,"column":12},"end":{"line":160,"column":76}},"58":{"start":{"line":162,"column":12},"end":{"line":162,"column":85}},"59":{"start":{"line":163,"column":12},"end":{"line":163,"column":46}},"60":{"start":{"line":165,"column":12},"end":{"line":165,"column":81}},"61":{"start":{"line":168,"column":12},"end":{"line":168,"column":78}},"62":{"start":{"line":170,"column":12},"end":{"line":177,"column":15}},"63":{"start":{"line":179,"column":12},"end":{"line":179,"column":18}},"64":{"start":{"line":182,"column":8},"end":{"line":182,"column":22}}},"branchMap":{"1":{"line":35,"type":"switch","locations":[{"start":{"line":37,"column":8},"end":{"line":65,"column":18}},{"start":{"line":67,"column":8},"end":{"line":85,"column":18}},{"start":{"line":87,"column":8},"end":{"line":108,"column":18}},{"start":{"line":110,"column":8},"end":{"line":128,"column":18}},{"start":{"line":130,"column":8},"end":{"line":140,"column":18}},{"start":{"line":141,"column":8},"end":{"line":151,"column":18}},{"start":{"line":152,"column":8},"end":{"line":179,"column":18}}]},"2":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":21},"end":{"line":46,"column":65}},{"start":{"line":46,"column":69},"end":{"line":46,"column":70}}]},"3":{"line":47,"type":"cond-expr","locations":[{"start":{"line":47,"column":35},"end":{"line":47,"column":41}},{"start":{"line":47,"column":44},"end":{"line":47,"column":45}}]},"4":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":12},"end":{"line":50,"column":12}},{"start":{"line":50,"column":12},"end":{"line":50,"column":12}}]},"5":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":12},"end":{"line":74,"column":12}},{"start":{"line":74,"column":12},"end":{"line":74,"column":12}}]},"6":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":12},"end":{"line":95,"column":12}},{"start":{"line":95,"column":12},"end":{"line":95,"column":12}}]},"7":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":12},"end":{"line":117,"column":12}},{"start":{"line":117,"column":12},"end":{"line":117,"column":12}}]},"8":{"line":162,"type":"binary-expr","locations":[{"start":{"line":162,"column":21},"end":{"line":162,"column":79}},{"start":{"line":162,"column":83},"end":{"line":162,"column":84}}]},"9":{"line":163,"type":"cond-expr","locations":[{"start":{"line":163,"column":35},"end":{"line":163,"column":41}},{"start":{"line":163,"column":44},"end":{"line":163,"column":45}}]},"10":{"line":168,"type":"cond-expr","locations":[{"start":{"line":168,"column":63},"end":{"line":168,"column":65}},{"start":{"line":168,"column":68},"end":{"line":168,"column":77}}]},"11":{"line":168,"type":"binary-expr","locations":[{"start":{"line":168,"column":25},"end":{"line":168,"column":39}},{"start":{"line":168,"column":43},"end":{"line":168,"column":59}}]}},"code":["/**"," * The control panel."," */","var Panel = {","    init: function() {","        var $algo = $('#algorithm_panel');","","        $('.panel').draggable();","        $('.accordion').accordion({","            collapsible: false,","        });","        $('.option_label').click(function() {","            $(this).prev().click();","        });","        $('#hide_instructions').click(function() {","            $('#instructions_panel').slideUp();","        });","        $('#play_panel').css({","            top: $algo.offset().top + $algo.outerHeight() + 20","        });","        $('#button2').attr('disabled', 'disabled');","    },","    /**","     * Get the user selected path-finder.","     * TODO: clean up this messy code.","     */","    getFinder: function() {","        var finder, selected_header, heuristic, allowDiagonal, biDirectional, dontCrossCorners, weight, trackRecursion, timeLimit;","        ","        selected_header = $(","            '#algorithm_panel ' +","            '.ui-accordion-header[aria-selected=true]'","        ).attr('id');","        ","        switch (selected_header) {","","        case 'astar_header':","            allowDiagonal = typeof $('#astar_section ' +","                                     '.allow_diagonal:checked').val() !== 'undefined';","            biDirectional = typeof $('#astar_section ' +","                                     '.bi-directional:checked').val() !=='undefined';","            dontCrossCorners = typeof $('#astar_section ' +","                                     '.dont_cross_corners:checked').val() !=='undefined';","","            /* parseInt returns NaN (which is falsy) if the string can't be parsed */","            weight = parseInt($('#astar_section .spinner').val()) || 1;","            weight = weight >= 1 ? weight : 1; /* if negative or 0, use 1 */","","            heuristic = $('input[name=astar_heuristic]:checked').val();","            if (biDirectional) {","                finder = new PF.BiAStarFinder({","                    allowDiagonal: allowDiagonal,","                    dontCrossCorners: dontCrossCorners,","                    heuristic: PF.Heuristic[heuristic],","                    weight: weight","                });","            } else {","                finder = new PF.AStarFinder({","                    allowDiagonal: allowDiagonal,","                    dontCrossCorners: dontCrossCorners,","                    heuristic: PF.Heuristic[heuristic],","                    weight: weight","                });","            }","            break;","","        case 'breadthfirst_header':","            allowDiagonal = typeof $('#breadthfirst_section ' +","                                     '.allow_diagonal:checked').val() !== 'undefined';","            biDirectional = typeof $('#breadthfirst_section ' +","                                     '.bi-directional:checked').val() !== 'undefined';","            dontCrossCorners = typeof $('#breadthfirst_section ' +","                                     '.dont_cross_corners:checked').val() !=='undefined';","            if (biDirectional) {","                finder = new PF.BiBreadthFirstFinder({","                    allowDiagonal: allowDiagonal,","                    dontCrossCorners: dontCrossCorners","                });","            } else {","                finder = new PF.BreadthFirstFinder({","                    allowDiagonal: allowDiagonal,","                    dontCrossCorners: dontCrossCorners","                });","            }","            break;","","        case 'bestfirst_header':","            allowDiagonal = typeof $('#bestfirst_section ' +","                                     '.allow_diagonal:checked').val() !== 'undefined';","            biDirectional = typeof $('#bestfirst_section ' +","                                     '.bi-directional:checked').val() !== 'undefined';","            dontCrossCorners = typeof $('#bestfirst_section ' +","                                     '.dont_cross_corners:checked').val() !=='undefined';","            heuristic = $('input[name=bestfirst_heuristic]:checked').val();","            if (biDirectional) {","                finder = new PF.BiBestFirstFinder({","                    allowDiagonal: allowDiagonal,","                    dontCrossCorners: dontCrossCorners,","                    heuristic: PF.Heuristic[heuristic]","                });","            } else {","                finder = new PF.BestFirstFinder({","                    allowDiagonal: allowDiagonal,","                    dontCrossCorners: dontCrossCorners,","                    heuristic: PF.Heuristic[heuristic]","                });","            }","            break;","","        case 'dijkstra_header':","            allowDiagonal = typeof $('#dijkstra_section ' +","                                     '.allow_diagonal:checked').val() !== 'undefined';","            biDirectional = typeof $('#dijkstra_section ' +","                                     '.bi-directional:checked').val() !=='undefined';","            dontCrossCorners = typeof $('#dijkstra_section ' +","                                     '.dont_cross_corners:checked').val() !=='undefined';","            if (biDirectional) {","                finder = new PF.BiDijkstraFinder({","                    allowDiagonal: allowDiagonal,","                    dontCrossCorners: dontCrossCorners","                });","            } else {","                finder = new PF.DijkstraFinder({","                    allowDiagonal: allowDiagonal,","                    dontCrossCorners: dontCrossCorners","                });","            }","            break;","","        case 'jump_point_header':","            trackRecursion = typeof $('#jump_point_section ' +","                                     '.track_recursion:checked').val() !== 'undefined';","            heuristic = $('input[name=jump_point_heuristic]:checked').val();","            ","            finder = new PF.JumpPointFinder({","              trackJumpRecursion: trackRecursion,","              heuristic: PF.Heuristic[heuristic],","              diagonalMovement: PF.DiagonalMovement.IfAtMostOneObstacle","            });","            break;","        case 'orth_jump_point_header':","            trackRecursion = typeof $('#orth_jump_point_section ' +","                                     '.track_recursion:checked').val() !== 'undefined';","            heuristic = $('input[name=orth_jump_point_heuristic]:checked').val();","","            finder = new PF.JumpPointFinder({","              trackJumpRecursion: trackRecursion,","              heuristic: PF.Heuristic[heuristic],","              diagonalMovement: PF.DiagonalMovement.Never","            });","            break;","        case 'ida_header':","            allowDiagonal = typeof $('#ida_section ' +","                                     '.allow_diagonal:checked').val() !== 'undefined';","            dontCrossCorners = typeof $('#ida_section ' +","                                     '.dont_cross_corners:checked').val() !=='undefined';","            trackRecursion = typeof $('#ida_section ' +","                                     '.track_recursion:checked').val() !== 'undefined';","","            heuristic = $('input[name=jump_point_heuristic]:checked').val();","","            weight = parseInt($('#ida_section input[name=astar_weight]').val()) || 1;","            weight = weight >= 1 ? weight : 1; /* if negative or 0, use 1 */","","            timeLimit = parseInt($('#ida_section input[name=time_limit]').val());","","            // Any non-negative integer, indicates \"forever\".","            timeLimit = (timeLimit <= 0 || isNaN(timeLimit)) ? -1 : timeLimit;","","            finder = new PF.IDAStarFinder({","              timeLimit: timeLimit,","              trackRecursion: trackRecursion,","              allowDiagonal: allowDiagonal,","              dontCrossCorners: dontCrossCorners,","              heuristic: PF.Heuristic[heuristic],","              weight: weight","            });","","            break;","        }","","        return finder;","    }","};",""],"l":{"4":1,"6":0,"8":0,"9":0,"12":0,"13":0,"15":0,"16":0,"18":0,"21":0,"28":0,"30":0,"35":0,"38":0,"40":0,"42":0,"46":0,"47":0,"49":0,"50":0,"51":0,"58":0,"65":0,"68":0,"70":0,"72":0,"74":0,"75":0,"80":0,"85":0,"88":0,"90":0,"92":0,"94":0,"95":0,"96":0,"102":0,"108":0,"111":0,"113":0,"115":0,"117":0,"118":0,"123":0,"128":0,"131":0,"133":0,"135":0,"140":0,"142":0,"144":0,"146":0,"151":0,"153":0,"155":0,"157":0,"160":0,"162":0,"163":0,"165":0,"168":0,"170":0,"179":0,"182":0}},"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/visual/js/view.js":{"path":"/home/travis/build/npmtest/node-npmtest-pathfinding/node_modules/pathfinding/visual/js/view.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"fnMap":{"1":{"name":"(anonymous_1)","line":54,"loc":{"start":{"line":54,"column":10},"end":{"line":54,"column":25}}},"2":{"name":"(anonymous_2)","line":66,"loc":{"start":{"line":66,"column":18},"end":{"line":66,"column":37}}},"3":{"name":"(anonymous_3)","line":81,"loc":{"start":{"line":81,"column":24},"end":{"line":81,"column":40}}},"4":{"name":"(anonymous_4)","line":82,"loc":{"start":{"line":82,"column":19},"end":{"line":82,"column":34}}},"5":{"name":"(anonymous_5)","line":100,"loc":{"start":{"line":100,"column":16},"end":{"line":100,"column":31}}},"6":{"name":"(anonymous_6)","line":101,"loc":{"start":{"line":101,"column":23},"end":{"line":101,"column":34}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":28},"end":{"line":112,"column":39}}},"8":{"name":"(anonymous_8)","line":118,"loc":{"start":{"line":118,"column":17},"end":{"line":118,"column":40}}},"9":{"name":"(anonymous_9)","line":132,"loc":{"start":{"line":132,"column":15},"end":{"line":132,"column":38}}},"10":{"name":"(anonymous_10)","line":149,"loc":{"start":{"line":149,"column":20},"end":{"line":149,"column":56}}},"11":{"name":"(anonymous_11)","line":179,"loc":{"start":{"line":179,"column":18},"end":{"line":179,"column":40}}},"12":{"name":"(anonymous_12)","line":184,"loc":{"start":{"line":184,"column":14},"end":{"line":184,"column":29}}},"13":{"name":"(anonymous_13)","line":191,"loc":{"start":{"line":191,"column":19},"end":{"line":191,"column":49}}},"14":{"name":"(anonymous_14)","line":205,"loc":{"start":{"line":205,"column":27},"end":{"line":205,"column":38}}},"15":{"name":"(anonymous_15)","line":220,"loc":{"start":{"line":220,"column":21},"end":{"line":220,"column":32}}},"16":{"name":"(anonymous_16)","line":230,"loc":{"start":{"line":230,"column":23},"end":{"line":230,"column":34}}},"17":{"name":"(anonymous_17)","line":244,"loc":{"start":{"line":244,"column":14},"end":{"line":244,"column":29}}},"18":{"name":"(anonymous_18)","line":254,"loc":{"start":{"line":254,"column":18},"end":{"line":254,"column":33}}},"19":{"name":"(anonymous_19)","line":266,"loc":{"start":{"line":266,"column":15},"end":{"line":266,"column":26}}},"20":{"name":"(anonymous_20)","line":274,"loc":{"start":{"line":274,"column":22},"end":{"line":274,"column":45}}},"21":{"name":"(anonymous_21)","line":283,"loc":{"start":{"line":283,"column":22},"end":{"line":283,"column":45}}},"22":{"name":"(anonymous_22)","line":289,"loc":{"start":{"line":289,"column":15},"end":{"line":289,"column":30}}},"23":{"name":"(anonymous_23)","line":297,"loc":{"start":{"line":297,"column":19},"end":{"line":297,"column":51}}},"24":{"name":"(anonymous_24)","line":315,"loc":{"start":{"line":315,"column":20},"end":{"line":315,"column":31}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":335,"column":2}},"2":{"start":{"line":55,"column":8},"end":{"line":55,"column":41}},"3":{"start":{"line":56,"column":8},"end":{"line":56,"column":41}},"4":{"start":{"line":57,"column":8},"end":{"line":57,"column":49}},"5":{"start":{"line":58,"column":8},"end":{"line":58,"column":40}},"6":{"start":{"line":67,"column":8},"end":{"line":77,"column":38}},"7":{"start":{"line":79,"column":8},"end":{"line":79,"column":62}},"8":{"start":{"line":81,"column":8},"end":{"line":98,"column":10}},"9":{"start":{"line":82,"column":12},"end":{"line":97,"column":14}},"10":{"start":{"line":83,"column":16},"end":{"line":83,"column":34}},"11":{"start":{"line":84,"column":16},"end":{"line":91,"column":17}},"12":{"start":{"line":85,"column":20},"end":{"line":85,"column":37}},"13":{"start":{"line":86,"column":20},"end":{"line":86,"column":41}},"14":{"start":{"line":88,"column":20},"end":{"line":88,"column":64}},"15":{"start":{"line":89,"column":20},"end":{"line":89,"column":43}},"16":{"start":{"line":90,"column":20},"end":{"line":90,"column":44}},"17":{"start":{"line":92,"column":16},"end":{"line":95,"column":18}},"18":{"start":{"line":96,"column":16},"end":{"line":96,"column":27}},"19":{"start":{"line":100,"column":8},"end":{"line":104,"column":10}},"20":{"start":{"line":101,"column":12},"end":{"line":103,"column":18}},"21":{"start":{"line":102,"column":16},"end":{"line":102,"column":27}},"22":{"start":{"line":106,"column":8},"end":{"line":106,"column":19}},"23":{"start":{"line":107,"column":8},"end":{"line":110,"column":9}},"24":{"start":{"line":108,"column":12},"end":{"line":108,"column":41}},"25":{"start":{"line":109,"column":12},"end":{"line":109,"column":30}},"26":{"start":{"line":112,"column":8},"end":{"line":116,"column":11}},"27":{"start":{"line":113,"column":12},"end":{"line":115,"column":13}},"28":{"start":{"line":114,"column":16},"end":{"line":114,"column":27}},"29":{"start":{"line":119,"column":8},"end":{"line":119,"column":56}},"30":{"start":{"line":120,"column":8},"end":{"line":130,"column":9}},"31":{"start":{"line":121,"column":12},"end":{"line":127,"column":50}},"32":{"start":{"line":129,"column":12},"end":{"line":129,"column":72}},"33":{"start":{"line":133,"column":8},"end":{"line":133,"column":56}},"34":{"start":{"line":134,"column":8},"end":{"line":144,"column":9}},"35":{"start":{"line":135,"column":12},"end":{"line":141,"column":48}},"36":{"start":{"line":143,"column":12},"end":{"line":143,"column":70}},"37":{"start":{"line":150,"column":8},"end":{"line":150,"column":46}},"38":{"start":{"line":151,"column":8},"end":{"line":177,"column":9}},"39":{"start":{"line":153,"column":12},"end":{"line":153,"column":75}},"40":{"start":{"line":154,"column":12},"end":{"line":154,"column":52}},"41":{"start":{"line":155,"column":12},"end":{"line":155,"column":18}},"42":{"start":{"line":157,"column":12},"end":{"line":157,"column":79}},"43":{"start":{"line":158,"column":12},"end":{"line":158,"column":51}},"44":{"start":{"line":159,"column":12},"end":{"line":159,"column":18}},"45":{"start":{"line":161,"column":12},"end":{"line":161,"column":79}},"46":{"start":{"line":162,"column":12},"end":{"line":162,"column":51}},"47":{"start":{"line":163,"column":12},"end":{"line":163,"column":18}},"48":{"start":{"line":165,"column":12},"end":{"line":165,"column":85}},"49":{"start":{"line":167,"column":12},"end":{"line":167,"column":63}},"50":{"start":{"line":168,"column":12},"end":{"line":168,"column":51}},"51":{"start":{"line":169,"column":12},"end":{"line":169,"column":18}},"52":{"start":{"line":173,"column":12},"end":{"line":173,"column":18}},"53":{"start":{"line":175,"column":12},"end":{"line":175,"column":74}},"54":{"start":{"line":176,"column":12},"end":{"line":176,"column":19}},"55":{"start":{"line":180,"column":8},"end":{"line":182,"column":45}},"56":{"start":{"line":185,"column":8},"end":{"line":189,"column":41}},"57":{"start":{"line":192,"column":8},"end":{"line":192,"column":54}},"58":{"start":{"line":193,"column":8},"end":{"line":198,"column":9}},"59":{"start":{"line":194,"column":12},"end":{"line":194,"column":71}},"60":{"start":{"line":195,"column":12},"end":{"line":197,"column":13}},"61":{"start":{"line":196,"column":16},"end":{"line":196,"column":37}},"62":{"start":{"line":199,"column":8},"end":{"line":199,"column":42}},"63":{"start":{"line":200,"column":8},"end":{"line":218,"column":9}},"64":{"start":{"line":202,"column":12},"end":{"line":209,"column":13}},"65":{"start":{"line":203,"column":16},"end":{"line":203,"column":79}},"66":{"start":{"line":204,"column":16},"end":{"line":204,"column":36}},"67":{"start":{"line":205,"column":16},"end":{"line":207,"column":49}},"68":{"start":{"line":206,"column":20},"end":{"line":206,"column":34}},"69":{"start":{"line":208,"column":16},"end":{"line":208,"column":50}},"70":{"start":{"line":212,"column":12},"end":{"line":214,"column":13}},"71":{"start":{"line":213,"column":16},"end":{"line":213,"column":23}},"72":{"start":{"line":215,"column":12},"end":{"line":215,"column":81}},"73":{"start":{"line":216,"column":12},"end":{"line":216,"column":65}},"74":{"start":{"line":217,"column":12},"end":{"line":217,"column":32}},"75":{"start":{"line":221,"column":8},"end":{"line":221,"column":59}},"76":{"start":{"line":222,"column":8},"end":{"line":228,"column":9}},"77":{"start":{"line":223,"column":12},"end":{"line":223,"column":30}},"78":{"start":{"line":224,"column":12},"end":{"line":224,"column":25}},"79":{"start":{"line":225,"column":12},"end":{"line":225,"column":25}},"80":{"start":{"line":226,"column":12},"end":{"line":226,"column":57}},"81":{"start":{"line":227,"column":12},"end":{"line":227,"column":44}},"82":{"start":{"line":231,"column":8},"end":{"line":231,"column":51}},"83":{"start":{"line":232,"column":8},"end":{"line":234,"column":9}},"84":{"start":{"line":233,"column":12},"end":{"line":233,"column":19}},"85":{"start":{"line":235,"column":8},"end":{"line":242,"column":9}},"86":{"start":{"line":236,"column":12},"end":{"line":241,"column":13}},"87":{"start":{"line":237,"column":16},"end":{"line":240,"column":17}},"88":{"start":{"line":238,"column":20},"end":{"line":238,"column":48}},"89":{"start":{"line":239,"column":20},"end":{"line":239,"column":46}},"90":{"start":{"line":245,"column":8},"end":{"line":247,"column":9}},"91":{"start":{"line":246,"column":12},"end":{"line":246,"column":19}},"92":{"start":{"line":248,"column":8},"end":{"line":248,"column":46}},"93":{"start":{"line":249,"column":8},"end":{"line":249,"column":66}},"94":{"start":{"line":255,"column":8},"end":{"line":255,"column":47}},"95":{"start":{"line":257,"column":8},"end":{"line":258,"column":50}},"96":{"start":{"line":259,"column":8},"end":{"line":262,"column":9}},"97":{"start":{"line":260,"column":12},"end":{"line":261,"column":54}},"98":{"start":{"line":264,"column":8},"end":{"line":264,"column":29}},"99":{"start":{"line":267,"column":8},"end":{"line":269,"column":9}},"100":{"start":{"line":268,"column":12},"end":{"line":268,"column":31}},"101":{"start":{"line":275,"column":8},"end":{"line":278,"column":10}},"102":{"start":{"line":284,"column":8},"end":{"line":287,"column":10}},"103":{"start":{"line":290,"column":8},"end":{"line":294,"column":10}},"104":{"start":{"line":295,"column":8},"end":{"line":295,"column":52}},"105":{"start":{"line":298,"column":8},"end":{"line":301,"column":23}},"106":{"start":{"line":303,"column":8},"end":{"line":311,"column":9}},"107":{"start":{"line":304,"column":12},"end":{"line":304,"column":46}},"108":{"start":{"line":305,"column":12},"end":{"line":310,"column":13}},"109":{"start":{"line":306,"column":16},"end":{"line":306,"column":36}},"110":{"start":{"line":307,"column":16},"end":{"line":309,"column":17}},"111":{"start":{"line":308,"column":20},"end":{"line":308,"column":46}},"112":{"start":{"line":313,"column":8},"end":{"line":313,"column":48}},"113":{"start":{"line":316,"column":8},"end":{"line":320,"column":24}},"114":{"start":{"line":322,"column":8},"end":{"line":324,"column":9}},"115":{"start":{"line":323,"column":12},"end":{"line":323,"column":22}},"116":{"start":{"line":326,"column":8},"end":{"line":332,"column":9}},"117":{"start":{"line":327,"column":12},"end":{"line":331,"column":13}},"118":{"start":{"line":328,"column":16},"end":{"line":330,"column":17}},"119":{"start":{"line":329,"column":20},"end":{"line":329,"column":40}},"120":{"start":{"line":333,"column":8},"end":{"line":333,"column":22}}},"branchMap":{"1":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":12},"end":{"line":113,"column":12}},{"start":{"line":113,"column":12},"end":{"line":113,"column":12}}]},"2":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":8},"end":{"line":120,"column":8}},{"start":{"line":120,"column":8},"end":{"line":120,"column":8}}]},"3":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":8},"end":{"line":134,"column":8}},{"start":{"line":134,"column":8},"end":{"line":134,"column":8}}]},"4":{"line":151,"type":"switch","locations":[{"start":{"line":152,"column":8},"end":{"line":155,"column":18}},{"start":{"line":156,"column":8},"end":{"line":159,"column":18}},{"start":{"line":160,"column":8},"end":{"line":163,"column":18}},{"start":{"line":164,"column":8},"end":{"line":169,"column":18}},{"start":{"line":170,"column":8},"end":{"line":173,"column":18}},{"start":{"line":174,"column":8},"end":{"line":176,"column":19}}]},"5":{"line":153,"type":"cond-expr","locations":[{"start":{"line":153,"column":28},"end":{"line":153,"column":49}},{"start":{"line":153,"column":52},"end":{"line":153,"column":74}}]},"6":{"line":165,"type":"cond-expr","locations":[{"start":{"line":165,"column":39},"end":{"line":165,"column":60}},{"start":{"line":165,"column":63},"end":{"line":165,"column":84}}]},"7":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":8},"end":{"line":193,"column":8}},{"start":{"line":193,"column":8},"end":{"line":193,"column":8}}]},"8":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":8},"end":{"line":200,"column":8}},{"start":{"line":200,"column":8},"end":{"line":200,"column":8}}]},"9":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":12},"end":{"line":202,"column":12}},{"start":{"line":202,"column":12},"end":{"line":202,"column":12}}]},"10":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":12},"end":{"line":212,"column":12}},{"start":{"line":212,"column":12},"end":{"line":212,"column":12}}]},"11":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":8},"end":{"line":232,"column":8}},{"start":{"line":232,"column":8},"end":{"line":232,"column":8}}]},"12":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":16},"end":{"line":237,"column":16}},{"start":{"line":237,"column":16},"end":{"line":237,"column":16}}]},"13":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":8},"end":{"line":245,"column":8}},{"start":{"line":245,"column":8},"end":{"line":245,"column":8}}]},"14":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":8},"end":{"line":267,"column":8}},{"start":{"line":267,"column":8},"end":{"line":267,"column":8}}]},"15":{"line":303,"type":"if","locations":[{"start":{"line":303,"column":8},"end":{"line":303,"column":8}},{"start":{"line":303,"column":8},"end":{"line":303,"column":8}}]},"16":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":8},"end":{"line":322,"column":8}},{"start":{"line":322,"column":8},"end":{"line":322,"column":8}}]},"17":{"line":328,"type":"if","locations":[{"start":{"line":328,"column":16},"end":{"line":328,"column":16}},{"start":{"line":328,"column":16},"end":{"line":328,"column":16}}]}},"code":["/**"," * The pathfinding visualization."," * It uses raphael.js to show the grids."," */","var View = {","    nodeSize: 30, // width and height of a single node, in pixel","    nodeStyle: {","        normal: {","            fill: 'white',","            'stroke-opacity': 0.2, // the border","        },","        blocked: {","            fill: 'grey',","            'stroke-opacity': 0.2,","        },","        start: {","            fill: '#0d0',","            'stroke-opacity': 0.2,","        },","        end: {","            fill: '#e40',","            'stroke-opacity': 0.2,","        },","        opened: {","            fill: '#98fb98',","            'stroke-opacity': 0.2,","        },","        closed: {","            fill: '#afeeee',","            'stroke-opacity': 0.2,","        },","        failed: {","            fill: '#ff8888',","            'stroke-opacity': 0.2,","        },","        tested: {","            fill: '#e5e5e5',","            'stroke-opacity': 0.2,","        },","    },","    nodeColorizeEffect: {","        duration: 50,","    },","    nodeZoomEffect: {","        duration: 200,","        transform: 's1.2', // scale by 1.2x","        transformBack: 's1.0',","    },","    pathStyle: {","        stroke: 'yellow',","        'stroke-width': 3,","    },","    supportedOperations: ['opened', 'closed', 'tested'],","    init: function(opts) {","        this.numCols      = opts.numCols;","        this.numRows      = opts.numRows;","        this.paper        = Raphael('draw_area');","        this.$stats       = $('#stats');","    },","    /**","     * Generate the grid asynchronously.","     * This method will be a very expensive task.","     * Therefore, in order to not to block the rendering of browser ui,","     * I decomposed the task into smaller ones. Each will only generate a row.","     */","    generateGrid: function(callback) {","        var i, j, x, y,","            rect,","            normalStyle, nodeSize,","            createRowTask, sleep, tasks,","            nodeSize    = this.nodeSize,","            normalStyle = this.nodeStyle.normal,","            numCols     = this.numCols,","            numRows     = this.numRows,","            paper       = this.paper,","            rects       = this.rects = [],","            $stats      = this.$stats;","","        paper.setSize(numCols * nodeSize, numRows * nodeSize);","","        createRowTask = function(rowId) {","            return function(done) {","                rects[rowId] = [];","                for (j = 0; j < numCols; ++j) {","                    x = j * nodeSize;","                    y = rowId * nodeSize;","","                    rect = paper.rect(x, y, nodeSize, nodeSize);","                    rect.attr(normalStyle);","                    rects[rowId].push(rect);","                }","                $stats.text(","                    'generating grid ' +","                    Math.round((rowId + 1) / numRows * 100) + '%'","                );","                done(null);","            };","        };","","        sleep = function(done) {","            setTimeout(function() {","                done(null);","            }, 0);","        };","","        tasks = [];","        for (i = 0; i < numRows; ++i) {","            tasks.push(createRowTask(i));","            tasks.push(sleep);","        }","","        async.series(tasks, function() {","            if (callback) {","                callback();","            }","        });","    },","    setStartPos: function(gridX, gridY) {","        var coord = this.toPageCoordinate(gridX, gridY);","        if (!this.startNode) {","            this.startNode = this.paper.rect(","                coord[0],","                coord[1],","                this.nodeSize,","                this.nodeSize","            ).attr(this.nodeStyle.normal)","             .animate(this.nodeStyle.start, 1000);","        } else {","            this.startNode.attr({ x: coord[0], y: coord[1] }).toFront();","        }","    },","    setEndPos: function(gridX, gridY) {","        var coord = this.toPageCoordinate(gridX, gridY);","        if (!this.endNode) {","            this.endNode = this.paper.rect(","                coord[0],","                coord[1],","                this.nodeSize,","                this.nodeSize","            ).attr(this.nodeStyle.normal)","             .animate(this.nodeStyle.end, 1000);","        } else {","            this.endNode.attr({ x: coord[0], y: coord[1] }).toFront();","        }","    },","    /**","     * Set the attribute of the node at the given coordinate.","     */","    setAttributeAt: function(gridX, gridY, attr, value) {","        var color, nodeStyle = this.nodeStyle;","        switch (attr) {","        case 'walkable':","            color = value ? nodeStyle.normal.fill : nodeStyle.blocked.fill;","            this.setWalkableAt(gridX, gridY, value);","            break;","        case 'opened':","            this.colorizeNode(this.rects[gridY][gridX], nodeStyle.opened.fill);","            this.setCoordDirty(gridX, gridY, true);","            break;","        case 'closed':","            this.colorizeNode(this.rects[gridY][gridX], nodeStyle.closed.fill);","            this.setCoordDirty(gridX, gridY, true);","            break;","        case 'tested':","            color = (value === true) ? nodeStyle.tested.fill : nodeStyle.normal.fill;","","            this.colorizeNode(this.rects[gridY][gridX], color);","            this.setCoordDirty(gridX, gridY, true);","            break;","        case 'parent':","            // XXX: Maybe draw a line from this node to its parent?","            // This would be expensive.","            break;","        default:","            console.error('unsupported operation: ' + attr + ':' + value);","            return;","        }","    },","    colorizeNode: function(node, color) {","        node.animate({","            fill: color","        }, this.nodeColorizeEffect.duration);","    },","    zoomNode: function(node) {","        node.toFront().attr({","            transform: this.nodeZoomEffect.transform,","        }).animate({","            transform: this.nodeZoomEffect.transformBack,","        }, this.nodeZoomEffect.duration);","    },","    setWalkableAt: function(gridX, gridY, value) {","        var node, i, blockedNodes = this.blockedNodes;","        if (!blockedNodes) {","            blockedNodes = this.blockedNodes = new Array(this.numRows);","            for (i = 0; i < this.numRows; ++i) {","                blockedNodes[i] = [];","            }","        }","        node = blockedNodes[gridY][gridX];","        if (value) {","            // clear blocked node","            if (node) {","                this.colorizeNode(node, this.rects[gridY][gridX].attr('fill'));","                this.zoomNode(node);","                setTimeout(function() {","                    node.remove();","                }, this.nodeZoomEffect.duration);","                blockedNodes[gridY][gridX] = null;","            }","        } else {","            // draw blocked node","            if (node) {","                return;","            }","            node = blockedNodes[gridY][gridX] = this.rects[gridY][gridX].clone();","            this.colorizeNode(node, this.nodeStyle.blocked.fill);","            this.zoomNode(node);","        }","    },","    clearFootprints: function() {","        var i, x, y, coord, coords = this.getDirtyCoords();","        for (i = 0; i < coords.length; ++i) {","            coord = coords[i];","            x = coord[0];","            y = coord[1];","            this.rects[y][x].attr(this.nodeStyle.normal);","            this.setCoordDirty(x, y, false);","        }","    },","    clearBlockedNodes: function() {","        var i, j, blockedNodes = this.blockedNodes;","        if (!blockedNodes) {","            return;","        }","        for (i = 0; i < this.numRows; ++i) {","            for (j = 0 ;j < this.numCols; ++j) {","                if (blockedNodes[i][j]) {","                    blockedNodes[i][j].remove();","                    blockedNodes[i][j] = null;","                }","            }","        }","    },","    drawPath: function(path) {","        if (!path.length) {","            return;","        }","        var svgPath = this.buildSvgPath(path);","        this.path = this.paper.path(svgPath).attr(this.pathStyle);","    },","    /**","     * Given a path, build its SVG represention.","     */","    buildSvgPath: function(path) {","        var i, strs = [], size = this.nodeSize;","","        strs.push('M' + (path[0][0] * size + size / 2) + ' ' +","                  (path[0][1] * size + size / 2));","        for (i = 1; i < path.length; ++i) {","            strs.push('L' + (path[i][0] * size + size / 2) + ' ' +","                      (path[i][1] * size + size / 2));","        }","","        return strs.join('');","    },","    clearPath: function() {","        if (this.path) {","            this.path.remove();","        }","    },","    /**","     * Helper function to convert the page coordinate to grid coordinate","     */","    toGridCoordinate: function(pageX, pageY) {","        return [","            Math.floor(pageX / this.nodeSize),","            Math.floor(pageY / this.nodeSize)","        ];","    },","    /**","     * helper function to convert the grid coordinate to page coordinate","     */","    toPageCoordinate: function(gridX, gridY) {","        return [","            gridX * this.nodeSize,","            gridY * this.nodeSize","        ];","    },","    showStats: function(opts) {","        var texts = [","            'length: ' + Math.round(opts.pathLength * 100) / 100,","            'time: ' + opts.timeSpent + 'ms',","            'operations: ' + opts.operationCount","        ];","        $('#stats').show().html(texts.join('<br>'));","    },","    setCoordDirty: function(gridX, gridY, isDirty) {","        var x, y,","            numRows = this.numRows,","            numCols = this.numCols,","            coordDirty;","","        if (this.coordDirty === undefined) {","            coordDirty = this.coordDirty = [];","            for (y = 0; y < numRows; ++y) {","                coordDirty.push([]);","                for (x = 0; x < numCols; ++x) {","                    coordDirty[y].push(false);","                }","            }","        }","","        this.coordDirty[gridY][gridX] = isDirty;","    },","    getDirtyCoords: function() {","        var x, y,","            numRows = this.numRows,","            numCols = this.numCols,","            coordDirty = this.coordDirty,","            coords = [];","","        if (coordDirty === undefined) {","            return [];","        }","","        for (y = 0; y < numRows; ++y) {","            for (x = 0; x < numCols; ++x) {","                if (coordDirty[y][x]) {","                    coords.push([x, y]);","                }","            }","        }","        return coords;","    },","};",""],"l":{"5":1,"55":0,"56":0,"57":0,"58":0,"67":0,"79":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"88":0,"89":0,"90":0,"92":0,"96":0,"100":0,"101":0,"102":0,"106":0,"107":0,"108":0,"109":0,"112":0,"113":0,"114":0,"119":0,"120":0,"121":0,"129":0,"133":0,"134":0,"135":0,"143":0,"150":0,"151":0,"153":0,"154":0,"155":0,"157":0,"158":0,"159":0,"161":0,"162":0,"163":0,"165":0,"167":0,"168":0,"169":0,"173":0,"175":0,"176":0,"180":0,"185":0,"192":0,"193":0,"194":0,"195":0,"196":0,"199":0,"200":0,"202":0,"203":0,"204":0,"205":0,"206":0,"208":0,"212":0,"213":0,"215":0,"216":0,"217":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"231":0,"232":0,"233":0,"235":0,"236":0,"237":0,"238":0,"239":0,"245":0,"246":0,"248":0,"249":0,"255":0,"257":0,"259":0,"260":0,"264":0,"267":0,"268":0,"275":0,"284":0,"290":0,"295":0,"298":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"313":0,"316":0,"322":0,"323":0,"326":0,"327":0,"328":0,"329":0,"333":0}}}